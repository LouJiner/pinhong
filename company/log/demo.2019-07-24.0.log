2019-07-24 08:33:13,653 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 14680 (D:\company\target\classes started by 用户 in D:\company)
2019-07-24 08:33:13,663 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 08:33:13,663 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 08:33:15,983 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.0 seconds (JVM running for 4.605)
2019-07-24 08:35:14,135 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 16744 (D:\company\target\classes started by 用户 in D:\company)
2019-07-24 08:35:14,135 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 08:35:14,135 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 08:35:16,425 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 2.71 seconds (JVM running for 3.86)
2019-07-24 08:35:46,272 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit 0,4 
2019-07-24 08:35:46,272 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 08:35:46,272 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit 0,4 
2019-07-24 08:35:46,273 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 08:35:46,301 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 08:35:46,301 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 08:35:46,301 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 08:35:46,301 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 08:35:46,334 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 08:35:46,334 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 08:35:46,335 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 08:35:46,335 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 08:35:46,372 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 08:35:55,670 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 08:35:55,672 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 08:35:55,673 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit 0,4 
2019-07-24 08:35:55,670 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 08:35:55,676 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit 0,4 
2019-07-24 08:35:55,676 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 08:35:55,676 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 08:35:55,676 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 08:35:55,679 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 08:35:55,680 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 08:35:55,681 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 08:35:55,681 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 08:35:55,682 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 08:35:59,419 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 08:35:59,420 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 08:35:59,420 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 08:35:59,420 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 08:35:59,421 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit 0,4 
2019-07-24 08:35:59,422 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit 0,4 
2019-07-24 08:35:59,422 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 08:35:59,423 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 08:35:59,423 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 08:35:59,424 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 08:35:59,425 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 08:35:59,425 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 08:35:59,425 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 08:38:47,000 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 08:38:47,001 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 08:38:47,002 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 08:38:47,002 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 08:38:47,003 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit 0,4 
2019-07-24 08:38:47,004 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 08:38:47,004 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit 0,4 
2019-07-24 08:38:47,005 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 08:38:47,006 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 08:38:47,007 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 08:38:47,008 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 08:38:47,010 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 08:38:47,010 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 09:07:39,272 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 09:07:39,276 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 09:07:39,276 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:07:39,279 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit 0,4 
2019-07-24 09:07:39,279 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:07:39,281 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit 0,4 
2019-07-24 09:07:39,281 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:07:39,281 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:07:39,282 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 09:07:39,283 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 09:07:39,284 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 09:07:39,284 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 09:07:39,286 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 09:07:41,139 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 09:07:41,140 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:07:41,143 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 09:07:41,144 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 09:07:41,144 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:07:41,146 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 09:07:41,147 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 09:07:42,128 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 16744 (D:\company\target\classes started by 用户 in D:\company)
2019-07-24 09:07:42,129 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 09:07:42,129 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 09:07:43,114 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.033 seconds (JVM running for 1950.542)
2019-07-24 09:07:44,510 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 09:07:44,513 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:07:44,520 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 09:07:44,520 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 09:07:44,520 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:07:44,525 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 09:07:44,539 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 09:07:53,049 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 4844 (D:\company\target\classes started by 用户 in D:\company)
2019-07-24 09:07:53,053 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 09:07:53,054 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 09:07:55,403 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 2.862 seconds (JVM running for 4.279)
2019-07-24 09:08:32,761 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 09:08:32,761 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 09:08:32,784 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:08:32,784 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:08:32,819 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 09:08:32,820 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 09:08:32,857 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 09:08:35,246 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 09:08:35,247 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:08:35,250 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 09:08:35,251 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:08:35,254 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 09:08:35,256 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 09:08:35,258 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 09:09:45,170 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 09:09:45,173 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:09:45,173 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 09:09:45,173 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:09:45,180 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 09:09:45,183 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 09:09:45,182 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 09:09:45,185 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: null
2019-07-24 09:09:45,185 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: null
2019-07-24 09:09:45,185 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 09:09:45,186 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 09:09:45,307 ERROR (BaseController.java:295)- 系统异常:
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select * from product order by productId desc limit ?,4
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select * from product order by productId desc limit ?,4
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy63.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy67.selTop4Product(Unknown Source)
	at com.zryx.company.service.imp.ProductServiceImpl.selTop4Product(ProductServiceImpl.java:56)
	at com.zryx.company.controller.ProductController.selTop4Product(ProductController.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy78.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
2019-07-24 09:09:45,307 ERROR (BaseController.java:295)- 系统异常:
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select * from product order by productId desc limit ?,4
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select * from product order by productId desc limit ?,4
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy63.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy67.selTop4Product(Unknown Source)
	at com.zryx.company.service.imp.ProductServiceImpl.selTop4Product(ProductServiceImpl.java:56)
	at com.zryx.company.controller.ProductController.selTop4Product(ProductController.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy78.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
2019-07-24 09:09:46,539 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 4844 (D:\company\target\classes started by 用户 in D:\company)
2019-07-24 09:09:46,540 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 09:09:46,540 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 09:09:47,408 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.897 seconds (JVM running for 116.284)
2019-07-24 09:30:16,373 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 09:30:16,375 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: null
2019-07-24 09:30:16,379 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 09:30:16,379 ERROR (BaseController.java:295)- 系统异常:
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select * from product order by productId desc limit ?,4
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select * from product order by productId desc limit ?,4
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy63.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy82.selTop4Product(Unknown Source)
	at com.zryx.company.service.imp.ProductServiceImpl.selTop4Product(ProductServiceImpl.java:56)
	at com.zryx.company.controller.ProductController.selTop4Product(ProductController.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy78.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
2019-07-24 09:30:16,380 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:30:16,383 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 09:30:16,385 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: null
2019-07-24 09:30:16,390 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 09:30:16,390 ERROR (BaseController.java:295)- 系统异常:
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select * from product order by productId desc limit ?,4
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select * from product order by productId desc limit ?,4
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy63.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy82.selTop4Product(Unknown Source)
	at com.zryx.company.service.imp.ProductServiceImpl.selTop4Product(ProductServiceImpl.java:56)
	at com.zryx.company.controller.ProductController.selTop4Product(ProductController.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,4' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy78.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
2019-07-24 09:30:16,391 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 09:30:16,397 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:30:16,406 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 09:30:16,413 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 09:30:19,313 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 4844 (D:\company\target\classes started by 用户 in D:\company)
2019-07-24 09:30:19,313 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 09:30:19,314 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 09:30:20,180 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.888 seconds (JVM running for 1349.055)
2019-07-24 09:30:23,389 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 09:30:23,391 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:30:23,393 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 09:30:23,393 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 09:30:23,393 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:30:23,397 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 09:30:23,409 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 09:31:47,510 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 09:31:47,511 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:31:47,512 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 09:31:47,514 ERROR (BaseController.java:295)- 系统异常:Name for argument type [int] not available, and parameter name information not found in class file either.
java.lang.IllegalArgumentException: Name for argument type [int] not available, and parameter name information not found in class file either.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.updateNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:172)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.getNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:149)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:98)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 09:31:47,514 ERROR (BaseController.java:295)- 系统异常:Name for argument type [int] not available, and parameter name information not found in class file either.
java.lang.IllegalArgumentException: Name for argument type [int] not available, and parameter name information not found in class file either.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.updateNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:172)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.getNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:149)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:98)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 09:31:47,513 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:31:47,517 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 09:31:47,523 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 09:31:47,526 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 09:31:49,063 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 4844 (D:\company\target\classes started by 用户 in D:\company)
2019-07-24 09:31:49,064 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 09:31:49,064 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 09:31:49,814 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.777 seconds (JVM running for 1438.691)
2019-07-24 09:31:54,065 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 09:31:54,069 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:31:54,073 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 09:31:54,075 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 09:31:54,076 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 09:31:54,076 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:31:54,077 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 09:31:54,079 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 09:31:54,081 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 09:31:54,082 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 09:31:54,082 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 09:31:54,087 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 09:31:54,090 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 09:32:42,412 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 09:32:42,414 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:32:42,414 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 09:32:42,414 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:32:42,417 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 09:32:42,417 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 09:32:42,419 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 09:32:42,419 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 09:32:42,419 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 09:32:42,421 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 09:32:42,423 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 09:32:42,427 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 09:32:42,431 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 09:34:31,741 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 09:34:31,742 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:34:31,742 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 09:34:31,742 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:34:31,744 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 09:34:31,745 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 09:34:31,745 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 09:34:31,745 ERROR (BaseController.java:295)- 系统异常:Optional int parameter 'from' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
java.lang.IllegalStateException: Optional int parameter 'from' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleNullValue(AbstractNamedValueMethodArgumentResolver.java:245)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:115)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 09:34:31,745 ERROR (BaseController.java:295)- 系统异常:Optional int parameter 'from' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
java.lang.IllegalStateException: Optional int parameter 'from' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleNullValue(AbstractNamedValueMethodArgumentResolver.java:245)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:115)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 09:34:34,479 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 4844 (D:\company\target\classes started by 用户 in D:\company)
2019-07-24 09:34:34,480 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 09:34:34,480 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 09:34:35,463 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.027 seconds (JVM running for 1604.34)
2019-07-24 09:34:35,783 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 09:34:35,791 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:34:35,794 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 09:34:35,795 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 09:34:35,798 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:34:35,800 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 09:34:35,802 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 09:34:35,802 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 09:34:35,810 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 09:34:35,813 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 09:34:35,814 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 09:34:35,814 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 09:34:35,828 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 09:34:47,764 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 2128 (D:\company\target\classes started by 用户 in D:\company)
2019-07-24 09:34:47,765 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 09:34:47,765 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 09:34:50,047 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 2.749 seconds (JVM running for 3.885)
2019-07-24 09:34:59,183 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 09:34:59,183 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 09:34:59,183 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 09:34:59,186 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 09:34:59,230 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 09:34:59,230 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 09:34:59,229 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:34:59,229 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:34:59,270 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 09:34:59,270 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 09:34:59,271 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 09:34:59,273 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 09:34:59,313 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 09:43:10,047 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 09:43:10,048 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:43:10,048 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 09:43:10,049 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:43:10,052 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 09:43:10,053 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 09:43:10,054 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 09:43:10,054 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 09:43:10,055 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 09:43:10,056 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 09:43:10,057 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 09:43:10,057 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 09:43:10,057 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 09:51:18,572 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 09:51:18,573 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 09:51:18,573 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:51:18,574 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:51:18,579 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 09:51:18,579 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 09:51:18,579 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 09:51:18,580 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 09:51:18,580 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 09:51:18,582 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 09:51:18,582 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 09:51:18,583 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 09:51:18,585 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 09:51:21,255 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 09:51:21,255 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:51:21,259 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 09:51:21,259 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:51:21,259 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 09:51:21,261 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 09:51:21,262 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 09:51:21,262 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 09:51:21,262 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 09:51:21,263 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 09:51:21,263 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 09:51:21,265 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 09:51:21,267 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 09:57:45,019 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 6856 (D:\company\target\classes started by 用户 in D:\company)
2019-07-24 09:57:45,023 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 09:57:45,025 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 09:57:48,006 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.619 seconds (JVM running for 5.96)
2019-07-24 09:59:32,724 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 19508 (D:\company\target\classes started by 用户 in D:\company)
2019-07-24 09:59:32,729 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 09:59:32,731 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 09:59:36,873 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.924 seconds (JVM running for 6.968)
2019-07-24 09:59:47,845 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 7544 (D:\company\target\classes started by 用户 in D:\company)
2019-07-24 09:59:47,851 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 09:59:47,852 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 09:59:51,128 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.148 seconds (JVM running for 6.115)
2019-07-24 10:00:13,261 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 10:00:13,261 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 10:00:13,261 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 10:00:13,262 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 10:00:13,285 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 10:00:13,285 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 10:00:13,285 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:00:13,285 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:00:13,313 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 10:00:13,314 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 10:00:13,315 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 10:00:13,365 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 10:00:28,508 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 10:00:44,765 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 14032 (D:\company\target\classes started by 用户 in D:\company)
2019-07-24 10:00:44,769 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 10:00:44,770 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 10:00:48,545 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.36 seconds (JVM running for 5.908)
2019-07-24 10:01:03,164 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 21256 (D:\company\target\classes started by 用户 in D:\company)
2019-07-24 10:01:03,167 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 10:01:03,168 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 10:01:06,050 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.625 seconds (JVM running for 5.425)
2019-07-24 10:02:43,832 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 10832 (D:\company\target\classes started by 用户 in D:\company)
2019-07-24 10:02:43,832 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 10:02:43,832 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 10:02:45,972 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 2.604 seconds (JVM running for 4.167)
2019-07-24 10:02:54,211 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 10:02:54,235 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:02:54,262 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 10:02:54,343 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 10:03:11,437 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 10:03:11,440 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:03:11,447 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 10:03:11,451 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 10:10:09,833 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:10:09,836 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:10:09,840 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:10:09,841 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:11:56,740 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:11:56,741 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:11:56,743 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:11:56,744 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:15:10,218 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:15:10,219 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:15:10,222 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:15:10,223 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:15:42,367 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:15:42,368 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:15:42,371 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:15:42,372 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:15:57,336 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:15:57,340 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:15:57,344 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:15:57,345 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:16:24,455 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:16:24,458 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:16:24,460 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:16:24,461 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:16:49,496 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:16:49,497 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:16:49,500 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:16:49,501 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:17:01,405 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:17:01,407 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:17:01,411 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:17:01,412 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:17:13,086 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:17:13,088 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:17:13,091 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:17:13,092 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:17:23,162 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:17:23,163 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:17:23,165 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:17:23,166 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:17:54,558 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:17:54,558 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:17:54,560 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:17:54,561 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:17:57,125 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:17:57,126 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:17:57,128 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:17:57,131 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:23:16,643 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:23:16,644 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:23:16,647 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:23:16,648 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:23:32,245 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:23:32,246 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:23:32,251 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:23:32,254 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:23:42,915 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 10:23:42,916 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:23:42,921 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 10:23:42,924 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 10:25:18,965 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:25:18,966 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:25:18,968 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:25:18,970 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:33:37,494 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 10:33:37,495 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:33:37,498 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 10:33:37,500 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 10:33:37,500 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:33:37,502 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 10:33:37,502 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 10:33:37,503 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 10:33:37,504 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 10:33:37,505 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 10:33:37,506 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 10:33:37,506 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 10:33:37,507 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 10:33:43,194 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 10:33:43,195 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:33:43,198 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 10:33:43,199 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 10:33:43,199 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:33:43,200 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 10:33:43,202 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 10:33:43,202 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 10:33:43,203 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 10:33:43,204 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 10:33:43,205 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 10:33:43,205 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 10:33:43,207 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 10:34:14,329 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by newsId 
2019-07-24 10:34:14,330 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:34:14,333 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 13
2019-07-24 10:34:14,335 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "庆十一商品促销",
    "content" : "\t为了庆祝十一国庆节，现公司所有电子商品进行促销活动，活动期间所有商品打五折。",
    "writeDate" : 1562457600000
  }, {
    "newsId" : 2,
    "title" : "爱国者数码相机今日七折优惠",
    "content" : "为了答谢广大用户，爱国者数码相机今日七折优惠。",
    "writeDate" : 1557014400000
  }, {
    "newsId" : 3,
    "title" : "黄金周最热销手机汇总导购",
    "content" : "在这个被看作是我国最大的消费高峰之一的七天长假中，那些准备买新手机的朋友们是不是已经买到了称心如意的手机呢？今天手机中国编辑就把从北京几大手机卖场了解到的这七天长假中几款最热卖的机型做个总结，相信这些机型也是大多数朋友认可和喜爱的，看看你的选择是不是和很多朋友一样，也为还没选好目标的朋友做个推荐",
    "writeDate" : 1565222400000
  }, {
    "newsId" : 4,
    "title" : "时尚浪漫情侣手机配对推荐",
    "content" : "对于商家来说，十一以后的几天依然是畅销的好时候，各种优惠活动仍然在各大卖场如火如荼的进行。既然是优惠购物好时机，小编今天就为情侣们推荐了三对最登对情侣手机，甜蜜的你们一定能选购到适合他她的最登对手机。",
    "writeDate" : 1557100800000
  }, {
    "newsId" : 5,
    "title" : "三星女性翻盖E428行货仅1180",
    "content" : "以其独特的气质，深受女性消费者的喜爱。目前携节后余威，该机特价仅售：1180元，有兴趣的女性朋友可以多考虑一下。",
    "writeDate" : 1565049600000
  }, {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长假弹指间便过去了，相信大家都和小编一样有一种意犹未尽的感觉。不知道大家有在国庆之后购买数码相机的打算没有，如果有的话，这篇文章就是为您而准备的。",
    "writeDate" : 1539302400000
  }, {
    "newsId" : 8,
    "title" : "单反与镜头组合",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我们今天的主角单反相机或者交换镜头，但相信还是有不少朋友会选择避开这个万众瞩目的消费热潮，毕竟黄金周往往是好卖的货早早卖空涨价，难卖的货堆积如山又常被JS当作欺负菜鸟的转型诱饵……因此今天，在黄金周即将结束之时，我们还是一起来看看节后重会“理性时代”的市场上有哪些单反机型和交换镜头值得我们关注吧：",
    "writeDate" : 1530835200000
  }, {
    "newsId" : 9,
    "title" : "MP4关注度排行TOP10",
    "content" : "黄金周过后，很多行业都要盘点一下自己的销售业绩，虽然MP4现在还不属于大众消费品，但是也不能例外。十一期间购买MP4作为出游装备或者过节礼品的情况让这个市场也升温了不少，这也导致MP4关注排行的TOP 10名次有了不小变化。",
    "writeDate" : 1307491200000
  }, {
    "newsId" : 10,
    "title" : "理光R5不到二千",
    "content" : "沈阳行情 凭借R系列的出众表现，理光在家用市场一直有着较高的知名度，随着R7的上市，老型R系列机型也面临退市的边缘，近日笔者了解到，较早上市的R5的售价已经突破二千大关，该机拥有七倍变焦镜头、CCD防抖以及28mm的广角等功能，卖点非常突出，近期打算购买数码相机的家庭不妨重点考虑一下这款产品。 ",
    "writeDate" : 1186358400000
  }, {
    "newsId" : 11,
    "title" : "使用ideal+mybatis添加新闻",
    "content" : "新闻很好看",
    "writeDate" : 1563235200000
  }, {
    "newsId" : 15,
    "title" : "六六六",
    "content" : "哒哒哒哒\r\n                ",
    "writeDate" : 1563321600000
  }, {
    "newsId" : 53,
    "title" : "fweff",
    "content" : "fgqgvavqvv",
    "writeDate" : 1561996800000
  } ]
}
2019-07-24 10:37:35,930 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 10:37:35,931 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:37:35,934 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 10:37:35,935 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 10:41:22,554 ERROR (BaseController.java:295)- 系统异常:Optional int parameter 'id' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
java.lang.IllegalStateException: Optional int parameter 'id' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleNullValue(AbstractNamedValueMethodArgumentResolver.java:245)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:115)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 10:43:50,804 ERROR (BaseController.java:295)- 系统异常:Optional int parameter 'id' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
java.lang.IllegalStateException: Optional int parameter 'id' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleNullValue(AbstractNamedValueMethodArgumentResolver.java:245)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:115)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 10:43:53,486 ERROR (BaseController.java:295)- 系统异常:Optional int parameter 'id' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
java.lang.IllegalStateException: Optional int parameter 'id' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleNullValue(AbstractNamedValueMethodArgumentResolver.java:245)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:115)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 10:43:58,090 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 10:43:58,091 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:43:58,097 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 10:43:58,099 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 10:44:01,118 ERROR (BaseController.java:295)- 系统异常:Optional int parameter 'id' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
java.lang.IllegalStateException: Optional int parameter 'id' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleNullValue(AbstractNamedValueMethodArgumentResolver.java:245)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:115)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 10:46:30,786 ERROR (BaseController.java:295)- 系统异常:Optional int parameter 'id' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
java.lang.IllegalStateException: Optional int parameter 'id' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleNullValue(AbstractNamedValueMethodArgumentResolver.java:245)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:115)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 10:46:42,875 ERROR (BaseController.java:295)- 系统异常:Optional int parameter 'id' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
java.lang.IllegalStateException: Optional int parameter 'id' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleNullValue(AbstractNamedValueMethodArgumentResolver.java:245)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:115)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 10:49:50,349 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:49:50,350 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:49:50,353 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:49:50,354 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:50:23,166 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:50:23,167 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:50:23,169 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:50:23,170 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:51:42,430 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:51:42,431 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:51:42,433 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:51:42,434 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:52:26,540 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:52:26,541 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:52:26,544 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:52:26,547 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:58:26,592 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:58:26,594 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:58:26,597 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:58:26,598 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:58:28,134 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:58:28,135 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:58:28,137 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:58:28,138 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:58:32,897 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:58:32,898 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:58:32,901 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:58:32,902 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 10:58:40,575 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 10:58:40,576 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:58:40,581 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 10:58:40,582 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 10:58:43,339 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 10:58:43,340 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:58:43,341 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:58:43,342 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:03:26,978 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:03:26,979 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:03:26,981 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:03:26,984 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:03:29,873 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:03:29,874 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:03:29,876 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:03:29,878 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:03:30,757 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:03:30,758 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:03:30,760 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:03:30,761 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:03:31,161 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:03:31,162 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:03:31,163 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:03:31,166 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:03:31,627 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:03:31,628 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:03:31,630 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:03:31,632 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:03:33,295 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 11:03:33,296 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:03:33,299 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 11:03:33,300 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 11:03:34,463 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:03:34,465 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:03:34,468 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:03:34,469 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:04:02,094 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 9852 (D:\company\target\classes started by 用户 in D:\company)
2019-07-24 11:04:02,094 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 11:04:02,094 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 11:04:04,254 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 2.62 seconds (JVM running for 4.262)
2019-07-24 11:05:52,558 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 19408 (D:\company\target\classes started by 用户 in D:\company)
2019-07-24 11:05:52,558 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 11:05:52,558 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 11:05:56,505 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.567 seconds (JVM running for 5.66)
2019-07-24 11:06:12,238 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 11:06:12,238 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 11:06:12,238 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 11:06:12,239 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 11:06:12,263 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 11:06:12,263 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:06:12,263 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:06:12,263 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 11:06:12,289 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 11:06:12,289 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 11:06:12,290 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 11:06:12,292 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 11:06:12,326 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 11:06:16,045 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 11:06:16,046 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 11:06:16,047 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:06:16,047 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:06:16,055 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 11:06:16,056 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 11:06:16,056 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 11:06:16,057 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 11:06:16,057 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 11:06:16,058 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 11:06:16,059 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 11:06:16,060 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 11:06:16,065 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 11:06:18,162 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 11:06:18,163 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:06:18,169 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 11:06:18,171 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 11:06:19,260 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:06:19,262 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:06:19,264 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:06:19,266 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:07:07,035 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:07:07,036 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:07:07,038 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:07:07,042 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:13:19,028 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:13:19,030 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:13:19,034 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:13:19,038 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:13:21,734 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 11:13:21,735 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:13:21,739 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 11:13:21,740 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 11:13:36,149 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:13:36,150 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 8(Integer)
2019-07-24 11:13:36,153 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:13:36,154 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }
}
2019-07-24 11:13:38,093 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 11:13:38,093 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 11:13:38,094 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:13:38,094 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:13:38,099 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 11:13:38,099 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 11:13:38,099 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 11:13:38,099 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 11:13:38,100 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 11:13:38,100 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 11:13:38,102 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 11:13:38,102 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 11:13:38,103 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 11:13:41,680 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 11:13:41,682 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:13:41,685 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 11:13:41,686 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 11:13:43,412 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:13:43,413 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:13:43,416 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:13:43,417 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:40:30,977 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 11:40:30,979 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:40:30,996 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 11:40:31,003 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 11:40:32,195 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:40:32,196 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:40:32,200 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:40:32,202 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:41:50,248 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:41:50,250 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:41:50,254 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:41:50,255 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:44:05,274 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:44:05,277 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:44:05,279 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:44:05,280 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:44:06,332 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:44:06,333 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:44:06,334 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:44:06,335 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:44:07,147 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:44:07,148 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:44:07,150 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:44:07,151 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:44:09,388 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:44:09,392 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:44:09,394 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:44:09,396 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:44:12,006 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 11:44:12,007 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:44:12,011 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 11:44:12,012 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 11:44:12,880 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:44:12,881 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:44:12,882 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:44:12,883 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:45:25,462 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:45:25,463 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:45:25,465 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:45:25,466 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:45:27,829 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:45:27,830 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:45:27,832 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:45:27,833 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:46:47,169 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:46:47,171 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:46:47,172 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:46:47,173 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:47:08,499 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:47:08,500 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:47:08,502 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:47:08,503 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:47:13,379 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:47:13,380 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 11:47:13,381 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:47:13,382 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }
}
2019-07-24 11:47:22,470 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 11:47:22,471 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:47:22,473 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 11:47:22,474 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 11:47:22,474 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:47:22,475 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 11:47:22,477 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 11:47:22,480 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 11:47:22,479 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 11:47:22,482 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 11:47:22,484 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 11:47:22,485 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 11:47:22,487 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 11:53:19,791 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 11:53:19,792 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:53:19,793 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 11:53:19,794 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:53:19,797 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 11:53:19,800 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 11:53:19,802 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 11:53:19,806 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 11:53:19,807 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 11:53:19,807 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 11:53:19,808 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 11:53:19,809 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 11:53:19,809 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 11:53:21,205 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:53:21,206 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-24 11:53:21,208 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:53:21,209 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 11:53:22,954 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 11:53:22,954 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 11:53:22,955 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:53:22,955 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:53:22,956 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 11:53:22,957 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 11:53:22,957 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 11:53:22,957 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 11:53:22,958 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 11:53:22,958 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 11:53:22,958 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 11:53:22,959 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 11:53:22,960 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 11:53:30,990 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:53:30,991 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 7(Integer)
2019-07-24 11:53:30,992 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:53:30,993 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }
}
2019-07-24 11:53:32,455 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 11:53:32,455 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:53:32,455 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 11:53:32,456 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:53:32,457 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 11:53:32,458 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 11:53:32,458 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 11:53:32,458 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 11:53:32,458 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 11:53:32,459 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 11:53:32,460 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 11:53:32,461 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 11:53:32,462 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 11:53:33,565 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 11:53:33,565 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:53:33,567 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 11:53:33,568 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 11:53:34,859 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 11:53:34,859 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:53:34,860 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 11:53:34,861 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:53:34,862 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 11:53:34,862 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 11:53:34,863 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 11:53:34,863 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 11:53:34,863 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 11:53:34,867 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 11:53:34,866 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 11:53:34,867 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 11:53:34,869 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 11:53:35,776 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 11:53:35,776 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:53:35,779 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 11:53:35,783 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 11:54:02,246 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 11:54:02,247 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:54:02,249 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 11:54:02,250 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 11:54:06,026 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 11:54:06,026 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 11:54:06,029 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 11:54:06,030 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 19,
    "serialNumber" : "z11",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "b77",
    "price" : 190,
    "picture" : "hulu1.jpg",
    "description" : "葫芦鞋"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 21,
    "serialNumber" : "z12",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "v11",
    "price" : 201,
    "picture" : "hulu3.jpg",
    "description" : "葫芦鞋哈哈哈"
  } ]
}
2019-07-24 11:54:06,973 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 11:54:06,974 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 11:54:06,975 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 11:54:06,976 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "hulu4.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 12:51:18,175 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 20556 (G:\scsx\project\company\target\classes started by luojun in G:\scsx\project\company)
2019-07-24 12:51:18,199 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 12:51:18,200 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 12:51:21,228 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.815 seconds (JVM running for 6.658)
2019-07-24 12:52:15,392 ERROR (BaseController.java:295)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve com.zryx.company.mapper.ProductMapper.getAllProduct
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve com.zryx.company.mapper.ProductMapper.getAllProduct
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy68.getAllProduct(Unknown Source)
	at com.zryx.company.service.imp.ProductServiceImpl.getAllProduct(ProductServiceImpl.java:20)
	at com.zryx.company.controller.ProductController.initProduct(ProductController.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve com.zryx.company.mapper.ProductMapper.getAllProduct
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 68 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 78 common frames omitted
2019-07-24 12:52:16,404 ERROR (BaseController.java:295)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve com.zryx.company.mapper.ProductMapper.selTop4Product
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve com.zryx.company.mapper.ProductMapper.selTop4Product
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy68.selTop4Product(Unknown Source)
	at com.zryx.company.service.imp.ProductServiceImpl.selTop4Product(ProductServiceImpl.java:56)
	at com.zryx.company.controller.ProductController.selTop4Product(ProductController.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve com.zryx.company.mapper.ProductMapper.selTop4Product
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 68 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 78 common frames omitted
2019-07-24 12:52:17,422 ERROR (BaseController.java:295)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.selTop8News
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.selTop8News
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy65.selTop8News(Unknown Source)
	at com.zryx.company.service.imp.NewsServiceImpl.selTop8News(NewsServiceImpl.java:69)
	at com.zryx.company.controller.IndexController.initNews(IndexController.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.selTop8News
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 68 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 78 common frames omitted
2019-07-24 12:52:18,436 ERROR (BaseController.java:295)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve com.zryx.company.mapper.ProductMapper.selTop4Product
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve com.zryx.company.mapper.ProductMapper.selTop4Product
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy68.selTop4Product(Unknown Source)
	at com.zryx.company.service.imp.ProductServiceImpl.selTop4Product(ProductServiceImpl.java:56)
	at com.zryx.company.controller.ProductController.selTop4Product(ProductController.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve com.zryx.company.mapper.ProductMapper.selTop4Product
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 68 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 78 common frames omitted
2019-07-24 12:52:28,919 ERROR (BaseController.java:295)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve com.zryx.company.mapper.ProductMapper.getAllProduct
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve com.zryx.company.mapper.ProductMapper.getAllProduct
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy68.getAllProduct(Unknown Source)
	at com.zryx.company.service.imp.ProductServiceImpl.getAllProduct(ProductServiceImpl.java:20)
	at com.zryx.company.controller.ProductController.initProduct(ProductController.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve com.zryx.company.mapper.ProductMapper.getAllProduct
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 68 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 78 common frames omitted
2019-07-24 12:52:29,932 ERROR (BaseController.java:295)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve com.zryx.company.mapper.ProductMapper.selTop4Product
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve com.zryx.company.mapper.ProductMapper.selTop4Product
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy68.selTop4Product(Unknown Source)
	at com.zryx.company.service.imp.ProductServiceImpl.selTop4Product(ProductServiceImpl.java:56)
	at com.zryx.company.controller.ProductController.selTop4Product(ProductController.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve com.zryx.company.mapper.ProductMapper.selTop4Product
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 68 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 78 common frames omitted
2019-07-24 12:52:30,941 ERROR (BaseController.java:295)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve com.zryx.company.mapper.ProductMapper.selTop4Product
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve com.zryx.company.mapper.ProductMapper.selTop4Product
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy68.selTop4Product(Unknown Source)
	at com.zryx.company.service.imp.ProductServiceImpl.selTop4Product(ProductServiceImpl.java:56)
	at com.zryx.company.controller.ProductController.selTop4Product(ProductController.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/ProductMapper.xml
### The error may involve com.zryx.company.mapper.ProductMapper.selTop4Product
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 68 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 78 common frames omitted
2019-07-24 12:52:31,954 ERROR (BaseController.java:295)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.selTop8News
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.selTop8News
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy65.selTop8News(Unknown Source)
	at com.zryx.company.service.imp.NewsServiceImpl.selTop8News(NewsServiceImpl.java:69)
	at com.zryx.company.controller.IndexController.initNews(IndexController.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.selTop8News
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 68 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 78 common frames omitted
2019-07-24 12:52:32,235 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 20556 (G:\scsx\project\company\target\classes started by luojun in G:\scsx\project\company)
2019-07-24 12:52:32,235 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 12:52:32,235 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 12:52:32,830 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.642 seconds (JVM running for 78.26)
2019-07-24 12:52:34,797 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 12:52:34,797 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 12:52:34,797 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 12:52:34,816 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 12:52:34,847 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:52:34,847 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:52:34,847 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 12:52:34,847 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 12:52:34,886 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 12:52:34,886 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 12:52:34,886 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 12:52:34,888 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 12:52:34,917 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 12:52:38,915 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 12:52:38,915 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 12:52:38,916 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:52:38,916 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:52:38,918 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 12:52:38,920 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 12:52:38,920 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 12:52:38,921 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 12:52:38,923 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 12:52:38,926 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 12:52:38,926 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 12:52:38,927 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 12:52:38,928 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 12:52:40,546 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 12:52:40,548 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 7(Integer)
2019-07-24 12:52:40,565 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 12:52:40,566 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }
}
2019-07-24 12:52:43,958 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 12:52:43,959 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 12:52:43,959 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:52:43,960 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:52:43,963 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 12:52:43,963 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 12:52:43,964 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 12:52:43,964 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 12:52:43,964 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 12:52:43,966 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 12:52:43,967 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 12:52:43,969 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 12:52:43,969 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 12:52:44,771 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 12:52:44,772 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-24 12:52:44,775 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 12:52:44,776 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 12:52:49,057 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 12:52:49,058 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:52:49,062 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 12:52:49,065 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 12:52:54,824 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 12:52:54,825 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:52:54,830 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 12:52:54,832 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 12:53:13,538 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 12:53:13,539 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 12:53:13,543 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 12:53:13,731 ERROR (JsonUtil.java:129)- {msg=查询成功, code=0, data=com.zryx.company.model.Chat@1a99ea5b} 对象转Json串失败，失败原因：No serializer found for class java.util.logging.ErrorManager and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.HashMap["data"]->com.zryx.company.model.Chat["session"]->org.apache.catalina.session.StandardSessionFacade["servletContext"]->org.apache.catalina.core.ApplicationContextFacade["classLoader"]->org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader["resources"]->org.apache.catalina.webresources.StandardRoot["context"]->org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext["logger"]->org.apache.juli.logging.DirectJDKLog["logger"]->java.util.logging.Logger["parent"]->java.util.logging.Logger["parent"]->java.util.logging.Logger["parent"]->java.util.logging.Logger["parent"]->java.util.logging.LogManager$RootLogger["handlers"]->org.slf4j.bridge.SLF4JBridgeHandler[0]->org.slf4j.bridge.SLF4JBridgeHandler["errorManager"])
2019-07-24 12:53:24,046 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 12:53:24,047 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:53:24,055 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 12:53:24,057 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 17,
    "title" : "你好",
    "content" : "啊哈哈",
    "writer" : "111",
    "writeDate" : 1562774400000,
    "count" : 0
  }, {
    "messageId" : 18,
    "title" : "sdsadasd",
    "content" : "1qqqqq",
    "writer" : "qqqq",
    "writeDate" : 1563811200000,
    "count" : 0
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  }, {
    "messageId" : 20,
    "title" : "今天天气真好",
    "content" : "哈哈啊哈哈",
    "writer" : "罗军",
    "writeDate" : 1563897600000,
    "count" : 0
  } ]
}
2019-07-24 12:53:40,157 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 12:53:40,158 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 12:53:40,161 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 12:53:40,162 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-24 12:53:40,163 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 12:53:40,164 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 12:53:40,166 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 12:53:40,166 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 12:53:40,167 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 12:53:47,006 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 12:53:47,007 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:53:47,014 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 12:53:47,016 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 17,
    "title" : "你好",
    "content" : "啊哈哈",
    "writer" : "111",
    "writeDate" : 1562774400000,
    "count" : 0
  }, {
    "messageId" : 18,
    "title" : "sdsadasd",
    "content" : "1qqqqq",
    "writer" : "qqqq",
    "writeDate" : 1563811200000,
    "count" : 0
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  }, {
    "messageId" : 20,
    "title" : "今天天气真好",
    "content" : "哈哈啊哈哈",
    "writer" : "罗军",
    "writeDate" : 1563897600000,
    "count" : 0
  } ]
}
2019-07-24 12:53:48,623 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 12:53:48,623 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 12:53:48,624 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 12:53:48,624 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 12:53:48,627 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 12:53:48,629 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 12:53:48,628 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-24 12:53:48,632 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 59,
    "messageId" : 1,
    "content" : "哈哈哈哈",
    "writer" : "罗军",
    "writerDate" : 1563408000000
  }, {
    "revertId" : 62,
    "messageId" : 1,
    "content" : "今天天气真滴好",
    "writer" : "heihei",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 12:53:52,751 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 12:53:52,751 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:53:52,754 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 12:53:52,756 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 17,
    "title" : "你好",
    "content" : "啊哈哈",
    "writer" : "111",
    "writeDate" : 1562774400000,
    "count" : 0
  }, {
    "messageId" : 18,
    "title" : "sdsadasd",
    "content" : "1qqqqq",
    "writer" : "qqqq",
    "writeDate" : 1563811200000,
    "count" : 0
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  }, {
    "messageId" : 20,
    "title" : "今天天气真好",
    "content" : "哈哈啊哈哈",
    "writer" : "罗军",
    "writeDate" : 1563897600000,
    "count" : 0
  } ]
}
2019-07-24 12:53:56,437 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 12:53:56,437 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-24 12:53:56,449 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 12:53:56,454 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 12:53:56,454 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:53:56,456 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 12:53:56,457 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 18,
    "title" : "sdsadasd",
    "content" : "1qqqqq",
    "writer" : "qqqq",
    "writeDate" : 1563811200000,
    "count" : 0
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  }, {
    "messageId" : 20,
    "title" : "今天天气真好",
    "content" : "哈哈啊哈哈",
    "writer" : "罗军",
    "writeDate" : 1563897600000,
    "count" : 0
  } ]
}
2019-07-24 12:53:56,994 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 12:53:56,995 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 18(Integer)
2019-07-24 12:53:56,997 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 12:53:57,002 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 12:53:57,003 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:53:57,005 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 12:53:57,005 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  }, {
    "messageId" : 20,
    "title" : "今天天气真好",
    "content" : "哈哈啊哈哈",
    "writer" : "罗军",
    "writeDate" : 1563897600000,
    "count" : 0
  } ]
}
2019-07-24 12:53:58,611 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 12:53:58,612 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 20(Integer)
2019-07-24 12:53:58,623 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 12:53:58,626 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 12:53:58,627 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:53:58,629 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 12:53:58,629 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 12:54:00,701 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 12:54:00,702 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:54:00,704 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-24 12:54:00,706 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 12:54:03,475 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 12:54:03,475 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:54:03,478 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-24 12:54:03,480 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 12:54:53,529 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 12:54:53,530 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:54:53,530 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 12:54:53,531 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:54:53,535 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 12:54:53,537 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 12:54:53,537 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 12:54:53,539 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 12:54:53,540 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 12:54:53,540 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 12:54:53,540 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 12:54:53,542 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 12:54:53,542 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 12:54:55,431 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 12:54:55,431 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:54:55,435 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 12:54:55,438 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 12:54:56,535 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 12:54:56,535 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 12:54:56,535 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 12:54:56,536 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 12:54:56,538 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 12:54:56,538 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-24 12:54:56,539 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 12:54:56,539 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 59,
    "messageId" : 1,
    "content" : "哈哈哈哈",
    "writer" : "罗军",
    "writerDate" : 1563408000000
  }, {
    "revertId" : 62,
    "messageId" : 1,
    "content" : "今天天气真滴好",
    "writer" : "heihei",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 12:55:04,656 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-24 12:55:04,667 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer), 是啊(String), a'a(String), 2019-07-24 00:00:00.0(Timestamp)
2019-07-24 12:55:04,676 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 12:55:04,683 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 12:55:04,683 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 12:55:04,684 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 12:55:04,684 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 12:55:04,685 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 12:55:04,685 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 12:55:04,686 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 12:55:04,686 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 59,
    "messageId" : 1,
    "content" : "哈哈哈哈",
    "writer" : "罗军",
    "writerDate" : 1563408000000
  }, {
    "revertId" : 62,
    "messageId" : 1,
    "content" : "今天天气真滴好",
    "writer" : "heihei",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 63,
    "messageId" : 1,
    "content" : "是啊",
    "writer" : "a'a",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 12:55:07,172 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 12:55:07,173 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:55:07,177 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 12:55:07,178 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 12:55:08,057 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 12:55:08,058 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 12:55:08,058 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 12:55:08,058 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:55:08,058 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:55:08,058 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 12:55:08,061 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 12:55:08,061 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 12:55:08,061 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 12:55:08,061 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 12:55:08,061 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 12:55:08,062 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 12:55:08,064 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:01:39,737 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:01:39,738 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:01:39,739 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:01:39,740 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:01:39,741 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:01:39,741 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:01:39,745 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:01:39,744 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:01:39,749 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:01:39,750 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:01:39,761 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:01:39,762 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:01:39,766 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:01:40,526 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:01:40,526 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:01:40,527 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:01:40,527 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:01:40,531 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:01:40,531 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:01:40,532 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:01:40,532 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:01:40,532 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:01:40,533 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:01:40,537 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:01:40,537 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:01:40,537 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:01:41,706 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 20556 (G:\scsx\project\company\target\classes started by luojun in G:\scsx\project\company)
2019-07-24 13:01:41,707 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 13:01:41,707 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 13:01:42,567 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.909 seconds (JVM running for 627.998)
2019-07-24 13:01:48,909 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 13:01:48,911 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 13:01:48,912 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:01:54,311 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:01:54,312 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:01:54,312 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:01:54,312 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:01:54,372 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:01:54,374 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:01:54,374 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:01:54,374 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:01:54,375 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:01:54,376 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:01:54,380 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:01:54,392 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:01:54,398 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:01:58,007 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:01:58,009 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:01:58,013 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:01:58,013 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:01:58,013 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:01:58,013 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:01:58,013 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:01:58,013 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:01:58,014 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:01:58,016 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:01:58,017 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:01:58,017 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:01:58,018 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:02:02,435 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 13:02:02,436 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 3(Integer)
2019-07-24 13:02:02,438 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:02:02,439 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }
}
2019-07-24 13:02:05,998 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:02:05,999 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:02:06,001 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:02:06,002 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:02:10,701 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:02:10,702 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:02:10,705 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:02:10,706 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:02:10,706 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:02:10,706 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:02:10,707 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:02:10,707 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:02:10,707 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:02:10,710 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:02:10,712 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:02:10,712 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:02:10,712 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:02:11,832 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 13:02:11,832 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:02:11,834 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 13:02:11,837 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 13:02:18,007 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:02:18,007 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:02:18,007 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:02:18,007 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:02:18,008 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:02:18,008 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:02:18,010 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:02:18,011 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:02:18,011 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:02:18,011 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:02:18,012 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:02:18,012 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:02:18,015 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:02:21,835 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:02:21,836 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:02:21,838 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:02:21,838 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:02:21,838 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:02:21,838 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:02:21,839 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:02:21,840 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:02:21,841 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:02:21,841 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:02:21,841 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:02:21,841 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:02:21,841 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:03:21,732 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:03:21,732 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:03:21,734 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:03:21,735 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:03:21,735 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:03:21,736 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:03:21,736 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:03:21,736 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:03:21,738 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:03:21,739 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:03:21,740 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:03:21,740 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:03:21,743 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:03:22,983 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:03:22,984 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:03:22,986 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:03:22,986 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:03:22,987 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:03:22,987 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:03:22,987 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:03:22,987 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:03:22,988 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:03:22,988 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:03:22,989 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:03:22,989 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:03:22,989 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:03:24,422 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:03:24,423 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:03:24,426 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:03:24,427 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:03:25,708 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:03:25,708 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:03:25,708 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:03:25,708 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:03:25,708 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:03:25,708 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:03:25,710 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:03:25,711 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:03:25,711 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:03:25,711 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:03:25,711 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:03:25,712 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:03:25,714 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:03:29,025 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:03:29,025 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:03:29,025 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:03:29,025 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:03:29,026 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:03:29,026 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:03:29,028 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:03:29,029 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:03:29,029 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:03:29,029 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:03:29,029 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:03:29,029 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:03:29,031 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:03:29,912 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 13:03:29,912 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:03:29,915 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 13:03:29,916 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 13:03:30,953 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:03:30,953 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:03:30,955 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:03:30,956 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:03:30,957 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:03:30,957 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:03:30,957 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:03:30,957 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:03:30,957 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:03:30,956 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:03:30,958 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:03:30,960 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:03:30,960 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:03:32,979 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:03:32,980 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:03:32,982 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:03:32,983 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:03:33,846 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:03:33,846 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:03:33,849 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:03:33,850 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:03:33,850 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:03:33,851 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:03:33,851 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:03:33,851 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:03:33,853 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:03:33,853 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:03:33,853 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:03:33,854 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:03:33,856 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:03:56,088 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 13:03:56,089 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 13:03:56,091 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:03:56,091 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 13:10:07,093 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:10:07,095 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:10:07,098 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:10:07,099 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:10:08,412 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:10:08,413 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:10:08,417 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:10:08,417 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:10:08,417 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:10:08,418 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:10:08,418 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:10:08,418 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:10:08,418 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:10:08,419 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:10:08,424 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:10:08,424 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:10:08,425 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:10:09,356 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:10:09,358 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:10:09,359 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:10:09,359 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:10:09,359 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:10:09,359 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:10:09,362 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:10:09,362 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:10:09,362 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:10:09,362 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:10:09,363 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:10:09,364 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:10:09,365 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:10:09,994 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:10:09,995 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:10:09,995 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:10:09,995 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:10:09,995 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:10:09,995 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:10:09,995 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:10:09,995 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:10:09,998 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:10:09,998 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:10:09,999 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:10:09,999 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:10:09,999 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:10:10,530 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:10:10,531 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:10:10,533 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:10:10,533 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:10:10,533 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:10:10,534 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:10:10,536 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:10:10,536 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:10:10,537 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:10:10,537 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:10:10,537 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:10:10,543 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:10:10,543 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:10:19,886 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:10:19,886 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:10:19,887 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:10:19,887 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:10:19,892 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:10:19,892 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:10:19,893 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:10:19,893 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:10:19,893 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:10:19,893 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:10:19,895 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:10:19,897 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:10:19,897 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:10:23,076 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:10:23,077 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:10:23,080 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:10:23,082 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:10:52,186 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:10:52,186 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:10:52,187 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:10:52,187 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:10:52,189 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:10:52,190 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:10:52,190 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:10:52,190 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:10:52,190 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:10:52,193 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:10:52,193 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:10:52,193 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:10:52,195 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:11:58,130 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:11:58,131 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:11:58,133 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:11:58,134 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:11:58,135 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:11:58,135 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:11:58,137 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:11:58,137 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:11:58,137 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:11:58,138 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:11:58,138 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:11:58,139 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:11:58,141 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:11:58,798 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:11:58,799 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:11:58,799 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:11:58,800 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:11:58,801 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:11:58,801 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:11:58,801 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:11:58,802 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:11:58,802 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:11:58,802 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:11:58,803 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:11:58,805 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:11:58,805 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:12:01,531 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by newsId 
2019-07-24 13:12:01,531 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:12:01,533 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:12:01,534 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  } ]
}
2019-07-24 13:12:06,255 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by newsId 
2019-07-24 13:12:06,256 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:12:06,258 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:12:06,258 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  } ]
}
2019-07-24 13:13:18,850 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:13:18,851 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:13:18,851 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:13:18,852 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:13:18,853 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:13:18,854 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:13:18,854 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:13:18,855 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:13:18,855 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:13:18,855 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:13:18,855 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:13:18,855 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:13:18,858 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:13:22,121 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:13:22,121 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:13:22,122 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:13:22,122 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:13:22,126 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:13:22,126 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:13:22,127 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:13:22,127 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:13:22,127 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:13:22,127 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:13:22,128 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:13:22,131 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:13:22,131 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:13:25,990 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:13:25,990 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:13:25,991 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:13:25,992 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:13:25,992 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:13:25,992 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:13:25,992 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:13:25,993 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:13:25,994 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:13:25,995 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:13:25,995 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:13:25,995 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:13:25,998 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:47,215 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:14:47,215 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:14:47,216 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:47,216 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:47,216 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:47,217 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:14:47,219 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:47,219 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:47,220 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:47,220 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:14:47,219 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:14:47,221 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:14:47,222 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:48,068 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:14:48,069 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:48,070 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:14:48,071 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:48,072 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:48,072 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:48,073 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:48,073 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:14:48,073 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:14:48,073 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:14:48,074 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:14:48,075 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:48,075 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:48,633 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:14:48,633 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:48,633 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:14:48,634 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:48,636 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:48,636 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:48,637 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:48,637 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:14:48,637 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:14:48,637 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:14:48,637 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:14:48,639 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:48,640 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:49,016 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:14:49,016 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:49,017 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:14:49,018 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:49,019 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:14:49,019 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:49,019 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:49,019 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:14:49,020 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:14:49,020 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:49,020 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:14:49,022 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:49,022 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:49,383 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:14:49,383 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:49,383 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:14:49,385 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:49,384 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:49,385 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:49,385 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:49,385 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:14:49,386 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:14:49,389 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:49,389 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:14:49,389 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:49,390 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:14:49,761 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:14:49,762 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:49,763 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:14:49,765 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:49,765 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:49,766 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:14:49,766 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:49,767 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:14:49,768 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:49,768 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:49,768 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:14:49,768 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:49,768 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:14:50,189 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:14:50,190 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:50,191 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:14:50,191 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:50,193 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:50,194 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:14:50,194 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:14:50,195 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:50,195 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:14:50,195 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:14:50,195 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:50,196 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:50,197 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:50,561 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:14:50,562 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:50,565 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:14:50,566 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:14:50,566 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:14:50,567 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:50,568 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:50,570 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:50,570 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:14:50,570 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:50,571 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:14:50,574 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:50,574 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:50,848 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:14:50,849 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:50,851 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:50,851 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:14:50,852 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:14:50,852 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:50,852 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:14:50,852 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:50,852 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:14:50,852 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:14:50,854 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:50,854 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:50,854 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:51,187 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:14:51,188 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:51,187 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:14:51,188 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:51,191 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:51,191 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:14:51,191 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:14:51,192 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:51,192 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:14:51,193 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:14:51,197 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:51,197 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:51,197 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:51,502 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:14:51,502 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:14:51,502 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:51,503 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:51,505 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:51,505 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:14:51,506 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:51,506 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:14:51,508 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:14:51,510 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:51,511 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:51,513 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:14:51,517 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:55,336 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:14:55,336 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:14:55,337 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:55,337 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:55,343 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:55,343 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:55,344 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:14:55,344 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:55,345 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:14:55,345 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:14:55,345 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:14:55,348 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:55,348 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:58,176 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:14:58,176 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:58,176 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:58,176 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:14:58,176 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:14:58,177 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:14:58,177 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:14:58,177 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:14:58,179 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:14:58,179 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:58,179 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:58,179 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:14:58,180 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:16:55,122 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-24 13:16:55,123 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 8(Integer)
2019-07-24 13:16:55,126 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:16:55,127 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  }
}
2019-07-24 13:16:56,149 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-24 13:16:56,151 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 8(Integer)
2019-07-24 13:16:56,156 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:16:56,156 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  }
}
2019-07-24 13:17:16,159 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-24 13:17:16,159 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 8(Integer)
2019-07-24 13:17:16,161 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:17:16,162 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  }
}
2019-07-24 13:17:17,020 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-24 13:17:17,022 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 8(Integer)
2019-07-24 13:17:17,023 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:17:17,024 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  }
}
2019-07-24 13:17:19,203 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:17:19,204 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:17:19,206 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:17:19,207 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:17:19,210 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:17:19,210 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:17:19,210 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:17:19,210 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:17:19,210 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:17:19,210 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:17:19,211 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:17:19,213 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:17:19,215 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:17:20,330 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:17:20,330 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:17:20,332 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:17:20,333 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:17:21,225 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by newsId 
2019-07-24 13:17:21,225 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:17:21,227 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:17:21,228 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  } ]
}
2019-07-24 13:17:30,537 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:17:30,538 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:17:30,538 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:17:30,539 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:17:30,539 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:17:30,540 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:17:30,542 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:17:30,542 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:17:30,542 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:17:30,542 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:17:30,542 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:17:30,545 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:17:30,545 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:18:24,592 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:18:24,594 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:18:24,593 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:18:24,594 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:18:24,597 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:18:24,597 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:18:24,597 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:18:24,597 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:18:24,597 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:18:24,597 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:18:24,598 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:18:24,600 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:18:24,601 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:18:26,279 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 20556 (G:\scsx\project\company\target\classes started by luojun in G:\scsx\project\company)
2019-07-24 13:18:26,280 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 13:18:26,280 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 13:18:26,975 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.746 seconds (JVM running for 1632.406)
2019-07-24 13:18:29,299 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:18:29,302 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:18:29,307 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:18:29,310 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:18:29,311 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:18:29,315 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:18:29,317 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:18:29,319 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:18:29,321 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:18:29,322 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:18:29,323 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:18:29,332 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:18:29,337 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:18:32,595 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:18:32,596 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:18:32,598 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:18:32,600 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:18:36,071 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 13:18:36,072 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:18:36,073 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:18:36,074 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  } ]
}
2019-07-24 13:19:19,376 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:19:19,377 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:19:19,377 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:19:19,378 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:19:19,381 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:19:19,381 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:19:19,382 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:19:19,382 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:19:19,383 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:19:19,385 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:19:19,385 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:19:19,385 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:19:19,388 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:20:47,193 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:20:47,193 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:20:47,196 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:20:47,196 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:20:47,196 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:20:47,197 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:20:47,197 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:20:47,197 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:20:47,198 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:20:47,200 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:20:47,200 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:20:47,204 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:20:47,204 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:20:48,305 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 13:20:48,306 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:20:48,309 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 13:20:48,310 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 13:20:52,255 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 13:20:52,255 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:20:52,257 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 13:20:52,257 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 13:20:53,489 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:20:53,489 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:20:53,490 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:20:53,490 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:20:53,491 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:20:53,491 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:20:53,492 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:20:53,492 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:20:53,492 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:20:53,494 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:20:53,494 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:20:53,494 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:20:53,497 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:21:56,482 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:21:56,482 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:21:56,483 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:21:56,484 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:21:56,484 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:21:56,484 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:21:56,485 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:21:56,485 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:21:56,485 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:21:56,485 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:21:56,486 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:21:56,487 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:21:56,487 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:22:05,076 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 13:22:05,076 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:22:05,080 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 13:22:05,082 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 13:22:34,205 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:22:34,205 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:22:34,209 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:22:34,209 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:22:34,209 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:22:34,209 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:22:34,209 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:22:34,209 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:22:34,210 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:22:34,210 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:22:34,212 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:22:34,212 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:22:34,212 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:22:51,822 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 13748 (G:\scsx\project\company\target\classes started by luojun in G:\scsx\project\company)
2019-07-24 13:22:51,828 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 13:22:51,828 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 13:22:54,529 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.462 seconds (JVM running for 5.676)
2019-07-24 13:23:05,743 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:23:05,743 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:23:05,753 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:23:05,760 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:23:05,775 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:23:05,774 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:23:05,775 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:23:05,774 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:23:05,817 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:23:05,817 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:23:05,817 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:23:05,819 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:23:05,852 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:23:07,272 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-24 13:23:07,273 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-24 13:23:07,276 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:23:07,280 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }
}
2019-07-24 13:23:12,038 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:23:12,039 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:23:12,044 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:23:12,046 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:23:14,840 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:23:14,841 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:23:14,843 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:23:14,843 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:23:14,844 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:23:14,844 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:23:14,844 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:23:14,848 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:23:14,850 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:23:14,850 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:23:14,854 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:23:14,857 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:23:14,857 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:23:15,922 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 13:23:15,923 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:23:15,931 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:23:15,932 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  } ]
}
2019-07-24 13:23:22,263 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 13:23:22,263 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 用户名(String)
2019-07-24 13:23:22,267 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 13:23:29,439 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 13:23:29,439 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 13:23:29,442 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:23:33,873 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:23:33,874 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:23:33,874 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:23:33,874 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:23:33,875 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:23:33,875 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:23:33,880 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:23:33,881 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:23:33,882 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:23:33,882 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:23:33,882 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:23:33,883 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:23:33,884 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:23:35,004 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 13:23:35,004 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:23:35,010 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 13:23:35,013 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 13:23:39,950 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 13:23:39,951 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 13:23:39,952 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 13:23:39,953 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 13:23:39,954 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:23:39,955 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 13:23:39,956 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 13:23:39,958 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 59,
    "messageId" : 1,
    "content" : "哈哈哈哈",
    "writer" : "罗军",
    "writerDate" : 1563408000000
  }, {
    "revertId" : 62,
    "messageId" : 1,
    "content" : "今天天气真滴好",
    "writer" : "heihei",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 63,
    "messageId" : 1,
    "content" : "是啊",
    "writer" : "a'a",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 13:23:43,395 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:23:43,396 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:23:43,396 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:23:43,396 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:23:43,396 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:23:43,397 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:23:43,399 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:23:43,400 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:23:43,400 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:23:43,400 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:23:43,401 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:23:43,402 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:23:43,403 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:29:20,593 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:29:20,594 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:29:20,594 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:29:20,594 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:29:20,594 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:29:20,594 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:29:20,594 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:29:20,594 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:29:20,600 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:29:20,600 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:29:20,600 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:29:20,601 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:29:20,602 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:29:23,571 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 13:29:23,571 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-24 13:29:23,574 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:29:23,575 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }
}
2019-07-24 13:29:25,704 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:29:25,705 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:29:25,706 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:29:25,706 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:29:25,710 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:29:25,713 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:29:25,714 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:29:25,714 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:29:25,716 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:29:25,716 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:29:25,716 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:29:25,721 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:29:25,721 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:29:26,770 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 13:29:26,771 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:29:26,774 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:29:26,775 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  } ]
}
2019-07-24 13:29:28,502 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-24 13:29:28,503 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 8(Integer)
2019-07-24 13:29:28,505 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:29:28,506 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  }
}
2019-07-24 13:29:30,650 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:29:30,651 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:29:30,654 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:29:30,655 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:29:32,518 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 13:29:32,519 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:29:32,521 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 13:29:32,523 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 13:29:34,268 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 13:29:34,268 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 13:29:34,270 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 13:29:34,270 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 13:29:34,272 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:29:34,273 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 13:29:34,274 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 13:29:34,274 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 59,
    "messageId" : 1,
    "content" : "哈哈哈哈",
    "writer" : "罗军",
    "writerDate" : 1563408000000
  }, {
    "revertId" : 62,
    "messageId" : 1,
    "content" : "今天天气真滴好",
    "writer" : "heihei",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 63,
    "messageId" : 1,
    "content" : "是啊",
    "writer" : "a'a",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 13:29:56,512 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 13:29:56,512 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:29:56,516 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 13:29:56,517 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 13:30:39,064 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:30:39,069 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:30:39,066 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:30:39,070 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:30:39,074 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:30:39,075 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:30:39,076 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:30:39,077 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:30:39,073 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:30:39,078 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:30:39,078 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:30:39,082 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:30:39,092 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:30:40,934 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:30:40,935 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:30:40,938 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:30:40,939 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:30:56,031 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 13:30:56,032 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 13:30:56,035 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:30:56,036 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-24 13:30:56,037 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 13:30:56,038 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:30:56,039 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 13:30:56,039 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 13:30:56,041 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:31:06,689 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 13:31:06,690 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:31:06,693 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 13:31:06,694 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 13:31:09,557 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:31:09,558 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:31:09,561 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:31:09,562 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:31:12,233 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 13:31:12,234 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 13:31:12,237 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:31:12,237 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 13:31:24,969 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 13:31:24,969 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:31:24,972 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-24 13:31:24,973 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 13:37:05,689 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 13:37:05,689 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 13:37:05,691 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:37:05,692 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-24 13:37:05,692 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 13:37:05,694 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:37:05,695 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 13:37:05,695 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 13:37:05,697 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:40:49,078 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:40:49,078 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:40:49,079 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:40:49,079 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:40:49,086 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:40:49,086 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:40:49,086 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:40:49,086 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:40:49,086 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:40:49,086 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:40:49,087 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:40:49,089 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:40:49,089 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:47:40,183 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:47:40,184 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:47:40,191 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:47:40,192 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:47:42,388 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 13:47:42,389 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 13:47:42,392 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:47:42,393 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 13:48:10,736 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 13:48:10,736 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:48:10,739 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 13:48:10,740 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 13:48:51,374 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 13:48:51,374 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 13:48:51,375 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 13:48:51,375 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 13:48:51,377 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 13:48:51,377 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 13:48:51,378 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 13:48:51,378 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 59,
    "messageId" : 1,
    "content" : "哈哈哈哈",
    "writer" : "罗军",
    "writerDate" : 1563408000000
  }, {
    "revertId" : 62,
    "messageId" : 1,
    "content" : "今天天气真滴好",
    "writer" : "heihei",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 63,
    "messageId" : 1,
    "content" : "是啊",
    "writer" : "a'a",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 13:49:27,597 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 13:49:27,598 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:49:27,598 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 13:49:27,599 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 13:49:27,602 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 13:49:27,602 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:49:27,602 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 13:49:27,602 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 13:49:27,602 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 13:49:27,603 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 13:49:27,605 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:49:27,605 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 13:49:27,605 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 14:04:35,242 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 8700 (G:\scsx\project\company\target\classes started by luojun in G:\scsx\project\company)
2019-07-24 14:04:35,247 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 14:04:35,249 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 14:04:39,227 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.685 seconds (JVM running for 6.955)
2019-07-24 14:05:23,569 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 14:05:23,596 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:05:23,627 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 14:05:23,707 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 14:05:25,361 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 14:05:25,362 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:05:25,364 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 14:05:25,365 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:05:25,370 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 14:05:25,371 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 14:05:25,374 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 14:05:25,382 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 14:05:25,382 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 14:05:25,384 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 14:05:25,385 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 14:05:25,388 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 14:05:25,392 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 14:05:30,803 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-24 14:05:30,804 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-24 14:05:30,806 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 14:05:30,807 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }
}
2019-07-24 14:05:34,052 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 14:05:34,053 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:05:34,056 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 14:05:34,057 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  } ]
}
2019-07-24 14:05:35,191 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 14:05:35,193 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:05:35,198 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 14:05:35,199 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 14:05:36,365 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 14:05:36,366 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:05:36,368 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 14:05:36,369 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  } ]
}
2019-07-24 14:05:37,528 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-24 14:05:37,528 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-24 14:05:37,530 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 14:05:37,531 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }
}
2019-07-24 14:05:38,723 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 14:05:38,727 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:05:38,729 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 14:05:38,730 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:05:38,731 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 14:05:38,734 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 14:05:38,734 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 14:05:38,736 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 14:05:38,735 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 14:05:38,739 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 14:05:38,740 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 14:05:38,742 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 14:05:38,744 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 14:27:01,884 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 14:27:01,885 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 7(Integer)
2019-07-24 14:27:01,890 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 14:27:01,891 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }
}
2019-07-24 14:27:04,936 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 14:27:04,937 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:27:04,942 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 14:27:04,945 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 14:27:06,041 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 14:27:06,042 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 14:27:06,044 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 14:27:06,045 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 14:27:08,455 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 14:27:08,457 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:27:08,457 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 14:27:08,458 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:27:08,459 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 14:27:08,462 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 14:27:08,462 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 14:27:08,463 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 14:27:08,463 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 14:27:08,464 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 14:27:08,465 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 14:27:08,466 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 14:27:08,468 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 14:27:10,296 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 14:27:10,298 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 8(Integer)
2019-07-24 14:27:10,301 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 14:27:10,302 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }
}
2019-07-24 14:27:12,952 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 14:27:12,953 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:27:12,955 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 14:27:12,956 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 14:47:41,237 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 14:47:41,238 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 14:47:41,245 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 14:47:41,246 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-24 14:47:41,246 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 14:47:41,247 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 14:47:41,248 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 14:47:41,248 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 14:47:41,250 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 14:48:03,111 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO product VALUES(NULL,?,?,?,?,?,?,?) 
2019-07-24 14:48:03,112 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: qqq(String), qqq(String), qqq(String), qqq(String), 10000(BigDecimal), hulu1.jpg(String), 111(String)
2019-07-24 14:48:03,117 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 14:48:05,486 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 14:48:05,486 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:48:05,489 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 14:48:05,490 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 9,
    "serialNumber" : "qqq",
    "name" : "qqq",
    "brand" : "qqq",
    "model" : "qqq",
    "price" : 10000,
    "picture" : "hulu1.jpg",
    "description" : "111"
  } ]
}
2019-07-24 14:48:11,387 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 14:48:11,388 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 9(Integer)
2019-07-24 14:48:11,390 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 14:48:11,391 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 9,
    "serialNumber" : "qqq",
    "name" : "qqq",
    "brand" : "qqq",
    "model" : "qqq",
    "price" : 10000,
    "picture" : "hulu1.jpg",
    "description" : "111"
  }
}
2019-07-24 14:48:52,227 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 14:48:52,228 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:48:52,231 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 14:48:52,232 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 9,
    "serialNumber" : "qqq",
    "name" : "qqq",
    "brand" : "qqq",
    "model" : "qqq",
    "price" : 10000,
    "picture" : "hulu1.jpg",
    "description" : "111"
  } ]
}
2019-07-24 14:48:57,041 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM product WHERE productId = ? 
2019-07-24 14:48:57,042 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 9(Integer)
2019-07-24 14:48:57,051 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 14:48:57,056 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 14:48:57,057 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:48:57,061 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 14:48:57,062 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 14:50:41,544 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 14:50:41,545 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:50:41,552 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 14:50:41,554 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  } ]
}
2019-07-24 14:50:42,642 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM news WHERE newsId = ? 
2019-07-24 14:50:42,642 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 8(Integer)
2019-07-24 14:50:42,643 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 14:50:43,657 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM news WHERE newsId = ? 
2019-07-24 14:50:43,657 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 8(Integer)
2019-07-24 14:50:43,658 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-24 14:51:02,000 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 14:51:02,001 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:51:02,004 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 14:51:02,006 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  } ]
}
2019-07-24 14:51:02,682 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM news WHERE newsId = ? 
2019-07-24 14:51:02,683 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-24 14:51:02,684 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 14:51:02,687 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 14:51:02,688 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:51:02,689 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-24 14:51:02,690 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  } ]
}
2019-07-24 14:51:04,601 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 14:51:04,602 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:51:04,606 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 14:51:04,609 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 14:51:05,866 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:51:05,867 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:51:06,001 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:51:06,639 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:51:06,640 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:51:06,657 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:51:07,072 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:51:07,072 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:51:07,089 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:51:07,229 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:51:07,229 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:51:07,239 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:51:07,381 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:51:07,382 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:51:07,392 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:51:07,526 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:51:07,526 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:51:07,535 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:51:07,663 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:51:07,664 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:51:07,675 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:51:07,805 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:51:07,806 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:51:07,816 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:51:07,942 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:51:07,944 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:51:07,956 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:51:36,265 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 14:51:36,266 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:51:36,269 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 14:51:36,271 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 14:51:37,176 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:51:37,177 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:51:37,193 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:51:37,629 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:51:37,630 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:51:37,640 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:51:37,782 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:51:37,782 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:51:37,793 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:51:37,925 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:51:37,926 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:51:37,937 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:51:38,053 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:51:38,054 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:51:38,064 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:51:38,202 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:51:38,203 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:51:38,215 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:51:38,333 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:51:38,334 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:51:38,343 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:51:38,462 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:51:38,462 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:51:38,475 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:51:38,590 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:51:38,590 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:51:38,602 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:51:38,974 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:51:38,974 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:51:38,986 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:51:39,109 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:51:39,109 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:51:39,120 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:52:00,713 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 14:52:00,713 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:52:00,716 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 14:52:00,716 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  } ]
}
2019-07-24 14:52:02,088 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM product WHERE productId = ? 
2019-07-24 14:52:02,089 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 8(Integer)
2019-07-24 14:52:02,091 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 14:52:02,095 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 14:52:02,096 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:52:02,099 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 14:52:02,100 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  } ]
}
2019-07-24 14:52:04,120 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 14:52:04,120 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:52:04,123 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-24 14:52:04,125 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 14:52:09,788 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 14:52:09,789 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:52:09,794 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 14:52:09,796 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 14:52:10,841 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:52:10,841 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:52:10,856 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:52:11,350 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:52:11,351 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:52:11,370 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:52:11,486 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:52:11,487 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:52:11,499 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:53:05,602 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 15656 (G:\scsx\project\company\target\classes started by luojun in G:\scsx\project\company)
2019-07-24 14:53:05,609 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 14:53:05,611 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 14:53:08,970 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.058 seconds (JVM running for 7.003)
2019-07-24 14:53:12,488 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 14:53:12,510 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:53:12,535 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 14:53:12,598 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 14:53:13,595 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:53:13,596 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:53:13,671 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:53:14,055 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:53:14,056 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:53:14,071 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:53:14,214 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:53:14,215 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:53:14,228 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:53:14,367 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:53:14,368 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:53:14,377 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:53:14,502 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:53:14,503 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:53:14,512 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:53:14,630 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:53:14,632 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:53:14,643 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:53:14,767 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:53:14,768 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:53:14,776 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:53:14,895 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:53:14,896 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:53:14,908 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:53:49,929 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:53:49,930 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:53:49,948 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:53:50,055 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:53:50,056 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:53:50,066 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:53:50,174 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:53:50,175 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:53:50,184 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:53:50,294 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:53:50,295 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:53:50,310 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:53:50,409 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:53:50,410 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:53:50,421 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:54:29,502 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 14712 (G:\scsx\project\company\target\classes started by luojun in G:\scsx\project\company)
2019-07-24 14:54:29,506 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 14:54:29,508 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 14:54:32,623 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.844 seconds (JVM running for 7.714)
2019-07-24 14:54:37,552 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 14:54:37,589 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:54:37,629 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 14:54:37,750 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 14:54:56,501 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:54:56,503 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:55:08,277 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:55:17,319 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 14:55:17,320 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:55:17,328 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 14:55:17,330 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 14:55:25,838 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 4564 (G:\scsx\project\company\target\classes started by luojun in G:\scsx\project\company)
2019-07-24 14:55:25,842 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 14:55:25,843 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 14:55:28,577 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.278 seconds (JVM running for 5.823)
2019-07-24 14:55:32,503 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-24 14:55:32,544 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-24 14:55:32,580 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 14:55:32,647 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-24 14:55:45,517 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 14:55:45,518 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:55:45,527 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 14:55:45,547 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 14:55:46,588 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:55:46,588 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:55:46,656 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:55:47,103 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:55:47,104 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:55:47,113 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:55:47,254 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:55:47,255 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:55:47,264 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:55:47,398 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:55:47,400 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:55:47,411 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:55:47,536 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:55:47,536 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:55:47,546 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:55:47,664 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:55:47,665 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:55:47,676 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:55:47,791 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:55:47,791 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:55:47,801 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:55:47,904 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:55:47,905 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:55:47,916 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:55:48,038 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:55:48,039 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:55:48,049 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:55:48,160 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:55:48,161 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:55:48,174 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:55:48,287 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:55:48,287 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:55:48,300 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:56:07,520 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 14:56:07,521 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:56:07,527 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 14:56:07,528 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 14:56:07,663 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 14:56:07,664 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:56:07,671 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 14:56:07,674 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 14:57:11,112 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:11,113 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:11,125 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:57:11,263 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:11,264 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:11,277 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:57:11,405 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:11,406 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:11,418 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:57:11,550 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:11,551 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:11,561 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:57:11,703 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:11,704 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:11,713 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 14:57:11,829 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:11,830 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:11,838 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:57:11,974 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:11,975 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:11,984 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:57:15,263 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:15,264 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:15,280 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:57:15,406 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:15,407 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:15,417 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:57:15,550 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:15,552 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:15,566 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:57:15,686 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:15,687 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:15,699 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:57:15,814 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:15,815 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:15,826 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:57:15,958 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:15,958 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:15,968 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:57:16,079 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:16,080 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:16,092 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:57:16,206 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:16,207 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:16,216 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:57:16,343 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:16,344 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:16,355 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:57:16,478 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:16,479 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:16,489 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:57:16,646 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:16,647 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:16,657 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:57:46,945 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 14:57:46,946 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:57:46,952 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 14:57:46,960 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  } ]
}
2019-07-24 14:57:48,081 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 14:57:48,082 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 3(Integer)
2019-07-24 14:57:48,085 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 14:57:48,086 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }
}
2019-07-24 14:57:51,343 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 14:57:51,345 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:57:51,348 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 14:57:51,349 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 14:57:53,496 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:53,497 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:53,512 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:57:53,910 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:53,911 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:53,920 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:57:54,085 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:54,086 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:54,101 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:57:54,246 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:54,247 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:54,255 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:57:54,398 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:57:54,399 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:57:54,409 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:58:30,501 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 14:58:30,502 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 14:58:30,503 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 14:58:30,503 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 14:58:30,505 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 14:58:30,506 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 14:58:30,506 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 14:58:30,508 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 59,
    "messageId" : 1,
    "content" : "哈哈哈哈",
    "writer" : "罗军",
    "writerDate" : 1563408000000
  }, {
    "revertId" : 62,
    "messageId" : 1,
    "content" : "今天天气真滴好",
    "writer" : "heihei",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 63,
    "messageId" : 1,
    "content" : "是啊",
    "writer" : "a'a",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 14:58:36,136 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 14:58:36,138 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:58:36,143 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 14:58:36,143 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 14:58:37,415 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:58:37,416 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:58:37,434 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:58:37,575 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:58:37,576 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:58:37,586 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:58:37,710 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:58:37,711 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:58:37,720 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:58:37,853 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:58:37,854 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:58:37,863 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:58:37,991 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:58:37,992 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:58:38,003 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:58:59,064 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:58:59,065 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:58:59,084 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:58:59,510 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:58:59,511 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:58:59,523 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:58:59,646 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:58:59,647 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:58:59,667 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:58:59,782 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:58:59,783 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:58:59,793 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:59:05,406 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 14:59:05,406 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:59:05,410 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 14:59:05,414 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 14:59:07,624 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:59:07,625 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:59:07,641 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 14:59:10,711 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 14:59:10,712 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 14:59:10,728 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 15:00:08,022 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:00:08,023 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:00:08,027 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:00:08,028 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 15:00:09,312 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:00:09,313 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:00:09,330 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 15:00:39,320 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:00:39,321 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:00:39,337 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 15:00:39,462 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:00:39,462 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:00:39,474 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 15:00:39,608 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:00:39,609 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:00:39,620 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 15:00:40,896 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 4564 (G:\scsx\project\company\target\classes started by luojun in G:\scsx\project\company)
2019-07-24 15:00:40,896 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 15:00:40,896 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 15:00:41,669 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.821 seconds (JVM running for 318.915)
2019-07-24 15:00:46,670 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:00:46,687 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:00:46,690 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:00:46,704 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  } ]
}
2019-07-24 15:00:48,570 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 15:00:48,571 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:00:48,575 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-24 15:00:48,577 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  } ]
}
2019-07-24 15:00:50,179 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-24 15:00:50,180 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 7(Integer)
2019-07-24 15:00:50,182 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:00:50,183 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }
}
2019-07-24 15:00:53,289 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: UPDATE news SET title=? ,content=? ,writeDate=? WHERE newsId = ? 
2019-07-24 15:00:53,300 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 国庆各品牌最好卖的相机(String), 七天的国庆长w小编一样有一种意犹...(String), 2018-10-11 00:00:00.0(Timestamp), 7(Integer)
2019-07-24 15:00:53,303 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:00:55,096 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 15:00:55,097 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:00:55,100 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-24 15:00:55,102 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 15:01:13,002 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO news VALUES(NULL,?,? ,?) 
2019-07-24 15:01:13,003 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 一条新闻(String), 新闻新闻新闻(String), 2019-07-24 00:00:00.0(Timestamp)
2019-07-24 15:01:13,004 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:01:15,309 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 15:01:15,309 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:01:15,312 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 15:01:15,313 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 15:01:22,768 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 15:01:22,768 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:01:22,771 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 15:01:22,772 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 15:01:33,257 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO news VALUES(NULL,?,? ,?) 
2019-07-24 15:01:33,258 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 新闻(String), 新闻新闻n(String), 2019-07-24 00:00:00.0(Timestamp)
2019-07-24 15:01:33,259 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:01:34,943 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO news VALUES(NULL,?,? ,?) 
2019-07-24 15:01:34,944 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 新闻(String), 新闻新闻n(String), 2019-07-24 00:00:00.0(Timestamp)
2019-07-24 15:01:34,945 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:01:37,823 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO news VALUES(NULL,?,? ,?) 
2019-07-24 15:01:37,824 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 新闻(String), 新闻新闻n(String), 2019-07-24 00:00:00.0(Timestamp)
2019-07-24 15:01:37,825 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:01:39,612 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 15:01:39,612 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:01:39,616 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:01:39,618 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 68,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 69,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 15:01:45,541 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:01:45,542 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:01:45,545 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:01:45,548 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 15:01:49,816 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:01:49,816 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:01:49,819 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:01:49,820 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  } ]
}
2019-07-24 15:02:02,998 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:02:02,999 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:02:03,002 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-24 15:02:03,004 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:02:52,157 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:02:52,157 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:02:52,160 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-24 15:02:52,162 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:04:24,245 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:04:24,246 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:04:24,248 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:04:24,249 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 15:04:24,914 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 4564 (G:\scsx\project\company\target\classes started by luojun in G:\scsx\project\company)
2019-07-24 15:04:24,914 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 15:04:24,915 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 15:04:25,744 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.872 seconds (JVM running for 542.99)
2019-07-24 15:04:25,794 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:04:25,796 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:04:25,808 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:04:25,809 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:04:25,815 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy92.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:04:25,820 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy92.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:04:25,829 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:04:25,829 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:04:25,842 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy92.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:04:25,913 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:04:25,915 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:04:25,929 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy92.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:04:26,033 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:04:26,033 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:04:26,045 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy92.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:04:31,345 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:04:31,346 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:04:31,356 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy92.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:04:31,438 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:04:31,439 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:04:31,455 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy92.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:04:31,591 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:04:31,592 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:04:31,602 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy92.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor84.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:05:05,789 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 1712 (G:\scsx\project\company\target\classes started by luojun in G:\scsx\project\company)
2019-07-24 15:05:05,793 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 15:05:05,793 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 15:05:08,480 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.254 seconds (JVM running for 5.181)
2019-07-24 15:05:13,388 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:05:13,415 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:05:13,444 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-24 15:05:13,510 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:05:17,386 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:05:17,387 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:05:17,393 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:05:17,398 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 15:05:18,497 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:18,498 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:18,577 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:05:18,695 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:18,696 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:18,707 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:05:18,839 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:18,840 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:18,852 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:05:18,991 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:18,992 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:19,003 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:05:30,509 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:05:30,510 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:05:30,514 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:05:30,515 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 15:05:31,449 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:05:31,449 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:05:31,450 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:05:31,450 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:05:31,453 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:05:31,453 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 15:05:31,454 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 15:05:31,455 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 59,
    "messageId" : 1,
    "content" : "哈哈哈哈",
    "writer" : "罗军",
    "writerDate" : 1563408000000
  }, {
    "revertId" : 62,
    "messageId" : 1,
    "content" : "今天天气真滴好",
    "writer" : "heihei",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 63,
    "messageId" : 1,
    "content" : "是啊",
    "writer" : "a'a",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 15:05:39,009 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-24 15:05:39,012 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer), sdasdas(String), aaa(String), 2019-07-24 00:00:00.0(Timestamp)
2019-07-24 15:05:39,020 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:05:39,026 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:05:39,027 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:05:39,027 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:05:39,027 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:05:39,029 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:05:39,030 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 59,
    "messageId" : 1,
    "content" : "哈哈哈哈",
    "writer" : "罗军",
    "writerDate" : 1563408000000
  }, {
    "revertId" : 62,
    "messageId" : 1,
    "content" : "今天天气真滴好",
    "writer" : "heihei",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 63,
    "messageId" : 1,
    "content" : "是啊",
    "writer" : "a'a",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 64,
    "messageId" : 1,
    "content" : "sdasdas",
    "writer" : "aaa",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 15:05:39,031 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:05:39,032 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 15:05:41,340 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:05:41,341 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:05:41,345 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:05:41,347 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 15:05:43,680 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:43,681 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:43,693 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:05:43,832 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:43,832 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:43,843 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:05:43,958 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:43,960 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:43,971 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:05:44,087 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:44,088 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:44,099 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:05:44,222 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:44,223 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:44,233 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:05:44,342 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:44,343 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:44,352 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:05:44,455 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:44,456 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:44,465 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:05:44,583 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:44,583 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:44,593 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:05:44,718 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:44,719 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:44,729 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:05:44,823 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:44,824 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:44,836 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:05:44,959 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:44,960 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:44,971 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:05:45,087 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:45,087 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:45,097 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-24 15:05:45,222 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:45,223 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:45,234 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 15:05:45,351 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:45,352 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:45,363 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 15:05:45,464 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:45,464 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:45,475 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 15:05:45,606 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:45,607 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:45,618 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 15:05:45,727 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:45,727 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:45,737 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: DELETE FROM message WHERE messageId = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy70.delMessage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.delMessage(MessageServiceImpl.java:29)
	at com.zryx.company.controller.MessageController.delMessage(MessageController.java:29)
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 common frames omitted
2019-07-24 15:05:46,550 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:05:46,550 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:05:46,550 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:46,550 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:46,553 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:05:46,553 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-24 15:05:46,554 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 60,
    "messageId" : 19,
    "content" : "是啊 今天天气真好啊",
    "writer" : "罗军",
    "writerDate" : 1563753600000
  }, {
    "revertId" : 61,
    "messageId" : 19,
    "content" : "",
    "writer" : "",
    "writerDate" : null
  } ]
}
2019-07-24 15:05:46,554 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  }
}
2019-07-24 15:05:47,962 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-24 15:05:47,963 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 61(Integer)
2019-07-24 15:05:47,971 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:05:47,976 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:05:47,977 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:47,978 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:05:47,979 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:47,980 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:05:47,980 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:05:47,981 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 60,
    "messageId" : 19,
    "content" : "是啊 今天天气真好啊",
    "writer" : "罗军",
    "writerDate" : 1563753600000
  } ]
}
2019-07-24 15:05:47,981 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  }
}
2019-07-24 15:05:48,382 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-24 15:05:48,383 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 60(Integer)
2019-07-24 15:05:48,392 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:05:48,398 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:05:48,398 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:05:48,398 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:48,399 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:48,400 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 15:05:48,400 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:05:48,401 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-24 15:05:48,401 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  }
}
2019-07-24 15:05:51,661 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:05:51,662 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:05:51,664 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:05:51,665 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 19,
    "title" : "今天天气真滴好",
    "content" : "起床起的真滴早，早餐吃的真滴少。",
    "writer" : "罗军",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-24 15:05:52,728 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-24 15:05:52,729 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-24 15:05:52,739 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:05:52,745 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:05:52,745 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:05:52,748 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:05:52,749 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 15:05:56,130 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:05:56,130 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:05:56,133 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-24 15:05:56,134 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:06:17,073 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:06:17,074 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:06:17,077 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-24 15:06:17,078 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:06:18,676 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:06:18,676 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:06:18,681 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-24 15:06:18,683 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:06:50,283 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:06:50,284 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:06:50,286 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-24 15:06:50,287 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:07:09,695 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:07:09,696 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:07:09,698 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-24 15:07:09,699 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:07:40,986 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 18580 (G:\scsx\project\company\target\classes started by luojun in G:\scsx\project\company)
2019-07-24 15:07:40,989 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 15:07:40,995 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 15:07:43,440 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 2.914 seconds (JVM running for 5.27)
2019-07-24 15:07:49,542 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:07:49,570 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:07:49,595 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-24 15:07:49,655 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:08:01,559 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO users VALUES(NULL,? ,? ,?) 
2019-07-24 15:08:01,560 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String), 123(String), 1(Integer)
2019-07-24 15:08:01,561 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:08:03,535 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:08:03,536 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:08:03,538 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:08:03,539 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luojun",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:08:18,921 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO users VALUES(NULL,? ,? ,?) 
2019-07-24 15:08:18,921 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun 2(String), 123(String), 1(Integer)
2019-07-24 15:08:18,922 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:08:20,851 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:08:20,852 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:08:20,857 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:08:20,860 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luojun",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:08:30,825 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:08:30,825 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-24 15:08:30,827 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:08:30,828 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 8,
    "userName" : "luojun",
    "password" : "123",
    "status" : 1
  }
}
2019-07-24 15:09:23,613 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:09:23,614 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:09:23,617 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:09:23,619 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luojun",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:10:36,445 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:10:36,448 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:10:36,448 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 15:10:36,451 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:10:36,453 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:10:36,454 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:10:36,454 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 15:10:36,455 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:10:36,456 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:10:36,457 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:10:36,457 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:10:36,458 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 15:10:36,473 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  } ]
}
2019-07-24 15:18:43,849 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 15:18:43,850 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-24 15:18:43,855 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:18:43,856 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-24 15:18:43,856 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-24 15:18:43,858 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:18:43,858 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 15:18:43,858 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-24 15:18:43,859 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:19:13,106 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO product VALUES(NULL,?,?,?,?,?,?,?) 
2019-07-24 15:19:13,107 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 鞋子(String), 鞋子(String), 鞋子(String), 鞋子(String), 10000(BigDecimal), hulu6.jpg(String), 好鞋子(String)
2019-07-24 15:19:13,111 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:19:15,791 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:19:15,793 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:19:15,798 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:19:15,801 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:19:21,073 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 15:19:21,074 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 10(Integer)
2019-07-24 15:19:21,076 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:19:21,077 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }
}
2019-07-24 15:19:48,413 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:19:48,414 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:19:48,417 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:19:48,418 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:19:49,433 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 15:19:49,435 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 10(Integer)
2019-07-24 15:19:49,437 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:19:49,439 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }
}
2019-07-24 15:20:14,985 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:20:14,986 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:20:14,989 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:20:14,990 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luojun",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:22:25,745 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:22:25,746 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:22:25,746 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 15:22:25,747 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:22:25,750 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:22:25,751 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:22:25,751 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:22:25,751 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:22:25,751 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 15:22:25,751 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:22:25,752 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:22:25,754 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:22:25,754 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:22:26,824 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:22:26,825 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:22:26,829 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:22:26,831 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 15:22:30,784 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:22:30,784 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:22:30,786 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:22:30,786 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:22:30,786 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:22:30,787 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 15:22:30,789 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:22:30,791 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 59,
    "messageId" : 1,
    "content" : "哈哈哈哈",
    "writer" : "罗军",
    "writerDate" : 1563408000000
  }, {
    "revertId" : 62,
    "messageId" : 1,
    "content" : "今天天气真滴好",
    "writer" : "heihei",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 63,
    "messageId" : 1,
    "content" : "是啊",
    "writer" : "a'a",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 64,
    "messageId" : 1,
    "content" : "sdasdas",
    "writer" : "aaa",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 15:22:37,527 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:22:37,528 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:22:37,530 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:22:37,531 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 15:22:38,630 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:22:38,632 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:22:38,635 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 15:22:38,635 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:22:38,635 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:22:38,636 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:22:38,637 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:22:38,638 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 15:22:38,638 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:22:38,639 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:22:38,639 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:22:38,640 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:22:38,641 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:22:39,998 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:22:39,999 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:22:40,006 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:22:40,008 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 15:22:47,293 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:22:47,293 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:22:47,296 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:22:47,297 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 15:22:48,535 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:22:48,536 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:22:48,536 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 7(Integer)
2019-07-24 15:22:48,536 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 7(Integer)
2019-07-24 15:22:48,538 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:22:48,538 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 15:22:48,539 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-24 15:22:48,539 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }
}
2019-07-24 15:23:05,271 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-24 15:23:05,274 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 7(Integer), 出行利器很好用(String), luojun(String), 2019-07-24 00:00:00.0(Timestamp)
2019-07-24 15:23:05,284 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:23:05,289 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:23:05,289 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:23:05,290 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 7(Integer)
2019-07-24 15:23:05,290 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 7(Integer)
2019-07-24 15:23:05,291 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:23:05,291 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:23:05,292 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 65,
    "messageId" : 7,
    "content" : "出行利器很好用",
    "writer" : "luojun",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 15:23:05,292 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }
}
2019-07-24 15:23:09,614 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:23:09,614 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:23:09,616 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:23:09,617 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 15:23:13,357 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:23:13,357 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:23:13,358 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 15:23:13,358 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 15:23:13,360 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 15:23:13,360 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:23:13,361 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-24 15:23:13,361 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }
}
2019-07-24 15:23:27,332 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-24 15:23:27,333 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer), 为人民服务(String), luojun(String), 2019-07-24 00:00:00.0(Timestamp)
2019-07-24 15:23:27,342 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:23:27,348 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:23:27,348 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 15:23:27,349 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:23:27,349 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 15:23:27,350 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:23:27,351 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 66,
    "messageId" : 2,
    "content" : "为人民服务",
    "writer" : "luojun",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 15:23:27,361 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:23:27,362 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }
}
2019-07-24 15:23:29,520 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:23:29,521 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:23:29,524 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:23:29,525 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 15:23:30,775 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:23:30,775 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 15:23:30,775 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:23:30,775 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:23:30,777 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:23:30,777 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:23:30,778 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:23:30,778 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 15:23:30,778 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:23:30,778 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:23:30,779 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:23:30,780 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:23:30,780 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:23:33,584 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:23:33,585 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:23:33,587 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:23:33,589 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 15:23:35,924 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:23:35,924 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:23:35,924 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:23:35,925 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:23:35,927 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:23:35,927 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:23:35,927 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 15:23:35,927 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 59,
    "messageId" : 1,
    "content" : "哈哈哈哈",
    "writer" : "罗军",
    "writerDate" : 1563408000000
  }, {
    "revertId" : 62,
    "messageId" : 1,
    "content" : "今天天气真滴好",
    "writer" : "heihei",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 63,
    "messageId" : 1,
    "content" : "是啊",
    "writer" : "a'a",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 64,
    "messageId" : 1,
    "content" : "sdasdas",
    "writer" : "aaa",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 15:23:53,138 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:23:53,139 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:23:53,142 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:23:53,143 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 15:23:53,967 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:23:53,968 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:23:53,970 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:23:53,971 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:23:53,972 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 15:23:53,972 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:23:53,974 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:23:53,975 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:23:53,975 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:23:53,976 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 15:23:53,976 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:23:53,978 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:23:53,978 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:23:55,088 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 15:23:55,088 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:23:55,090 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:23:55,091 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 68,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 69,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 15:23:59,811 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:23:59,812 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 15:23:59,813 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:23:59,812 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:23:59,815 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:23:59,815 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:23:59,815 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:23:59,815 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:23:59,815 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:23:59,815 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 15:23:59,817 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:23:59,821 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:23:59,821 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:24:01,663 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:24:01,664 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:24:01,667 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:24:01,668 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:24:02,431 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 15:24:02,432 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:24:02,434 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:24:02,435 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 68,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 69,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 15:24:13,459 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 15:24:13,460 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luoun (String)
2019-07-24 15:24:13,461 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 15:24:19,178 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 15:24:19,178 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-24 15:24:19,179 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:24:19,180 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-24 15:24:19,180 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-24 15:24:19,181 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:24:19,181 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 15:24:19,182 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-24 15:24:19,182 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:24:43,877 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO news VALUES(NULL,?,? ,?) 
2019-07-24 15:24:43,878 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 桂林最好玩的地方(String), 桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学(String), 2019-07-24 00:00:00.0(Timestamp)
2019-07-24 15:24:43,880 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:24:47,857 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 15:24:47,858 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:24:47,859 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:24:47,860 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 68,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 69,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 71,
    "title" : "桂林最好玩的地方",
    "content" : "桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 15:24:59,589 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-24 15:24:59,589 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 71(Integer)
2019-07-24 15:24:59,591 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:24:59,592 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 71,
    "title" : "桂林最好玩的地方",
    "content" : "桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学",
    "writeDate" : 1563840000000
  }
}
2019-07-24 15:25:10,864 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 15:25:10,866 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:25:10,868 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:25:10,869 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 68,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 69,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 71,
    "title" : "桂林最好玩的地方",
    "content" : "桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 15:25:15,208 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 15:25:15,209 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:25:15,211 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:25:15,212 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 68,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 69,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 71,
    "title" : "桂林最好玩的地方",
    "content" : "桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 15:25:40,180 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:25:40,181 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:25:40,182 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:25:40,184 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:25:43,857 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:25:43,857 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:25:43,859 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:25:43,860 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:25:44,895 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 15:25:44,895 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:25:44,897 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:25:44,898 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 15:25:49,353 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:25:49,354 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:25:49,356 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:25:49,357 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:25:50,583 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 15:25:50,584 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 3(Integer)
2019-07-24 15:25:50,585 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:25:50,586 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }
}
2019-07-24 15:25:54,053 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:25:54,054 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:25:54,056 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:25:54,056 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:25:55,313 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 15:25:55,313 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-24 15:25:55,315 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:25:55,317 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }
}
2019-07-24 15:26:15,097 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:26:15,098 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:26:15,101 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:26:15,102 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:26:16,051 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 15:26:16,052 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-24 15:26:16,054 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:26:16,055 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 15:26:31,915 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:26:31,915 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:26:31,918 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:26:31,919 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:26:33,456 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 15:26:33,456 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-24 15:26:33,457 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:26:33,471 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }
}
2019-07-24 15:27:20,166 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:27:20,166 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:27:20,170 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:27:20,170 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:27:21,524 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:27:21,524 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:27:21,526 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:27:21,527 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:27:22,855 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 15:27:22,855 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 10(Integer)
2019-07-24 15:27:22,857 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:27:22,858 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }
}
2019-07-24 15:28:15,501 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:28:15,501 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:28:15,504 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:28:15,505 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 15:28:22,590 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:28:22,591 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:28:22,592 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:28:22,593 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luojun",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:29:34,117 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:29:34,117 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:29:34,120 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 15:29:34,121 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:29:34,122 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:29:34,123 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:29:34,123 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:29:34,124 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 15:29:34,124 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:29:34,124 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:29:34,125 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:29:34,126 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:29:34,126 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:29:40,035 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 15:29:40,035 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 15:29:40,036 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:29:40,037 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-24 15:29:40,037 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 15:29:40,038 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:29:40,038 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 15:29:40,039 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 15:29:40,040 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:29:43,426 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:29:43,427 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:29:43,430 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:29:43,433 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:29:44,365 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 15:29:44,365 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 10(Integer)
2019-07-24 15:29:44,367 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:29:44,368 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }
}
2019-07-24 15:30:14,097 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:30:14,098 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:30:14,099 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:30:14,101 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:30:15,469 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 15:30:15,470 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 10(Integer)
2019-07-24 15:30:15,472 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:30:15,473 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }
}
2019-07-24 15:30:22,241 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:30:22,241 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:30:22,243 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:30:22,244 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:30:23,286 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 15:30:23,287 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 7(Integer)
2019-07-24 15:30:23,289 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:30:23,290 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }
}
2019-07-24 15:30:26,402 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:30:26,402 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:30:26,404 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:30:26,405 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:30:27,786 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:30:27,787 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:30:27,790 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:30:27,791 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:30:29,632 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:30:29,633 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:30:29,635 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:30:29,636 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:30:30,601 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 15:30:30,602 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 10(Integer)
2019-07-24 15:30:30,605 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:30:30,606 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }
}
2019-07-24 15:30:36,171 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:30:36,172 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:30:36,173 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:30:36,175 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 15:30:39,968 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:30:39,969 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:30:39,971 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:30:39,971 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 15:30:42,684 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:30:42,684 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:30:42,686 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:30:42,687 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luojun",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:30:46,757 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:30:46,758 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:30:46,759 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:30:46,760 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luojun",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:31:29,885 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 15:31:29,886 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-24 15:31:29,887 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:31:29,887 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-24 15:31:29,887 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-24 15:31:29,888 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:31:29,889 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 15:31:29,890 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-24 15:31:29,891 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:31:38,982 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:31:38,982 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:31:38,985 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 15:31:38,985 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:31:38,985 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:31:38,985 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:31:38,987 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:31:38,987 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:31:38,987 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:31:38,988 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 15:31:38,988 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:31:38,990 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:31:38,990 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:31:42,166 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 15:31:42,167 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-24 15:31:42,168 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:31:42,169 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 15:31:43,452 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:31:43,453 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:31:43,456 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 15:31:43,456 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:31:43,456 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:31:43,457 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:31:43,457 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 15:31:43,457 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:31:43,458 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:31:43,459 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:31:43,459 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:31:43,459 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:31:43,461 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:31:44,336 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 15:31:44,336 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:31:44,339 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:31:44,340 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }
}
2019-07-24 15:31:45,701 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 15:31:45,701 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:31:45,703 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:31:45,703 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:31:45,707 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:31:45,707 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:31:45,707 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:31:45,707 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 15:31:45,708 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:31:45,709 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:31:45,710 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:31:45,710 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:31:45,713 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:31:47,684 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 15:31:47,685 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:31:47,688 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:31:47,689 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 68,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 69,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 71,
    "title" : "桂林最好玩的地方",
    "content" : "桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 15:31:50,537 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-24 15:31:50,538 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 71(Integer)
2019-07-24 15:31:50,540 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:31:50,541 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 71,
    "title" : "桂林最好玩的地方",
    "content" : "桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学",
    "writeDate" : 1563840000000
  }
}
2019-07-24 15:31:52,531 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:31:52,532 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:31:52,534 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:31:52,535 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:31:54,423 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 15:31:54,423 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:31:54,425 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:31:54,426 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 15:31:55,818 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 15:31:55,819 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:31:55,821 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:31:55,822 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 68,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 69,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 71,
    "title" : "桂林最好玩的地方",
    "content" : "桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 15:31:56,880 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:31:56,881 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:31:56,882 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:31:56,883 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:31:56,884 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:31:56,885 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:31:56,885 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 15:31:56,886 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:31:56,887 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 15:31:56,887 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:31:56,887 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:31:56,887 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:31:56,889 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:33:59,054 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:33:59,055 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 用户名(String)
2019-07-24 15:33:59,056 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 15:34:03,579 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:34:03,580 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 15:34:03,581 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:34:42,390 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:34:42,391 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 15:34:42,392 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:34:56,340 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 6184 (G:\scsx\project\company\target\classes started by luojun in G:\scsx\project\company)
2019-07-24 15:34:56,343 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 15:34:56,344 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 15:34:59,088 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.327 seconds (JVM running for 4.726)
2019-07-24 15:35:43,780 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:35:43,785 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:35:43,796 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:35:43,806 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 15:35:43,816 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:35:43,816 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:35:43,816 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 15:35:43,816 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:35:43,850 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:35:43,850 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:35:43,850 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:35:43,853 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:35:43,891 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:35:54,144 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 15:35:54,145 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 15:35:54,148 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:35:54,149 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-24 15:35:54,150 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 15:35:54,152 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:35:54,153 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 15:35:54,154 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 15:35:54,156 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:35:56,854 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:35:56,855 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:35:56,857 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:35:56,858 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luojun",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:36:52,362 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:36:52,363 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-24 15:36:52,367 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:36:52,368 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 8,
    "userName" : "luojun",
    "password" : "123",
    "status" : 1
  }
}
2019-07-24 15:36:57,909 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: UPDATE users SET userName=?,password=? ,status=? WHERE userId = ? 
2019-07-24 15:36:57,909 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luo(String), 123(String), 1(Integer), 8(Integer)
2019-07-24 15:36:57,911 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:36:59,012 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:36:59,013 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:36:59,019 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:36:59,022 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:37:03,411 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:37:03,412 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-24 15:37:03,415 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 15:37:03,418 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-24 15:37:06,009 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:37:06,010 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:37:06,015 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:37:06,017 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:37:06,923 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:37:06,924 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-24 15:37:06,927 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 15:37:06,928 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-24 15:37:09,657 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:37:09,658 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:37:09,661 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:37:09,662 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:37:10,624 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:37:10,625 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luo(String)
2019-07-24 15:37:10,629 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:37:10,631 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }
}
2019-07-24 15:37:12,014 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:37:12,015 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:37:12,020 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:37:12,021 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:37:12,782 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:37:12,783 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-24 15:37:12,785 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 15:37:12,788 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-24 15:37:14,018 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:37:14,019 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:37:14,023 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:37:14,024 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:37:14,907 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:37:14,908 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:37:14,911 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:37:14,912 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:37:16,594 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:37:16,594 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-24 15:37:16,596 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 15:37:16,598 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-24 15:37:17,951 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:37:17,952 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:37:17,954 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:37:17,955 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:37:20,522 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:37:20,523 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: (String)
2019-07-24 15:37:20,537 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 15:37:20,537 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-24 15:37:24,144 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:37:24,145 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:37:24,148 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:37:24,149 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:37:25,182 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:37:25,183 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: zzg(String)
2019-07-24 15:37:25,186 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:37:25,188 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }
}
2019-07-24 15:37:26,217 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:37:26,218 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:37:26,221 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:37:26,222 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:37:28,183 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:37:28,184 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: (String)
2019-07-24 15:37:28,186 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 15:37:28,187 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-24 15:37:29,795 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:37:29,796 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:37:29,799 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:37:29,800 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:37:30,896 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:37:30,896 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: bobo(String)
2019-07-24 15:37:30,899 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:37:30,900 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }
}
2019-07-24 15:37:32,195 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:37:32,195 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:37:32,197 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:37:32,198 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:37:33,056 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:37:33,057 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 15:37:33,060 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:37:33,062 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }
}
2019-07-24 15:37:34,411 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:37:34,411 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:37:34,414 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:37:34,415 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:37:35,519 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:37:35,520 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: (String)
2019-07-24 15:37:35,523 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 15:37:35,524 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-24 15:37:36,629 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:37:36,630 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:37:36,633 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:37:36,634 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:37:37,986 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:37:37,987 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luo(String)
2019-07-24 15:37:37,991 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:37:37,992 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }
}
2019-07-24 15:37:39,041 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:37:39,041 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:37:39,045 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:37:39,047 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:37:39,895 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:37:39,896 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-24 15:37:39,899 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 15:37:39,900 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-24 15:37:49,319 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:37:49,320 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:37:49,322 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:37:49,324 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:38:08,654 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO users VALUES(NULL,? ,? ,?) 
2019-07-24 15:38:08,655 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: user(String), 123(String), 1(Integer)
2019-07-24 15:38:08,657 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:38:11,015 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:38:11,016 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:38:11,019 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:38:11,020 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:38:12,365 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:38:12,365 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: user(String)
2019-07-24 15:38:12,369 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:38:12,370 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  }
}
2019-07-24 15:38:13,862 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:38:13,862 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:38:13,865 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:38:13,866 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:38:15,158 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:38:15,159 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-24 15:38:15,161 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 15:38:15,162 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-24 15:38:21,519 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:38:21,520 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:38:21,523 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:38:21,524 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:38:25,690 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:38:25,691 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: (String)
2019-07-24 15:38:25,694 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 15:38:25,694 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-24 15:38:27,298 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:38:27,299 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:38:27,301 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:38:27,302 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:38:29,016 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:38:29,017 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luo(String)
2019-07-24 15:38:29,020 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:38:29,021 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }
}
2019-07-24 15:38:30,226 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:38:30,227 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:38:30,230 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:38:30,231 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:38:31,272 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:38:31,273 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-24 15:38:31,276 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 15:38:31,276 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-24 15:38:36,169 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:38:36,170 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:38:36,172 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:38:36,173 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:38:37,255 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:38:37,255 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: user(String)
2019-07-24 15:38:37,258 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:38:37,259 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  }
}
2019-07-24 15:38:38,668 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:38:38,669 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:38:38,672 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:38:38,673 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:38:39,931 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:38:39,931 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-24 15:38:39,934 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 15:38:39,935 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-24 15:38:41,697 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:38:41,697 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:38:41,700 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:38:41,701 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:38:42,945 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:38:42,946 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: user(String)
2019-07-24 15:38:42,949 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:38:42,949 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  }
}
2019-07-24 15:38:44,082 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:38:44,083 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:38:44,086 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:38:44,087 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:39:50,081 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:39:50,081 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:39:50,083 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:39:50,085 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:41:54,893 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:41:54,894 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:41:54,897 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 15:41:54,898 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:41:54,898 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:41:54,898 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 15:41:54,899 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:41:54,902 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:41:54,902 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:41:54,902 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:41:54,902 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:41:54,902 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:41:54,905 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:42:02,828 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 15:42:02,829 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 15:42:02,830 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:42:02,830 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-24 15:42:02,831 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 15:42:02,832 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:42:02,832 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 15:42:02,833 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 15:42:02,833 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:42:05,517 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:42:05,519 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:42:05,522 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:42:05,523 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:42:07,998 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:42:07,998 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: user(String)
2019-07-24 15:42:08,001 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:42:08,001 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  }
}
2019-07-24 15:42:10,300 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:42:10,300 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:42:10,303 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:42:10,304 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:42:11,269 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:42:11,270 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 15:42:11,272 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:42:11,272 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }
}
2019-07-24 15:42:12,681 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:42:12,682 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:42:12,683 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:42:12,684 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:42:14,402 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:42:14,402 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:42:14,405 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:42:14,406 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:42:15,747 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 15:42:15,748 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 7(Integer)
2019-07-24 15:42:15,750 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:42:15,751 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }
}
2019-07-24 15:42:18,554 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:42:18,555 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:42:18,558 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:42:18,560 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 15:42:20,267 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:42:20,267 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:42:20,267 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:42:20,267 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:42:20,270 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:42:20,270 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:42:20,270 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 15:42:20,272 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 59,
    "messageId" : 1,
    "content" : "哈哈哈哈",
    "writer" : "罗军",
    "writerDate" : 1563408000000
  }, {
    "revertId" : 62,
    "messageId" : 1,
    "content" : "今天天气真滴好",
    "writer" : "heihei",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 63,
    "messageId" : 1,
    "content" : "是啊",
    "writer" : "a'a",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 64,
    "messageId" : 1,
    "content" : "sdasdas",
    "writer" : "aaa",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 15:42:25,929 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-24 15:42:25,930 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 59(Integer)
2019-07-24 15:42:25,935 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:42:25,939 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:42:25,940 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:42:25,941 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:42:25,942 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:42:25,942 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 15:42:25,943 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 62,
    "messageId" : 1,
    "content" : "今天天气真滴好",
    "writer" : "heihei",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 63,
    "messageId" : 1,
    "content" : "是啊",
    "writer" : "a'a",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 64,
    "messageId" : 1,
    "content" : "sdasdas",
    "writer" : "aaa",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 15:42:25,944 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:42:25,946 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 15:42:28,879 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:42:28,880 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:42:28,882 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:42:28,883 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 15:42:30,089 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 15:42:30,090 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:42:30,096 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:42:30,098 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 68,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 69,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 71,
    "title" : "桂林最好玩的地方",
    "content" : "桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 15:42:33,022 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-24 15:42:33,023 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 67(Integer)
2019-07-24 15:42:33,027 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:42:33,028 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }
}
2019-07-24 15:42:34,564 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 15:42:34,565 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:42:34,567 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:42:34,568 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 68,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 69,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 71,
    "title" : "桂林最好玩的地方",
    "content" : "桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 15:42:39,709 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:42:39,710 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:42:39,715 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:42:39,718 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 15:42:41,145 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:42:41,146 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:42:41,149 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:42:41,149 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:42:43,305 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:42:43,305 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:42:43,308 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:42:43,309 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 15:42:52,630 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:42:52,631 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:42:52,635 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:42:52,636 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:42:52,636 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 15:42:52,636 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:42:52,636 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:42:52,637 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:42:52,636 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:42:52,638 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 15:42:52,639 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:42:52,640 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:42:52,645 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:42:55,238 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 15:42:55,239 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:42:55,241 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:42:55,242 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 68,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 69,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 71,
    "title" : "桂林最好玩的地方",
    "content" : "桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 15:42:57,148 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-24 15:42:57,149 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 67(Integer)
2019-07-24 15:42:57,151 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:42:57,151 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }
}
2019-07-24 15:42:59,270 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:42:59,270 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:42:59,272 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 15:42:59,272 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:42:59,274 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:42:59,274 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 15:42:59,274 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:42:59,275 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:42:59,277 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:42:59,277 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:42:59,277 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:42:59,278 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:42:59,281 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:43:00,365 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-24 15:43:00,366 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 70(Integer)
2019-07-24 15:43:00,368 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:43:00,369 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }
}
2019-07-24 15:43:02,093 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:43:02,094 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:43:02,098 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:43:02,100 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:43:05,167 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 15:43:05,168 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:43:05,171 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:43:05,172 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 15:43:06,181 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:43:06,181 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:43:06,181 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 15:43:06,182 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:43:06,182 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 15:43:06,182 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:43:06,186 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:43:06,186 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:43:06,186 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:43:06,186 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:43:06,186 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:43:06,187 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:43:06,189 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:43:07,054 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 15:43:07,054 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 7(Integer)
2019-07-24 15:43:07,056 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:43:07,056 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }
}
2019-07-24 15:43:08,864 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:43:08,865 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:43:08,866 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 15:43:08,867 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:43:08,869 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:43:08,869 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 15:43:08,869 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:43:08,870 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:43:08,870 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:43:08,871 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:43:08,873 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:43:08,874 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:43:08,874 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:43:09,561 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 15:43:09,561 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:43:09,564 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:43:09,565 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }
}
2019-07-24 15:43:17,630 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:43:17,631 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-24 15:43:17,632 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 15:43:24,187 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 15:43:24,187 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luo(String)
2019-07-24 15:43:24,188 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:43:45,868 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 15:43:45,868 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:43:45,872 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:43:45,873 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 68,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 69,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 71,
    "title" : "桂林最好玩的地方",
    "content" : "桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 15:43:47,799 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:43:47,799 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:43:47,807 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:43:47,810 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:43:55,351 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:43:55,352 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:43:55,357 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:43:55,358 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 15:44:01,512 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:44:01,512 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:44:01,513 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 7(Integer)
2019-07-24 15:44:01,513 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 7(Integer)
2019-07-24 15:44:01,520 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:44:01,520 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:44:01,521 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }
}
2019-07-24 15:44:01,521 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 65,
    "messageId" : 7,
    "content" : "出行利器很好用",
    "writer" : "luojun",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 15:44:06,538 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:44:06,538 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:44:06,541 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:44:06,543 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 15:44:08,337 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:44:08,337 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:44:08,337 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:44:08,337 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:44:08,340 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:44:08,340 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 15:44:08,340 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 15:44:08,340 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 62,
    "messageId" : 1,
    "content" : "今天天气真滴好",
    "writer" : "heihei",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 63,
    "messageId" : 1,
    "content" : "是啊",
    "writer" : "a'a",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 64,
    "messageId" : 1,
    "content" : "sdasdas",
    "writer" : "aaa",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 15:44:24,261 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 15:44:24,261 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 15:44:24,263 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:44:24,263 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-24 15:44:24,264 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 15:44:24,265 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:44:24,265 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 15:44:24,265 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 15:44:24,267 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:44:27,208 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:44:27,209 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:44:27,212 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:44:27,213 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 15:44:28,846 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:44:28,847 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:44:28,847 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:44:28,847 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:44:28,849 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 15:44:28,849 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:44:28,850 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 15:44:28,850 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 62,
    "messageId" : 1,
    "content" : "今天天气真滴好",
    "writer" : "heihei",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 63,
    "messageId" : 1,
    "content" : "是啊",
    "writer" : "a'a",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 64,
    "messageId" : 1,
    "content" : "sdasdas",
    "writer" : "aaa",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 15:44:30,636 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-24 15:44:30,636 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 62(Integer)
2019-07-24 15:44:30,641 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:44:30,649 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:44:30,649 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:44:30,649 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:44:30,649 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:44:30,651 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:44:30,652 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 15:44:30,652 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-24 15:44:30,653 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 63,
    "messageId" : 1,
    "content" : "是啊",
    "writer" : "a'a",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 64,
    "messageId" : 1,
    "content" : "sdasdas",
    "writer" : "aaa",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 15:44:31,111 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-24 15:44:31,112 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 63(Integer)
2019-07-24 15:44:31,117 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:44:31,122 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:44:31,123 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:44:31,123 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:44:31,123 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:44:31,125 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:44:31,126 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:44:31,126 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 15:44:31,126 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 64,
    "messageId" : 1,
    "content" : "sdasdas",
    "writer" : "aaa",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 15:44:31,608 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-24 15:44:31,609 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 64(Integer)
2019-07-24 15:44:31,613 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:44:31,618 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:44:31,618 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:44:31,618 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:44:31,619 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:44:31,622 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 15:44:31,622 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:44:31,623 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-24 15:44:31,623 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 15:44:35,862 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:44:35,862 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:44:35,865 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:44:35,866 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 15:44:37,060 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:44:37,060 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:44:37,060 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:44:37,060 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:44:37,063 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 15:44:37,063 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:44:37,064 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-24 15:44:37,064 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 15:45:17,278 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-24 15:45:17,280 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer), 最便宜的MP4是Mp3.(String), zzi(String), 2019-07-24 00:00:00.0(Timestamp)
2019-07-24 15:45:17,290 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:45:17,299 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:45:17,299 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:45:17,299 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:45:17,299 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:45:17,302 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:45:17,302 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:45:17,302 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 15:45:17,302 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 67,
    "messageId" : 1,
    "content" : "最便宜的MP4是Mp3.",
    "writer" : "zzi",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 15:45:37,059 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-24 15:45:37,059 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer), 我觉得不是(String), zzj(String), 2019-07-10 00:00:00.0(Timestamp)
2019-07-24 15:45:37,068 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:45:37,075 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:45:37,075 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:45:37,075 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:45:37,075 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:45:37,077 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-24 15:45:37,077 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:45:37,078 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 67,
    "messageId" : 1,
    "content" : "最便宜的MP4是Mp3.",
    "writer" : "zzi",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 68,
    "messageId" : 1,
    "content" : "我觉得不是",
    "writer" : "zzj",
    "writerDate" : 1562630400000
  } ]
}
2019-07-24 15:45:37,078 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 15:45:47,676 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-24 15:45:47,677 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer), 我觉得可以(String), zzz(String), 2019-07-25 00:00:00.0(Timestamp)
2019-07-24 15:45:47,680 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:45:47,686 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:45:47,687 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:45:47,687 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:45:47,688 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:45:47,689 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:45:47,689 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 15:45:47,689 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 15:45:47,689 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 67,
    "messageId" : 1,
    "content" : "最便宜的MP4是Mp3.",
    "writer" : "zzi",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 68,
    "messageId" : 1,
    "content" : "我觉得不是",
    "writer" : "zzj",
    "writerDate" : 1562630400000
  }, {
    "revertId" : 69,
    "messageId" : 1,
    "content" : "我觉得可以",
    "writer" : "zzz",
    "writerDate" : 1563926400000
  } ]
}
2019-07-24 15:46:01,331 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 15:46:01,332 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:46:01,334 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 15:46:01,335 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 15:46:02,852 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 15:46:02,853 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:46:02,854 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 15:46:02,855 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:46:02,855 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:46:02,856 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 15:46:02,858 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 15:46:02,859 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 67,
    "messageId" : 1,
    "content" : "最便宜的MP4是Mp3.",
    "writer" : "zzi",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 68,
    "messageId" : 1,
    "content" : "我觉得不是",
    "writer" : "zzj",
    "writerDate" : 1562630400000
  }, {
    "revertId" : 69,
    "messageId" : 1,
    "content" : "我觉得可以",
    "writer" : "zzz",
    "writerDate" : 1563926400000
  } ]
}
2019-07-24 15:46:10,449 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:46:10,451 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:46:10,455 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 15:46:10,456 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:46:10,456 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:46:10,457 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:46:10,458 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:46:10,458 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:46:10,459 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:46:10,459 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 15:46:10,461 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:46:10,461 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:46:10,461 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:46:11,951 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:46:11,951 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:46:11,954 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:46:11,955 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:52:27,662 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 15:52:27,662 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 15:52:27,663 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:52:27,663 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:52:27,666 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:52:27,667 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 15:52:27,666 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 15:52:27,667 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:52:27,667 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 15:52:27,668 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 15:52:27,668 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 15:52:27,670 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:52:27,670 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:52:33,829 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 15:52:33,830 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 15:52:33,833 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:52:33,834 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-24 15:52:33,834 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 15:52:33,836 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:52:33,837 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 15:52:33,837 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 15:52:33,838 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:52:38,225 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 15:52:38,225 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:52:38,227 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 15:52:38,228 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 16:02:47,710 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-24 16:02:47,711 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 67(Integer)
2019-07-24 16:02:47,714 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:02:47,715 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }
}
2019-07-24 16:02:56,969 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:02:56,969 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 16:02:56,970 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:02:56,970 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:02:56,973 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:02:56,974 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:02:56,974 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 16:02:56,975 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 16:02:56,975 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 16:02:56,978 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:02:56,979 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:02:56,979 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 16:02:56,981 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:03:43,725 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 16:03:43,726 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 7(Integer)
2019-07-24 16:03:43,728 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:03:43,729 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }
}
2019-07-24 16:03:47,133 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:03:47,134 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:03:47,136 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 16:03:47,137 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 16:03:53,747 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 16:03:53,747 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:03:53,755 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:03:53,759 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 68,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 69,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 71,
    "title" : "桂林最好玩的地方",
    "content" : "桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 16:03:58,519 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 16:03:58,520 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:03:58,523 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 16:03:58,525 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 16:04:03,752 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 16:04:03,752 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 16:04:03,752 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 16:04:03,752 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 16:04:03,755 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 16:04:03,755 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:04:03,756 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 16:04:03,756 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 67,
    "messageId" : 1,
    "content" : "最便宜的MP4是Mp3.",
    "writer" : "zzi",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 68,
    "messageId" : 1,
    "content" : "我觉得不是",
    "writer" : "zzj",
    "writerDate" : 1562630400000
  }, {
    "revertId" : 69,
    "messageId" : 1,
    "content" : "我觉得可以",
    "writer" : "zzz",
    "writerDate" : 1563926400000
  } ]
}
2019-07-24 16:04:10,279 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 16:04:10,280 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:04:10,282 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 16:04:10,284 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 16:04:13,702 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 16:04:13,704 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:04:13,704 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:04:13,705 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:04:13,705 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:04:13,705 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 16:04:13,708 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:04:13,709 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 16:04:13,710 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 16:04:13,710 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:04:13,710 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:04:13,710 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:04:13,711 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 16:04:51,028 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 16:04:51,029 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 16:04:51,030 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:04:51,030 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-24 16:04:51,030 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 16:04:51,031 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:04:51,032 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 16:04:51,032 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 16:04:51,033 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:04:52,775 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 16:04:52,776 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:04:52,778 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:04:52,780 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 68,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 69,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 71,
    "title" : "桂林最好玩的地方",
    "content" : "桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 16:05:21,895 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 16:05:21,895 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 16:05:21,897 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:05:21,897 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-24 16:05:21,898 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 16:05:21,900 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:05:21,900 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 16:05:21,901 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 16:05:21,903 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:05:24,971 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 16:05:24,971 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:05:24,974 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:05:24,974 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 68,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 69,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 71,
    "title" : "桂林最好玩的地方",
    "content" : "桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 16:05:28,104 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-24 16:05:28,105 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 67(Integer)
2019-07-24 16:05:28,106 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:05:28,107 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }
}
2019-07-24 16:05:33,588 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 16:05:33,589 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:05:33,591 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 16:05:33,592 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 16:05:35,856 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 16:05:35,858 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 16:05:35,859 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 16:05:35,859 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 16:05:35,860 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 16:05:35,861 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 67,
    "messageId" : 1,
    "content" : "最便宜的MP4是Mp3.",
    "writer" : "zzi",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 68,
    "messageId" : 1,
    "content" : "我觉得不是",
    "writer" : "zzj",
    "writerDate" : 1562630400000
  }, {
    "revertId" : 69,
    "messageId" : 1,
    "content" : "我觉得可以",
    "writer" : "zzz",
    "writerDate" : 1563926400000
  } ]
}
2019-07-24 16:05:35,862 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:05:35,863 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 16:05:39,627 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:05:39,628 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:05:39,631 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 16:05:39,632 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 16:05:42,017 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 16:05:42,018 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 16:05:42,020 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:05:42,021 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 16:05:46,390 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:05:46,391 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:05:46,394 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 16:05:46,395 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  } ]
}
2019-07-24 16:05:48,103 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 16:05:48,106 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 16:05:48,110 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:05:48,111 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 16:05:52,956 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 16:05:52,957 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:05:52,959 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 16:05:52,959 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 16:06:14,289 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO product VALUES(NULL,?,?,?,?,?,?,?) 
2019-07-24 16:06:14,291 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: qq(String), qqq(String), qq(String), qq(String), 100(BigDecimal), hulu5.jpg(String), 111(String)
2019-07-24 16:06:14,293 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 16:06:15,422 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 16:06:15,423 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:06:15,425 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 16:06:15,426 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 16:06:17,240 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:06:17,240 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:06:17,243 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:06:17,244 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:06:18,743 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 16:06:18,744 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 11(Integer)
2019-07-24 16:06:18,746 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:06:18,747 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  }
}
2019-07-24 16:06:59,649 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 16:06:59,650 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:06:59,652 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 16:06:59,653 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 16:07:15,499 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:07:15,499 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:07:15,501 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:07:15,502 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:07:48,412 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:07:48,413 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:07:48,415 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 16:07:48,417 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:07:48,417 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:07:48,418 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:07:48,417 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:07:48,420 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:07:48,420 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 16:07:48,421 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 16:07:48,425 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:07:48,427 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:07:48,428 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:07:58,616 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:07:58,616 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:07:58,618 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:07:58,619 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:08:00,031 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 16:08:00,032 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:08:00,035 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:08:00,037 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 16:08:00,037 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:08:00,038 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:08:00,038 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:08:00,042 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:08:00,047 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:08:00,047 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 16:08:00,049 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:08:00,051 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:08:00,052 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:08:04,861 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 16:08:04,862 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:08:04,864 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 16:08:04,866 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 16:08:06,508 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 16:08:06,509 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 16:08:06,511 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 16:08:06,512 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:08:06,513 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 16:08:06,512 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 16:08:06,519 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 16:08:06,520 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 67,
    "messageId" : 1,
    "content" : "最便宜的MP4是Mp3.",
    "writer" : "zzi",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 68,
    "messageId" : 1,
    "content" : "我觉得不是",
    "writer" : "zzj",
    "writerDate" : 1562630400000
  }, {
    "revertId" : 69,
    "messageId" : 1,
    "content" : "我觉得可以",
    "writer" : "zzz",
    "writerDate" : 1563926400000
  } ]
}
2019-07-24 16:08:10,218 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 16:08:10,219 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:08:10,221 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-24 16:08:10,222 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-24 16:08:40,878 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO message VALUE(NULL,?,?,? ,?,?) 
2019-07-24 16:08:40,879 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 今天天气(String), aaaaaaaaaaaa(String), aa(String), 2019-07-24 00:00:00.0(Timestamp), 0(Integer)
2019-07-24 16:08:40,888 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 16:08:42,191 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 16:08:42,192 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:08:42,194 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:08:42,195 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 21,
    "title" : "今天天气",
    "content" : "aaaaaaaaaaaa",
    "writer" : "aa",
    "writeDate" : 1563897600000,
    "count" : 0
  } ]
}
2019-07-24 16:08:45,901 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:08:45,902 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:08:45,903 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 16:08:45,905 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:08:45,907 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:08:45,907 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:08:45,907 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:08:45,908 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 16:08:45,908 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 16:08:45,908 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:08:45,908 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:08:45,911 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:08:45,911 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:08:54,259 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 16:08:54,260 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 11(Integer)
2019-07-24 16:08:54,263 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:08:54,264 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  }
}
2019-07-24 16:09:15,203 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 16:09:15,203 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:09:15,204 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:09:15,205 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:09:15,213 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:09:15,213 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:09:15,213 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:09:15,213 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 16:09:15,213 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 16:09:15,214 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:09:15,214 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:09:15,216 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:09:15,216 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:09:53,297 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:09:53,297 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:09:53,307 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:09:53,308 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:09:53,311 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 16:09:53,312 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:09:53,320 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:09:53,326 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:09:53,327 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 16:09:53,332 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:09:53,351 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:09:53,352 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 16:09:53,355 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:10:07,744 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 16:10:07,745 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 16:10:07,746 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:13:22,563 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 16:13:22,563 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:13:22,565 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:13:22,566 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 21,
    "title" : "今天天气",
    "content" : "aaaaaaaaaaaa",
    "writer" : "aa",
    "writeDate" : 1563897600000,
    "count" : 0
  } ]
}
2019-07-24 16:36:07,383 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 16:36:07,384 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 16:36:07,387 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:36:07,388 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-24 16:36:07,388 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 16:36:07,390 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:36:07,391 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 16:36:07,391 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 16:36:07,393 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:36:26,182 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO product VALUES(NULL,?,?,?,?,?,?,?) 
2019-07-24 16:36:26,183 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 11(String), 111(String), 111(String), 111(String), 1111(BigDecimal), timg.jpg(String), 111(String)
2019-07-24 16:36:26,186 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 16:36:28,358 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:36:28,358 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:36:28,361 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 16:36:28,362 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  }, {
    "productId" : 12,
    "serialNumber" : "11",
    "name" : "111",
    "brand" : "111",
    "model" : "111",
    "price" : 1111,
    "picture" : "timg.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:36:31,265 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 16:36:31,266 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 12(Integer)
2019-07-24 16:36:31,268 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:36:31,268 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 12,
    "serialNumber" : "11",
    "name" : "111",
    "brand" : "111",
    "model" : "111",
    "price" : 1111,
    "picture" : "timg.jpg",
    "description" : "111"
  }
}
2019-07-24 16:36:35,969 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:36:35,970 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:36:35,973 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 16:36:35,974 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  }, {
    "productId" : 12,
    "serialNumber" : "11",
    "name" : "111",
    "brand" : "111",
    "model" : "111",
    "price" : 1111,
    "picture" : "timg.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:36:38,103 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:36:38,103 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:36:38,106 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 16:36:38,106 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  }, {
    "productId" : 12,
    "serialNumber" : "11",
    "name" : "111",
    "brand" : "111",
    "model" : "111",
    "price" : 1111,
    "picture" : "timg.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:36:41,389 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM product WHERE productId = ? 
2019-07-24 16:36:41,390 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 12(Integer)
2019-07-24 16:36:41,392 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 16:36:41,398 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:36:41,398 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:36:41,401 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:36:41,401 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:36:49,537 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 16:36:49,538 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:36:49,541 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:36:49,543 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 21,
    "title" : "今天天气",
    "content" : "aaaaaaaaaaaa",
    "writer" : "aa",
    "writeDate" : 1563897600000,
    "count" : 0
  } ]
}
2019-07-24 16:36:52,382 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 16:36:52,383 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:36:52,389 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:36:52,391 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 68,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 69,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 71,
    "title" : "桂林最好玩的地方",
    "content" : "桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 16:38:51,533 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:38:51,534 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:38:51,535 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:38:51,535 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 16:38:51,538 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:38:51,538 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 16:38:51,539 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:38:51,539 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:38:51,539 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 16:38:51,539 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:38:51,540 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:38:51,541 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:38:51,542 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:38:59,033 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-24 16:38:59,034 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 71(Integer)
2019-07-24 16:38:59,037 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:38:59,037 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 71,
    "title" : "桂林最好玩的地方",
    "content" : "桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学",
    "writeDate" : 1563840000000
  }
}
2019-07-24 16:39:01,973 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:39:01,973 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:39:01,976 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:39:01,977 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:39:03,134 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 16:39:03,135 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:39:03,138 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:39:03,139 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 68,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 69,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 71,
    "title" : "桂林最好玩的地方",
    "content" : "桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 16:39:05,074 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:39:05,075 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:39:05,076 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 16:39:05,077 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:39:05,080 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:39:05,080 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:39:05,081 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 16:39:05,081 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:39:05,081 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:39:05,083 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:39:05,080 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:39:05,083 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 16:39:05,087 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:39:05,947 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 16:39:05,947 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:39:05,951 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:39:05,953 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 21,
    "title" : "今天天气",
    "content" : "aaaaaaaaaaaa",
    "writer" : "aa",
    "writeDate" : 1563897600000,
    "count" : 0
  } ]
}
2019-07-24 16:39:09,144 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 16:39:09,145 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:39:09,148 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:39:09,149 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 21,
    "title" : "今天天气",
    "content" : "aaaaaaaaaaaa",
    "writer" : "aa",
    "writeDate" : 1563897600000,
    "count" : 0
  } ]
}
2019-07-24 16:39:10,252 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:39:10,252 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:39:10,252 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:39:10,252 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 16:39:10,252 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:39:10,252 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 16:39:10,252 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 16:39:10,252 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:39:10,257 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:39:10,256 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:39:10,257 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:39:10,257 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:39:10,257 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:39:12,056 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 16:39:12,057 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:39:12,059 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:39:12,060 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 21,
    "title" : "今天天气",
    "content" : "aaaaaaaaaaaa",
    "writer" : "aa",
    "writeDate" : 1563897600000,
    "count" : 0
  } ]
}
2019-07-24 16:39:16,201 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 16:39:16,201 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 16:39:16,202 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 16:39:16,202 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 16:39:16,204 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:39:16,204 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 16:39:16,205 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 16:39:16,205 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 67,
    "messageId" : 1,
    "content" : "最便宜的MP4是Mp3.",
    "writer" : "zzi",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 68,
    "messageId" : 1,
    "content" : "我觉得不是",
    "writer" : "zzj",
    "writerDate" : 1562630400000
  }, {
    "revertId" : 69,
    "messageId" : 1,
    "content" : "我觉得可以",
    "writer" : "zzz",
    "writerDate" : 1563926400000
  } ]
}
2019-07-24 16:39:25,254 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:39:25,255 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 16:39:25,255 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:39:25,255 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:39:25,259 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:39:25,259 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:39:25,260 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 16:39:25,259 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:39:25,260 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:39:25,261 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:39:25,262 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 16:39:25,263 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:39:25,264 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:39:55,798 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 16:39:55,799 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luo(String)
2019-07-24 16:39:55,800 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:39:55,800 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-24 16:39:55,800 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luo(String)
2019-07-24 16:39:55,801 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:39:55,802 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 16:39:55,802 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luo(String)
2019-07-24 16:39:55,803 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:40:11,849 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:40:11,850 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:40:11,853 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:40:11,854 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:40:24,667 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 16:40:24,668 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:40:24,669 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 16:40:24,669 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 16:41:28,709 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 16:41:28,710 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:41:28,713 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 16:41:28,714 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 16:41:29,871 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM users WHERE userId = ? 
2019-07-24 16:41:29,872 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 10(Integer)
2019-07-24 16:41:29,873 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 16:41:31,045 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 16:41:31,046 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:41:31,048 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:41:31,048 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 16:41:37,437 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 16:41:37,439 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: (String)
2019-07-24 16:41:37,442 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 16:41:37,443 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-24 16:41:44,674 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 16:41:44,674 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:41:44,676 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:41:44,677 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 16:41:45,755 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 16:41:45,755 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 16:41:45,756 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:41:45,757 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }
}
2019-07-24 16:41:47,049 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-24 16:41:47,049 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:41:47,052 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:41:47,053 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 8,
    "userName" : "luo",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "luojun 2",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-24 16:41:49,052 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:41:49,052 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:41:49,055 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:41:49,056 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:41:53,117 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:41:53,117 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:41:53,120 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:41:53,121 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:41:55,587 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-24 16:41:55,588 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 16:41:55,589 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:41:55,590 DEBUG (ProductController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-24 16:42:15,580 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:42:15,581 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:42:15,585 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 16:42:15,585 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:42:15,585 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:42:15,585 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:42:15,585 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:42:15,586 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 16:42:15,586 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 16:42:15,587 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:42:15,591 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:42:15,591 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:42:15,591 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:43:02,105 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:43:02,105 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 16:43:02,106 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:43:02,106 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:43:02,109 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:43:02,110 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:43:02,111 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:43:02,111 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:43:02,111 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:43:02,112 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 16:43:02,112 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 16:43:02,118 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:43:02,117 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:43:04,598 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 16:43:04,599 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luo(String)
2019-07-24 16:43:04,600 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:43:04,600 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-24 16:43:04,600 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luo(String)
2019-07-24 16:43:04,601 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:43:04,602 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 16:43:04,602 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luo(String)
2019-07-24 16:43:04,603 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:43:31,891 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 16:43:31,892 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:43:31,893 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:43:31,894 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 68,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 69,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 71,
    "title" : "桂林最好玩的地方",
    "content" : "桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 16:43:52,759 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:43:52,759 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 16:43:52,759 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:43:52,759 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:43:52,759 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 16:43:52,759 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:43:52,762 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:43:52,762 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:43:52,762 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:43:52,762 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:43:52,763 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 16:43:52,763 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:43:52,765 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:43:54,900 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:43:54,902 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:43:54,904 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:43:54,905 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:43:56,402 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:43:56,403 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:43:56,403 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 16:43:56,404 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:43:56,405 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:43:56,405 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:43:56,406 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:43:56,406 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 16:43:56,406 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:43:56,408 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:43:56,408 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:43:56,408 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 16:43:56,411 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:44:08,560 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 16:44:08,561 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 16:44:08,562 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:47:56,291 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 6184 (G:\scsx\project\company\target\classes started by luojun in G:\scsx\project\company)
2019-07-24 16:47:56,292 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 16:47:56,292 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 16:47:57,266 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.024 seconds (JVM running for 4382.904)
2019-07-24 16:48:34,195 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 6184 (G:\scsx\project\company\target\classes started by luojun in G:\scsx\project\company)
2019-07-24 16:48:34,195 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 16:48:34,195 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 16:48:35,019 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.862 seconds (JVM running for 4420.656)
2019-07-24 16:54:48,361 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 16:54:48,366 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:54:48,371 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 16:54:48,372 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:54:48,373 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 16:54:48,379 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:54:48,383 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 16:54:48,386 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 16:54:48,387 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 16:54:48,386 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:54:48,391 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 16:54:48,394 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 16:54:48,400 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 16:54:59,060 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 16:54:59,061 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 16:54:59,064 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:55:12,402 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 16:55:12,403 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 16:55:12,404 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:56:47,641 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 6184 (G:\scsx\project\company\target\classes started by luojun in G:\scsx\project\company)
2019-07-24 16:56:47,641 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 16:56:47,641 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 16:56:48,635 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.049 seconds (JVM running for 4914.273)
2019-07-24 17:01:13,675 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 6184 (G:\scsx\project\company\target\classes started by luojun in G:\scsx\project\company)
2019-07-24 17:01:13,675 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 17:01:13,675 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 17:01:14,479 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.845 seconds (JVM running for 5180.117)
2019-07-24 17:01:19,703 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 17:01:19,704 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 17:01:19,705 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 17:01:23,849 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 17:01:23,849 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 17:01:23,850 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 17:01:27,723 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 17:01:27,723 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 17:01:27,724 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 17:01:31,368 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 17:01:31,369 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 17:01:31,369 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 17:01:34,585 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 17:01:34,585 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 17:01:34,586 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 17:01:38,097 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 17:01:38,097 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 17:01:38,098 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 17:01:41,615 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 17:01:41,615 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 17:01:41,616 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 17:01:45,138 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 17:01:45,138 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 17:01:45,140 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 17:01:52,614 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 17:01:52,615 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 17:01:52,615 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:01:52,616 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:01:52,619 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 17:01:52,621 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 17:01:52,621 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 17:01:52,621 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 17:01:52,621 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 17:01:52,621 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 17:01:52,624 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 17:01:52,624 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 17:01:52,628 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 17:01:56,408 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 17:01:56,410 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:01:56,412 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 17:01:56,414 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 21,
    "title" : "今天天气",
    "content" : "aaaaaaaaaaaa",
    "writer" : "aa",
    "writeDate" : 1563897600000,
    "count" : 0
  } ]
}
2019-07-24 17:01:58,245 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 17:01:58,246 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 17:01:58,247 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 17:01:58,247 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 17:01:58,247 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 17:01:58,248 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }
}
2019-07-24 17:01:58,250 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 17:01:58,251 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 66,
    "messageId" : 2,
    "content" : "为人民服务",
    "writer" : "luojun",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 17:02:12,445 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-24 17:02:12,445 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer), 是啊(String), 111(String), 2019-07-24 00:00:00.0(Timestamp)
2019-07-24 17:02:12,454 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 17:02:12,459 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 17:02:12,460 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 17:02:12,460 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 17:02:12,460 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 17:02:12,460 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 17:02:12,461 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }
}
2019-07-24 17:02:12,461 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-24 17:02:12,462 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 66,
    "messageId" : 2,
    "content" : "为人民服务",
    "writer" : "luojun",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 70,
    "messageId" : 2,
    "content" : "是啊",
    "writer" : "111",
    "writerDate" : 1563840000000
  } ]
}
2019-07-24 17:02:18,159 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-24 17:02:18,159 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer), 是啊(String), 111(String), 2019-07-25 00:00:00.0(Timestamp)
2019-07-24 17:02:18,167 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 17:02:18,171 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 17:02:18,172 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 17:02:18,172 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 17:02:18,173 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 17:02:18,173 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 17:02:18,173 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }
}
2019-07-24 17:02:18,174 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 17:02:18,174 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 66,
    "messageId" : 2,
    "content" : "为人民服务",
    "writer" : "luojun",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 70,
    "messageId" : 2,
    "content" : "是啊",
    "writer" : "111",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 71,
    "messageId" : 2,
    "content" : "是啊",
    "writer" : "111",
    "writerDate" : 1563926400000
  } ]
}
2019-07-24 17:02:23,379 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 17:02:23,380 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:02:23,381 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 17:02:23,382 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:02:23,382 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 17:02:23,383 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 17:02:23,384 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 17:02:23,385 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 17:02:23,385 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 17:02:23,385 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 17:02:23,385 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 17:02:23,390 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 17:02:23,391 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 17:02:25,249 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 17:02:25,249 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:02:25,251 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 17:02:25,252 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 17:02:27,193 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 17:02:27,194 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:02:27,197 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 17:02:27,199 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 68,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 69,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 71,
    "title" : "桂林最好玩的地方",
    "content" : "桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 17:02:28,610 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 17:02:28,610 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 17:02:28,610 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:02:28,610 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:02:28,614 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 17:02:28,613 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 17:02:28,614 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 17:02:28,615 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 17:02:28,615 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 17:02:28,617 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 17:02:28,618 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 17:02:28,618 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 17:02:28,620 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 17:02:29,693 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by writeDate desc 
2019-07-24 17:02:29,695 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:02:29,699 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 17:02:29,702 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 67,
    "title" : "一条新闻",
    "content" : "新闻新闻新闻",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 68,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 69,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 70,
    "title" : "新闻",
    "content" : "新闻新闻n",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 71,
    "title" : "桂林最好玩的地方",
    "content" : "桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学桂林电子科技大学",
    "writeDate" : 1563840000000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539129600000
  } ]
}
2019-07-24 17:02:30,610 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 17:02:30,612 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:02:30,618 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 17:02:30,620 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 17:02:31,347 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 17:02:31,347 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 17:02:31,347 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:02:31,347 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:02:31,348 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 17:02:31,348 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 17:02:31,349 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 17:02:31,349 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 17:02:31,349 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 17:02:31,350 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 17:02:31,350 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 17:02:31,351 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 17:02:31,352 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 17:02:33,362 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 17:02:33,362 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:02:33,365 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 17:02:33,365 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 17:02:33,367 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 17:02:33,367 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 17:02:33,368 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 17:02:33,367 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:02:33,368 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 17:02:33,369 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 17:02:33,371 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 17:02:33,371 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 17:02:33,372 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 17:02:34,278 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 17:02:34,279 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:02:34,283 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 17:02:34,284 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 21,
    "title" : "今天天气",
    "content" : "aaaaaaaaaaaa",
    "writer" : "aa",
    "writeDate" : 1563897600000,
    "count" : 0
  } ]
}
2019-07-24 17:02:37,620 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 17:02:37,621 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:02:37,622 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 17:02:37,623 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 17:02:37,623 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 17:02:37,623 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:02:37,626 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 17:02:37,626 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 17:02:37,626 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 17:02:37,628 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 17:02:37,629 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 17:02:37,629 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 17:02:37,633 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 17:08:52,345 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 17:08:52,346 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 17:08:52,347 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 17:08:52,348 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-24 17:08:52,349 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 17:08:52,351 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 17:08:52,351 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-24 17:08:52,352 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-24 17:08:52,353 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 17:14:30,588 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-24 17:14:30,589 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-24 17:14:30,589 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:14:30,590 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:14:30,591 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 17:14:30,591 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 17:14:30,591 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-24 17:14:30,591 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-24 17:14:30,593 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-24 17:14:30,592 DEBUG (ProductController.java:29)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c1.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 2,
    "serialNumber" : "s05",
    "name" : "摄像机",
    "brand" : "三星",
    "model" : "05",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c8.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 4,
    "serialNumber" : "v60",
    "name" : "手机",
    "brand" : "摩托罗拉",
    "model" : "60",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c22.jpg",
    "description" : "摩托罗拉 v60"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 10,
    "serialNumber" : "鞋子",
    "name" : "鞋子",
    "brand" : "鞋子",
    "model" : "鞋子",
    "price" : 10000,
    "picture" : "hulu6.jpg",
    "description" : "好鞋子"
  }, {
    "productId" : 11,
    "serialNumber" : "qq",
    "name" : "qqq",
    "brand" : "qq",
    "model" : "qq",
    "price" : 100,
    "picture" : "hulu5.jpg",
    "description" : "111"
  } ]
}
2019-07-24 17:14:30,593 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-24 17:14:30,593 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 17:14:30,596 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 17:18:17,379 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 17:18:17,380 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:18:17,382 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-24 17:18:17,383 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 21,
    "title" : "今天天气",
    "content" : "aaaaaaaaaaaa",
    "writer" : "aa",
    "writeDate" : 1563897600000,
    "count" : 0
  } ]
}
2019-07-24 17:18:29,574 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO message VALUE(NULL,?,?,? ,?,?) 
2019-07-24 17:18:29,575 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 11111111111(String), 111111111111111(String), 1111(String), 2019-07-24 00:00:00.0(Timestamp), 0(Integer)
2019-07-24 17:18:29,584 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 17:18:31,289 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-24 17:18:31,289 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 17:18:31,291 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-24 17:18:31,292 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 21,
    "title" : "今天天气",
    "content" : "aaaaaaaaaaaa",
    "writer" : "aa",
    "writeDate" : 1563897600000,
    "count" : 0
  }, {
    "messageId" : 22,
    "title" : "11111111111",
    "content" : "111111111111111",
    "writer" : "1111",
    "writeDate" : 1563897600000,
    "count" : 0
  } ]
}
2019-07-24 17:18:33,327 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 17:18:33,328 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 17:18:33,329 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 17:18:33,329 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 17:18:33,330 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 17:18:33,330 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 17:18:33,332 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-24 17:18:33,332 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 67,
    "messageId" : 1,
    "content" : "最便宜的MP4是Mp3.",
    "writer" : "zzi",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 68,
    "messageId" : 1,
    "content" : "我觉得不是",
    "writer" : "zzj",
    "writerDate" : 1562630400000
  }, {
    "revertId" : 69,
    "messageId" : 1,
    "content" : "我觉得可以",
    "writer" : "zzz",
    "writerDate" : 1563926400000
  } ]
}
2019-07-24 17:18:40,657 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-24 17:18:40,657 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer), 11111111111111111(String), 111(String), 2019-07-24 00:00:00.0(Timestamp)
2019-07-24 17:18:40,659 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 17:18:40,665 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-24 17:18:40,666 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-24 17:18:40,666 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 17:18:40,666 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 17:18:40,667 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 17:18:40,667 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 17:18:40,667 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-24 17:18:40,668 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 67,
    "messageId" : 1,
    "content" : "最便宜的MP4是Mp3.",
    "writer" : "zzi",
    "writerDate" : 1563840000000
  }, {
    "revertId" : 68,
    "messageId" : 1,
    "content" : "我觉得不是",
    "writer" : "zzj",
    "writerDate" : 1562630400000
  }, {
    "revertId" : 69,
    "messageId" : 1,
    "content" : "我觉得可以",
    "writer" : "zzz",
    "writerDate" : 1563926400000
  }, {
    "revertId" : 72,
    "messageId" : 1,
    "content" : "11111111111111111",
    "writer" : "111",
    "writerDate" : 1563840000000
  } ]
}
