2019-07-27 09:18:47,363 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 10668 (H:\company\target\classes started by 用户 in H:\company)
2019-07-27 09:18:47,378 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-27 09:18:47,378 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-27 09:18:51,471 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.874 seconds (JVM running for 7.079)
2019-07-27 09:19:11,407 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:19:11,407 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 09:19:11,407 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:19:11,407 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 09:19:11,439 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:19:11,439 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:19:11,439 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:19:11,439 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 09:19:11,474 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:19:11,474 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:19:11,474 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:19:11,478 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:19:11,526 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 09:19:17,314 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 09:19:17,318 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:19:17,318 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 09:19:17,318 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:19:17,322 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:19:17,326 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:19:17,326 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 09:19:17,326 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:19:17,326 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:19:17,330 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 09:19:17,330 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:19:17,334 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:19:17,334 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:19:23,774 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-27 09:19:23,774 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 09:19:23,774 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:19:27,086 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-27 09:19:27,086 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 09:19:27,086 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:19:28,728 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 09:19:28,732 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 09:19:28,732 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:19:28,732 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:19:28,736 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:19:28,736 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:19:28,736 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:19:28,736 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 09:19:28,736 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:19:28,740 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 09:19:28,740 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:19:28,740 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:19:28,744 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:19:51,853 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-27 09:19:51,853 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 09:19:51,857 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:19:54,109 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 09:19:54,109 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 09:19:54,109 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:19:54,109 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:19:54,113 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:19:54,113 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:19:54,113 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 09:19:54,117 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:19:54,117 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:19:54,117 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:19:54,121 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 09:19:54,121 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:19:54,121 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:20:11,983 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-27 09:20:11,983 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 09:20:11,983 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:20:13,783 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 09:20:13,783 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:20:13,783 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 09:20:13,783 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:20:13,787 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:20:13,787 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:20:13,787 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 09:20:13,787 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:20:13,787 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:20:13,791 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:20:13,791 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 09:20:13,791 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:20:13,791 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:24:55,653 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-27 09:24:55,657 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 09:24:55,657 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:24:57,177 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 09:24:57,181 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:24:57,181 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 09:24:57,181 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:24:57,181 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:24:57,185 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 09:24:57,185 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:24:57,185 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:24:57,185 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:24:57,185 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 09:24:57,185 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:24:57,185 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:24:57,189 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:25:05,254 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-27 09:25:05,254 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 09:25:05,254 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:25:07,234 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 09:25:07,234 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:25:07,234 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:25:07,238 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:25:07,238 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 09:25:07,238 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:25:07,242 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:25:07,242 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:25:07,246 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 09:25:07,246 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:25:07,246 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:25:07,250 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:25:07,254 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 09:25:08,822 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 09:25:08,822 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 09:25:08,826 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:25:08,826 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:25:08,826 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:25:08,826 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:25:08,830 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 09:25:08,830 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:25:08,830 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 09:25:08,830 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:25:08,834 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:25:08,834 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:25:08,834 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:25:12,086 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-27 09:25:12,086 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 09:25:12,086 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:25:13,238 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 09:25:13,242 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:25:13,238 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 09:25:13,242 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:25:13,242 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:25:13,242 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:25:13,242 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:25:13,246 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 09:25:13,246 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 09:25:13,246 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:25:13,246 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:25:13,246 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:25:13,246 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:25:25,582 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-27 09:25:25,582 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 09:25:25,582 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:25:26,738 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 09:25:26,742 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:25:26,742 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 09:25:26,742 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:25:26,742 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:25:26,742 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:25:26,742 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:25:26,746 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:25:26,746 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 09:25:26,746 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 09:25:26,746 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:25:26,746 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:25:26,746 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:27:29,970 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:27:29,970 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:27:29,974 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:27:29,974 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:27:29,978 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:27:29,982 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:27:29,998 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:27:34,675 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:27:34,675 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 09:27:34,679 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:27:34,679 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:27:34,679 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:27:34,679 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:27:34,683 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:27:36,715 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:27:36,715 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:27:36,719 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:27:36,719 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:27:36,719 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:27:36,719 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:27:36,719 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:28:21,569 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:28:21,573 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:28:21,573 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:28:21,577 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:28:21,577 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:28:21,577 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:28:21,581 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:28:23,624 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:28:23,624 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:28:23,628 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:28:23,632 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:28:23,632 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:28:23,636 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:28:23,640 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:28:24,472 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:28:24,472 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:28:24,476 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:28:24,480 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:28:24,480 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:28:24,480 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:28:24,484 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:28:25,160 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:28:25,160 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:28:25,164 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:28:25,164 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:28:25,168 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:28:25,168 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:28:25,172 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:28:28,004 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:28:28,004 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 09:28:28,004 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:28:28,004 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:28:28,008 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:28:28,008 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:28:28,008 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:28:29,666 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:28:29,670 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:28:29,670 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:28:29,670 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:28:29,670 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:28:29,674 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:28:29,674 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:28:31,986 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 09:28:31,990 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-27 09:28:31,990 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 09:28:31,990 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-27 09:28:31,990 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:28:31,994 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-27 09:28:32,026 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:28:32,030 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-27 09:28:37,212 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 09:28:37,212 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:28:37,212 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 09:28:37,212 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:28:37,216 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:28:37,216 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:28:37,216 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:28:37,216 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 09:28:37,216 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:28:37,216 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 09:28:37,216 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:28:37,220 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:28:37,220 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:28:39,096 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:28:39,100 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:28:39,100 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:28:39,104 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:28:39,104 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:28:39,104 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:28:39,108 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:28:44,381 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 09:28:44,385 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:28:44,385 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 09:28:44,385 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:28:44,385 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:28:44,389 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 09:28:44,389 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:28:44,389 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 09:28:44,389 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:28:44,389 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:28:44,393 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:28:44,393 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:28:44,393 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:28:48,149 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-27 09:28:48,149 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 09:28:48,153 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:28:48,153 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-27 09:28:48,153 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 09:28:48,153 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:28:48,153 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-27 09:28:48,157 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 09:28:48,157 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:28:57,002 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:28:57,002 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:28:57,006 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:28:57,006 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:28:57,006 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:28:57,010 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:28:57,010 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:30:07,668 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 09:30:07,672 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:30:07,672 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:30:07,672 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 09:30:07,676 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:30:07,676 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:30:07,676 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "bbbb",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:30:10,404 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:30:10,404 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:30:10,404 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:30:10,408 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:30:10,408 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:30:10,408 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:30:10,408 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:30:16,266 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 09:30:16,269 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 09:30:16,269 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-27 09:30:16,269 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-27 09:30:16,269 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:30:16,269 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:30:16,269 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-27 09:30:16,269 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-27 09:30:18,739 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 09:30:18,739 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:30:18,743 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:30:18,743 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 09:30:18,743 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:30:18,747 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:30:18,747 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "bbbb",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:30:29,829 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO users VALUES(NULL,? ,? ,?) 
2019-07-27 09:30:29,833 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String), 123(String), 1(Integer)
2019-07-27 09:30:29,833 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 09:30:33,537 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 09:30:33,541 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:30:33,541 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:30:33,545 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 09:30:33,545 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:30:33,545 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:30:33,545 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "bbbb",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 09:30:34,361 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 09:30:34,365 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 09:30:34,365 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-27 09:30:34,365 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 09:30:34,365 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:30:34,365 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:30:34,369 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "userId" : 6,
      "userName" : "hhh",
      "password" : "cnm",
      "status" : 1
    }, {
      "userId" : 7,
      "userName" : "luojun",
      "password" : "123",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 09:30:40,954 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 09:30:40,954 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:30:40,958 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:30:40,958 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 09:30:40,958 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 09:30:40,962 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:30:40,962 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:30:40,962 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:30:40,962 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:30:40,962 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 09:30:40,962 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:30:40,966 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:30:40,966 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:30:51,063 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-27 09:30:51,063 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 24(Integer)
2019-07-27 09:30:51,063 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:30:51,067 DEBUG (ProductController.java:67)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }
}
2019-07-27 09:30:52,972 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 09:30:52,972 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:30:52,976 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 09:30:52,976 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:30:52,976 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:30:52,980 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:30:52,980 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 09:30:52,980 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:30:52,984 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:30:52,984 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:30:52,984 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:30:52,988 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 09:30:52,992 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:30:53,852 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-27 09:30:53,852 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:30:53,856 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:30:53,856 DEBUG (NewsController.java:71)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 4,
    "title" : "时尚浪漫情侣手机配对推荐",
    "content" : "对于商家来说，十一以后的几天依然是畅销的好时候，各种优惠活动仍然在各大卖场如火如荼的进行。既然是优惠购物好时机，小编今天就为情侣们推荐了三对最登对情侣手机，甜蜜的你们一定能选购到适合他她的最登对手机。",
    "writeDate" : 1557100800000
  }
}
2019-07-27 09:30:55,996 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 09:30:55,996 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:30:55,996 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 09:30:55,996 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:30:56,000 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:30:56,000 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:30:56,000 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:30:56,004 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 09:30:56,004 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 09:30:56,004 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:30:56,008 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:30:56,008 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:30:56,012 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:30:56,984 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-27 09:30:56,984 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-27 09:30:56,988 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:30:56,988 DEBUG (NewsController.java:71)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 5,
    "title" : "三星女性翻盖E428行货仅1180",
    "content" : "以其独特的气质，深受女性消费者的喜爱。目前携节后余威，该机特价仅售：1180元，有兴趣的女性朋友可以多考虑一下。",
    "writeDate" : 1565049600000
  }
}
2019-07-27 09:30:58,617 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-27 09:30:58,621 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:30:58,621 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:30:58,625 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-27 09:30:58,625 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:30:58,625 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:30:58,629 DEBUG (ProductController.java:41)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "productId" : 1,
      "serialNumber" : "z01",
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "g123axx",
      "price" : 80005,
      "picture" : "IBM.jpg",
      "description" : "IBM5x系列"
    }, {
      "productId" : 24,
      "serialNumber" : "z01",
      "name" : "鞋子",
      "brand" : "回力",
      "model" : "g123",
      "price" : 189,
      "picture" : "hulu3.jpg",
      "description" : "葫芦兄弟"
    }, {
      "productId" : 3,
      "serialNumber" : "a08",
      "name" : "数码相机",
      "brand" : "爱国者",
      "model" : "08",
      "price" : 8000,
      "picture" : "d_r11_10_r1_c16.jpg",
      "description" : "爱国者a08"
    }, {
      "productId" : 5,
      "serialNumber" : "e80",
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "80",
      "price" : 8000,
      "picture" : "d_r11_10_r1_c2.jpg",
      "description" : "IBM5x系列"
    } ],
    "pageCount" : 2,
    "dataCount" : 8
  }
}
2019-07-27 09:31:00,624 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-27 09:31:00,624 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-27 09:31:00,628 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:31:00,628 DEBUG (ProductController.java:67)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-27 09:31:02,280 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:31:02,284 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:31:02,284 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:31:02,288 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:31:02,288 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:31:02,288 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:31:02,292 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:31:13,636 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:31:13,636 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 09:31:13,636 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:31:13,636 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:31:13,640 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:31:13,640 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:31:13,640 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:31:17,682 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:31:17,686 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:31:17,686 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:31:17,686 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:31:17,686 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:31:17,686 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:31:17,690 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:31:19,882 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:31:19,886 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 09:31:19,886 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:31:19,886 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:31:19,886 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:31:19,886 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:31:19,890 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:31:23,270 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 09:31:23,270 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 16(Integer)
2019-07-27 09:31:23,270 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 09:31:23,274 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:31:23,274 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 16(Integer)
2019-07-27 09:31:23,274 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 16,
    "title" : "IBM笔记本电脑",
    "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
    "writer" : "lsq",
    "writeDate" : 1563984000000,
    "count" : 0
  }
}
2019-07-27 09:31:23,274 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-27 09:31:23,278 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-27 09:31:35,026 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 09:31:35,026 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 09:31:35,026 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:31:35,026 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:31:35,026 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:31:35,026 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:31:35,026 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 09:31:35,030 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:31:35,030 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:31:35,030 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:31:35,042 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 09:31:35,042 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:31:35,046 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:31:36,618 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:31:36,618 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:31:36,622 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:31:36,622 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:31:36,626 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:31:36,626 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:31:36,626 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:31:37,806 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 09:31:37,806 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 09:31:37,806 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-27 09:31:37,806 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-27 09:31:37,806 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:31:37,806 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:31:37,806 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-27 09:31:37,810 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-27 09:31:45,445 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:31:45,445 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:31:45,445 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:31:45,449 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:31:45,449 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:31:45,449 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:31:45,449 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:31:49,309 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 09:31:49,309 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 09:31:49,313 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-27 09:31:49,313 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-27 09:31:49,313 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:31:49,313 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:31:49,313 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }
}
2019-07-27 09:31:49,313 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 44,
    "messageId" : 2,
    "content" : "很好，服务确实不错。很喜欢",
    "writer" : "xiaohei",
    "writerDate" : 1563926400000
  } ]
}
2019-07-27 09:31:52,786 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:31:52,786 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:31:52,790 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:31:52,790 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:31:52,794 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:31:52,794 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:31:52,794 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:31:54,186 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 09:31:54,186 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 09:31:54,186 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 14(Integer)
2019-07-27 09:31:54,186 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 14(Integer)
2019-07-27 09:31:54,186 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:31:54,186 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:31:54,186 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 14,
    "title" : "时尚浪漫手记",
    "content" : "这款手机性能怎么样？",
    "writer" : "kaka",
    "writeDate" : 1564070400000,
    "count" : 0
  }
}
2019-07-27 09:31:54,190 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 43,
    "messageId" : 14,
    "content" : "性能不错，相机像素很高。很适合年轻的情侣",
    "writer" : "zzz",
    "writerDate" : 1564012800000
  } ]
}
2019-07-27 09:31:56,234 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:31:56,234 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:31:56,234 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:31:56,234 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:31:56,238 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:31:56,238 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:31:56,238 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:31:57,730 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 09:31:57,730 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:31:57,730 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 09:31:57,730 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:31:57,734 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:31:57,734 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:31:57,734 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 09:31:57,734 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 09:31:57,734 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:31:57,734 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:31:57,738 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:31:57,738 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:31:57,742 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:32:02,550 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:32:02,550 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:32:02,554 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:32:02,554 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:32:02,554 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:32:02,558 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:32:02,558 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:32:04,182 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 09:32:04,186 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 14(Integer)
2019-07-27 09:32:04,186 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 09:32:04,186 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 14(Integer)
2019-07-27 09:32:04,186 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:32:04,186 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 14,
    "title" : "时尚浪漫手记",
    "content" : "这款手机性能怎么样？",
    "writer" : "kaka",
    "writeDate" : 1564070400000,
    "count" : 0
  }
}
2019-07-27 09:32:04,186 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:32:04,190 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 43,
    "messageId" : 14,
    "content" : "性能不错，相机像素很高。很适合年轻的情侣",
    "writer" : "zzz",
    "writerDate" : 1564012800000
  } ]
}
2019-07-27 09:32:07,293 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:32:07,293 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:32:07,293 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:32:07,293 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:32:07,297 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:32:07,297 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:32:07,297 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:32:08,834 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 09:32:08,834 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 09:32:08,834 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 15(Integer)
2019-07-27 09:32:08,834 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 15(Integer)
2019-07-27 09:32:08,834 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:32:08,834 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-27 09:32:08,838 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 15,
    "title" : "爱国者数码相机",
    "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
    "writer" : "liulei",
    "writeDate" : 1563897600000,
    "count" : 0
  }
}
2019-07-27 09:32:08,838 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-27 09:34:01,058 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-27 09:34:01,062 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 15(Integer), 据我所知 ，最近还没有什么优惠活动哦。
我这边用过，体验不错。(String), luojun(String), 2019-07-27 00:00:00.0(Timestamp)
2019-07-27 09:34:01,434 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 09:34:01,442 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 09:34:01,442 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 09:34:01,442 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 15(Integer)
2019-07-27 09:34:01,442 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 15(Integer)
2019-07-27 09:34:01,442 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:34:01,442 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:34:01,442 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 15,
    "title" : "爱国者数码相机",
    "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
    "writer" : "liulei",
    "writeDate" : 1563897600000,
    "count" : 0
  }
}
2019-07-27 09:34:01,442 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 45,
    "messageId" : 15,
    "content" : "据我所知 ，最近还没有什么优惠活动哦。\r\n我这边用过，体验不错。",
    "writer" : "luojun",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 09:34:10,613 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 09:34:10,613 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 09:34:10,613 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:34:10,617 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 09:34:10,617 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:34:10,617 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:34:10,621 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 09:34:16,096 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 09:34:16,100 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:34:16,100 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 09:34:16,100 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:34:16,100 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:34:16,100 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:34:16,100 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 09:34:16,100 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:34:16,100 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 09:34:16,104 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:34:16,104 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:34:16,108 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:34:16,108 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:34:18,888 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-27 09:34:18,888 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 24(Integer)
2019-07-27 09:34:18,888 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:34:18,892 DEBUG (ProductController.java:67)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }
}
2019-07-27 09:34:21,288 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 09:34:21,292 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:34:21,292 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 09:34:21,292 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:34:21,292 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:34:21,296 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 09:34:21,296 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:34:21,296 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:34:21,296 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:34:21,300 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 09:34:21,300 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:34:21,300 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:34:21,300 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:34:23,521 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-27 09:34:23,521 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-27 09:34:23,525 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 09:34:23,525 DEBUG (ProductController.java:67)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }
}
2019-07-27 09:34:30,693 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 09:34:30,697 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 09:34:30,697 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:34:30,697 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 09:34:30,697 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:34:30,697 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 09:34:30,701 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 09:34:30,701 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:34:30,701 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 09:34:30,701 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 09:34:30,701 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 09:34:30,701 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 09:34:30,705 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 10:05:34,998 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 14348 (H:\company\target\classes started by 用户 in H:\company)
2019-07-27 10:05:35,006 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-27 10:05:35,010 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-27 10:05:39,347 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 5.217 seconds (JVM running for 7.542)
2019-07-27 10:05:40,579 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 10:05:40,579 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 10:05:40,579 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 10:05:40,587 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 10:05:40,623 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 10:05:40,623 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:05:40,623 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 10:05:40,623 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:05:40,679 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 10:05:40,679 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 10:05:40,679 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 10:05:40,683 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 10:05:40,731 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 10:05:44,408 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 10:05:44,408 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 10:05:44,408 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:05:44,412 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:05:44,412 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 10:05:44,412 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 10:05:44,412 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 10:05:44,412 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 10:05:44,420 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 10:05:44,420 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 10:05:44,420 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 10:05:44,420 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 10:05:44,424 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 10:05:50,496 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-27 10:05:50,496 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 10:05:50,500 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:05:50,500 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-27 10:05:50,500 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 10:05:50,500 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:05:50,504 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-27 10:05:50,504 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 10:05:50,504 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:06:03,572 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 10:06:03,576 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 10:06:03,576 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 10:06:03,576 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 10:06:03,576 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:06:03,580 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:06:03,584 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 10:06:06,695 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news LIMIT ?,? 
2019-07-27 10:06:06,695 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 10:06:06,699 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 10:06:06,699 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM news 
2019-07-27 10:06:06,699 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:06:06,699 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:06:06,703 DEBUG (NewsController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "newsId" : 1,
      "title" : "庆十一商品促销",
      "content" : "\t为了庆祝十一国庆节，现公司所有电子商品进行促销活动，活动期间所有商品打五折。",
      "writeDate" : 1562457600000
    }, {
      "newsId" : 2,
      "title" : "爱国者数码相机今日七折优惠",
      "content" : "为了答谢广大用户，爱国者数码相机今日七折优惠。",
      "writeDate" : 1557014400000
    }, {
      "newsId" : 3,
      "title" : "黄金周最热销手机汇总导购",
      "content" : "在这个被看作是我国最大的消费高峰之一的七天长假中，那些准备买新手机的朋友们是不是已经买到了称心如意的手机呢？今天手机中国编辑就把从北京几大手机卖场了解到的这七天长假中几款最热卖的机型做个总结，相信这些机型也是大多数朋友认可和喜爱的，看看你的选择是不是和很多朋友一样，也为还没选好目标的朋友做个推荐",
      "writeDate" : 1565222400000
    }, {
      "newsId" : 4,
      "title" : "时尚浪漫情侣手机配对推荐",
      "content" : "对于商家来说，十一以后的几天依然是畅销的好时候，各种优惠活动仍然在各大卖场如火如荼的进行。既然是优惠购物好时机，小编今天就为情侣们推荐了三对最登对情侣手机，甜蜜的你们一定能选购到适合他她的最登对手机。",
      "writeDate" : 1557100800000
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 10:07:27,342 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news LIMIT ?,? 
2019-07-27 10:07:27,346 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 10:07:27,350 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 10:07:27,350 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM news 
2019-07-27 10:07:27,350 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:07:27,354 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:07:27,354 DEBUG (NewsController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "newsId" : 1,
      "title" : "庆十一商品促销",
      "content" : "\t为了庆祝十一国庆节，现公司所有电子商品进行促销活动，活动期间所有商品打五折。",
      "writeDate" : 1562457600000
    }, {
      "newsId" : 2,
      "title" : "爱国者数码相机今日七折优惠",
      "content" : "为了答谢广大用户，爱国者数码相机今日七折优惠。",
      "writeDate" : 1557014400000
    }, {
      "newsId" : 3,
      "title" : "黄金周最热销手机汇总导购",
      "content" : "在这个被看作是我国最大的消费高峰之一的七天长假中，那些准备买新手机的朋友们是不是已经买到了称心如意的手机呢？今天手机中国编辑就把从北京几大手机卖场了解到的这七天长假中几款最热卖的机型做个总结，相信这些机型也是大多数朋友认可和喜爱的，看看你的选择是不是和很多朋友一样，也为还没选好目标的朋友做个推荐",
      "writeDate" : 1565222400000
    }, {
      "newsId" : 4,
      "title" : "时尚浪漫情侣手机配对推荐",
      "content" : "对于商家来说，十一以后的几天依然是畅销的好时候，各种优惠活动仍然在各大卖场如火如荼的进行。既然是优惠购物好时机，小编今天就为情侣们推荐了三对最登对情侣手机，甜蜜的你们一定能选购到适合他她的最登对手机。",
      "writeDate" : 1557100800000
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 10:11:51,347 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 10:11:51,347 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 10:11:51,351 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 10:11:51,355 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 10:11:51,355 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:11:51,359 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:11:51,359 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 10:52:48,238 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 15312 (H:\company\target\classes started by 用户 in H:\company)
2019-07-27 10:52:48,246 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-27 10:52:48,246 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-27 10:52:52,886 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 5.644 seconds (JVM running for 7.959)
2019-07-27 10:53:02,993 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 10:53:02,993 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 10:53:02,993 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 10:53:02,997 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 10:53:03,041 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:53:03,041 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:53:03,041 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 10:53:03,041 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 10:53:03,089 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 10:53:03,089 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 10:53:03,093 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 10:53:03,093 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 10:53:03,153 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 10:53:07,957 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 10:53:07,957 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 10:53:07,957 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:53:07,957 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:53:07,961 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 10:53:07,961 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 10:53:07,961 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 10:53:07,961 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 10:53:07,969 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 10:53:07,969 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 10:53:07,969 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 10:53:07,969 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 10:53:07,969 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 10:53:10,873 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-27 10:53:10,873 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 10:53:10,877 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:53:10,881 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-27 10:53:10,881 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 10:53:10,881 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:53:10,881 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-27 10:53:10,885 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 10:53:10,885 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:53:14,738 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 10:53:14,738 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 10:53:14,742 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 10:53:14,742 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 10:53:14,746 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:53:14,746 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:53:14,754 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 5
  }
}
2019-07-27 10:53:43,977 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO message VALUE(NULL,?,?,? ,?,?) 
2019-07-27 10:53:43,981 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 时尚浪漫手记(String), 这东西好嘛？(String), liuxuqiang(String), 2019-07-27 00:00:00.0(Timestamp), 0(Integer)
2019-07-27 10:53:44,081 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 10:53:44,201 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 10:53:44,201 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 10:53:44,205 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 10:53:44,209 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 10:53:44,209 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:53:44,213 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:53:44,213 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 10:53:46,685 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 10:53:46,685 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 10:53:46,689 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-27 10:53:46,689 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 10:53:46,689 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:53:46,693 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:53:46,693 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 10:54:49,091 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 10:54:49,095 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 10:54:49,095 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 10:54:49,099 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 10:54:49,099 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:54:49,099 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:54:49,103 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "bbbb",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 10:54:52,699 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 10:54:52,699 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 10:54:52,703 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-27 10:54:52,703 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 10:54:52,703 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:54:52,703 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:54:52,707 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "userId" : 6,
      "userName" : "hhh",
      "password" : "cnm",
      "status" : 1
    }, {
      "userId" : 7,
      "userName" : "luojun",
      "password" : "123",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 10:55:05,365 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO users VALUES(NULL,? ,? ,?) 
2019-07-27 10:55:05,365 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: liulei(String), 123(String), 1(Integer)
2019-07-27 10:55:05,365 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 10:55:26,213 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 10:55:26,217 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 10:55:26,217 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 10:55:26,217 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 10:55:26,221 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:55:26,221 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:55:26,221 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "bbbb",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 10:55:27,085 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 10:55:27,085 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 10:55:27,085 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-27 10:55:27,085 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 10:55:27,085 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:55:27,089 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:55:27,089 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "userId" : 6,
      "userName" : "hhh",
      "password" : "cnm",
      "status" : 1
    }, {
      "userId" : 7,
      "userName" : "luojun",
      "password" : "123",
      "status" : 1
    }, {
      "userId" : 8,
      "userName" : "liulei",
      "password" : "123",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 10:55:35,739 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 10:55:35,739 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 10:55:35,743 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 10:55:35,743 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 10:55:35,743 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:55:35,747 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:55:35,747 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "bbbb",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 10:55:38,539 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-27 10:55:38,539 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 10:55:38,543 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:55:38,543 DEBUG (UsersController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }
}
2019-07-27 10:55:40,108 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 10:55:40,108 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 10:55:40,112 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 10:55:40,112 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 10:55:40,116 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:55:40,116 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:55:40,116 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "bbbb",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 10:55:41,332 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 10:55:41,332 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 10:55:41,332 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-27 10:55:41,336 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 10:55:41,336 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 10:55:41,336 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 10:55:41,336 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "userId" : 6,
      "userName" : "hhh",
      "password" : "cnm",
      "status" : 1
    }, {
      "userId" : 7,
      "userName" : "luojun",
      "password" : "123",
      "status" : 1
    }, {
      "userId" : 8,
      "userName" : "liulei",
      "password" : "123",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 11:00:17,946 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO product VALUES(NULL,?,?,?,?,?,?,?) 
2019-07-27 11:00:17,946 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: mini(String), 平板(String), 苹果(String), mini2018(String), 2700(BigDecimal), ipad.jpg(String), 时尚、便捷、外观优美(String)
2019-07-27 11:00:17,974 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 11:00:20,175 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 11:00:20,175 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:00:20,179 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:00:20,179 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 11:00:20,179 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:00:20,183 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:00:20,183 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "bbbb",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 11:00:22,539 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 11:00:22,539 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 11:00:22,543 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-27 11:00:22,543 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 11:00:22,543 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:00:22,543 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:00:22,547 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "userId" : 6,
      "userName" : "hhh",
      "password" : "cnm",
      "status" : 1
    }, {
      "userId" : 7,
      "userName" : "luojun",
      "password" : "123",
      "status" : 1
    }, {
      "userId" : 8,
      "userName" : "liulei",
      "password" : "123",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 11:00:26,393 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-27 11:00:26,393 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:00:26,397 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:00:26,397 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-27 11:00:26,397 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:00:26,401 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:00:26,401 DEBUG (ProductController.java:41)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "productId" : 1,
      "serialNumber" : "z01",
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "g123axx",
      "price" : 80005,
      "picture" : "IBM.jpg",
      "description" : "IBM5x系列"
    }, {
      "productId" : 24,
      "serialNumber" : "z01",
      "name" : "鞋子",
      "brand" : "回力",
      "model" : "g123",
      "price" : 189,
      "picture" : "hulu3.jpg",
      "description" : "葫芦兄弟"
    }, {
      "productId" : 3,
      "serialNumber" : "a08",
      "name" : "数码相机",
      "brand" : "爱国者",
      "model" : "08",
      "price" : 8000,
      "picture" : "d_r11_10_r1_c16.jpg",
      "description" : "爱国者a08"
    }, {
      "productId" : 26,
      "serialNumber" : "mini",
      "name" : "平板",
      "brand" : "苹果",
      "model" : "mini2018",
      "price" : 2700,
      "picture" : "ipad.jpg",
      "description" : "时尚、便捷、外观优美"
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 11:00:28,929 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-27 11:00:28,929 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 11:00:28,929 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:00:28,933 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-27 11:00:28,933 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:00:28,933 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:00:28,933 DEBUG (ProductController.java:41)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "productId" : 5,
      "serialNumber" : "e80",
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "80",
      "price" : 8000,
      "picture" : "d_r11_10_r1_c2.jpg",
      "description" : "IBM5x系列"
    }, {
      "productId" : 6,
      "serialNumber" : "sx100",
      "name" : "摄像机",
      "brand" : "松下",
      "model" : "100",
      "price" : 8000,
      "picture" : "d_r11_10_r1_c81.jpg",
      "description" : "松下sx100"
    }, {
      "productId" : 7,
      "serialNumber" : "k200",
      "name" : "数码相机",
      "brand" : "柯达",
      "model" : "200",
      "price" : 8000,
      "picture" : "d_r11_10_r1_c116.jpg",
      "description" : "柯达200"
    }, {
      "productId" : 8,
      "serialNumber" : "sa1980",
      "name" : "索爱手机",
      "brand" : "索爱",
      "model" : "1980",
      "price" : 5000,
      "picture" : "d_r11_10_r1_c221.jpg",
      "description" : "索爱最新产品"
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 11:00:30,533 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-27 11:00:30,533 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 8(Integer), 4(Integer)
2019-07-27 11:00:30,537 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:00:30,537 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-27 11:00:30,537 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:00:30,537 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:00:30,537 DEBUG (ProductController.java:41)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 3,
    "pageData" : [ {
      "productId" : 25,
      "serialNumber" : "z01",
      "name" : "鞋子",
      "brand" : "回力",
      "model" : "g123",
      "price" : 200,
      "picture" : "hulu5.jpg",
      "description" : "葫芦兄弟"
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 11:00:32,921 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-27 11:00:32,921 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 11:00:32,921 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:00:32,925 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-27 11:00:32,925 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:00:32,925 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:00:32,929 DEBUG (ProductController.java:41)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "productId" : 5,
      "serialNumber" : "e80",
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "80",
      "price" : 8000,
      "picture" : "d_r11_10_r1_c2.jpg",
      "description" : "IBM5x系列"
    }, {
      "productId" : 6,
      "serialNumber" : "sx100",
      "name" : "摄像机",
      "brand" : "松下",
      "model" : "100",
      "price" : 8000,
      "picture" : "d_r11_10_r1_c81.jpg",
      "description" : "松下sx100"
    }, {
      "productId" : 7,
      "serialNumber" : "k200",
      "name" : "数码相机",
      "brand" : "柯达",
      "model" : "200",
      "price" : 8000,
      "picture" : "d_r11_10_r1_c116.jpg",
      "description" : "柯达200"
    }, {
      "productId" : 8,
      "serialNumber" : "sa1980",
      "name" : "索爱手机",
      "brand" : "索爱",
      "model" : "1980",
      "price" : 5000,
      "picture" : "d_r11_10_r1_c221.jpg",
      "description" : "索爱最新产品"
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 11:00:39,026 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-27 11:00:39,026 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 8(Integer), 4(Integer)
2019-07-27 11:00:39,030 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:00:39,030 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-27 11:00:39,030 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:00:39,030 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:00:39,030 DEBUG (ProductController.java:41)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 3,
    "pageData" : [ {
      "productId" : 25,
      "serialNumber" : "z01",
      "name" : "鞋子",
      "brand" : "回力",
      "model" : "g123",
      "price" : 200,
      "picture" : "hulu5.jpg",
      "description" : "葫芦兄弟"
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 11:00:41,186 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-27 11:00:41,186 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 11:00:41,190 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:00:41,190 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-27 11:00:41,190 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:00:41,190 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:00:41,190 DEBUG (ProductController.java:41)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "productId" : 5,
      "serialNumber" : "e80",
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "80",
      "price" : 8000,
      "picture" : "d_r11_10_r1_c2.jpg",
      "description" : "IBM5x系列"
    }, {
      "productId" : 6,
      "serialNumber" : "sx100",
      "name" : "摄像机",
      "brand" : "松下",
      "model" : "100",
      "price" : 8000,
      "picture" : "d_r11_10_r1_c81.jpg",
      "description" : "松下sx100"
    }, {
      "productId" : 7,
      "serialNumber" : "k200",
      "name" : "数码相机",
      "brand" : "柯达",
      "model" : "200",
      "price" : 8000,
      "picture" : "d_r11_10_r1_c116.jpg",
      "description" : "柯达200"
    }, {
      "productId" : 8,
      "serialNumber" : "sa1980",
      "name" : "索爱手机",
      "brand" : "索爱",
      "model" : "1980",
      "price" : 5000,
      "picture" : "d_r11_10_r1_c221.jpg",
      "description" : "索爱最新产品"
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 11:00:42,622 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-27 11:00:42,622 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:00:42,622 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:00:42,626 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-27 11:00:42,626 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:00:42,626 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:00:42,626 DEBUG (ProductController.java:41)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "productId" : 1,
      "serialNumber" : "z01",
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "g123axx",
      "price" : 80005,
      "picture" : "IBM.jpg",
      "description" : "IBM5x系列"
    }, {
      "productId" : 24,
      "serialNumber" : "z01",
      "name" : "鞋子",
      "brand" : "回力",
      "model" : "g123",
      "price" : 189,
      "picture" : "hulu3.jpg",
      "description" : "葫芦兄弟"
    }, {
      "productId" : 3,
      "serialNumber" : "a08",
      "name" : "数码相机",
      "brand" : "爱国者",
      "model" : "08",
      "price" : 8000,
      "picture" : "d_r11_10_r1_c16.jpg",
      "description" : "爱国者a08"
    }, {
      "productId" : 26,
      "serialNumber" : "mini",
      "name" : "平板",
      "brand" : "苹果",
      "model" : "mini2018",
      "price" : 2700,
      "picture" : "ipad.jpg",
      "description" : "时尚、便捷、外观优美"
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 11:00:50,237 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId=? 
2019-07-27 11:00:50,237 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 26(Integer)
2019-07-27 11:00:50,241 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:00:50,241 DEBUG (ProductController.java:67)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }
}
2019-07-27 11:13:40,127 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 15312 (H:\company\target\classes started by 用户 in H:\company)
2019-07-27 11:13:40,127 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-27 11:13:40,127 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-27 11:13:41,339 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.256 seconds (JVM running for 1256.414)
2019-07-27 11:13:46,827 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 11:13:46,831 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:13:46,835 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 11:13:46,835 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 11:13:46,835 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 11:13:46,835 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 11:13:46,839 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:13:46,847 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 11:13:46,847 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:13:46,851 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 11:13:46,851 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 11:13:46,863 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:13:46,867 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 11:13:51,878 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 11:13:51,878 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:13:51,882 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 11:13:51,882 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:13:51,882 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 11:13:51,886 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 11:13:51,886 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 11:13:51,882 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 11:13:51,886 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 11:13:51,886 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 11:13:51,886 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:13:51,890 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 11:13:51,890 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:14:18,354 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 11:14:18,354 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 11:14:18,354 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:14:18,354 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:14:18,358 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 11:14:18,362 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 11:14:18,362 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 11:14:18,366 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 11:14:18,366 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 11:14:18,370 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 11:14:18,370 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:14:18,394 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 11:14:18,398 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:14:21,131 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 11:14:21,131 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:14:21,131 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 11:14:21,135 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:14:21,143 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 11:14:21,143 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 11:14:21,143 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 11:14:21,147 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:14:21,147 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 11:14:21,147 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 11:14:21,151 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 11:14:21,151 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 11:14:21,155 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:14:42,102 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 11:14:42,102 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:14:42,106 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:14:42,106 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 11:14:42,106 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:14:42,110 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:14:42,114 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 11:14:44,694 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 11:14:44,694 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 11:14:44,694 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-27 11:14:44,698 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 11:14:44,698 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:14:44,698 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:14:44,702 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 11:14:45,594 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 11:14:45,598 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:14:45,598 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:14:45,598 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 11:14:45,598 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:14:45,602 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:14:45,602 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 11:14:46,818 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 11:14:46,818 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 11:14:46,822 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-27 11:14:46,822 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 11:14:46,822 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:14:46,822 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:14:46,822 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 11:14:49,106 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 11:14:49,110 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:14:49,114 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:14:49,114 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 11:14:49,118 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:14:49,118 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:14:49,118 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 11:14:50,182 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 11:14:50,182 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 11:14:50,182 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-27 11:14:50,182 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 11:14:50,182 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:14:50,186 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:14:50,186 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 11:14:51,243 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 11:14:51,247 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:14:51,247 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:14:51,247 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 11:14:51,247 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:14:51,247 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:14:51,251 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 11:15:10,977 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 11:15:10,977 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:15:10,981 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:15:10,981 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 11:15:10,981 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:15:10,985 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:15:10,985 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 11:15:11,688 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 11:15:11,688 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:15:11,692 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:15:11,696 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 11:15:11,696 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:15:11,696 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:15:11,700 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 11:15:12,240 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? 
2019-07-27 11:15:12,244 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:15:12,244 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:15:12,248 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 11:15:12,248 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:15:12,248 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:15:12,252 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 11:15:13,344 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 15312 (H:\company\target\classes started by 用户 in H:\company)
2019-07-27 11:15:13,344 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-27 11:15:13,344 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-27 11:15:14,912 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.612 seconds (JVM running for 1349.985)
2019-07-27 11:15:18,405 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? order by writeDate desc 
2019-07-27 11:15:18,417 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:15:18,569 ERROR (BaseController.java:295)- 系统异常:
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT * FROM message LIMIT ?,? order by writeDate desc
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT * FROM message LIMIT ?,? order by writeDate desc
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy62.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy93.getMessageByPage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.getMessageByPage(MessageServiceImpl.java:69)
	at com.zryx.company.controller.MessageController.initMessage(MessageController.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor113.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy78.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
2019-07-27 11:15:28,313 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 11:15:28,317 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:15:28,317 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 11:15:28,321 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:15:28,325 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 11:15:28,329 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 11:15:28,329 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 11:15:28,329 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 11:15:28,329 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 11:15:28,329 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 11:15:28,333 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:15:28,341 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:15:28,349 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 11:15:30,085 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? order by writeDate desc 
2019-07-27 11:15:30,085 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:15:30,089 ERROR (BaseController.java:295)- 系统异常:
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT * FROM message LIMIT ?,? order by writeDate desc
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT * FROM message LIMIT ?,? order by writeDate desc
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy62.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy93.getMessageByPage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.getMessageByPage(MessageServiceImpl.java:69)
	at com.zryx.company.controller.MessageController.initMessage(MessageController.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor113.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy78.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
2019-07-27 11:15:43,478 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message LIMIT ?,? order by writeDate desc 
2019-07-27 11:15:43,479 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:15:43,483 ERROR (BaseController.java:295)- 系统异常:
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT * FROM message LIMIT ?,? order by writeDate desc
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT * FROM message LIMIT ?,? order by writeDate desc
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy62.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy93.getMessageByPage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.getMessageByPage(MessageServiceImpl.java:69)
	at com.zryx.company.controller.MessageController.initMessage(MessageController.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by writeDate desc' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor113.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy78.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
2019-07-27 11:15:46,063 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 15312 (H:\company\target\classes started by 用户 in H:\company)
2019-07-27 11:15:46,063 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-27 11:15:46,063 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-27 11:15:47,843 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.836 seconds (JVM running for 1382.919)
2019-07-27 11:15:48,067 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 11:15:48,071 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:15:48,191 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:15:48,195 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 11:15:48,195 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:15:48,195 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:15:48,211 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 11:15:50,435 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 11:15:50,435 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:15:50,439 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:15:50,439 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 11:15:50,439 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:15:50,443 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:15:50,443 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 11:15:52,787 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 11:15:52,787 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 11:15:52,787 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-27 11:15:52,791 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 11:15:52,791 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:15:52,791 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:15:52,791 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 11:15:53,947 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 11:15:53,947 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:15:53,951 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:15:53,951 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 11:15:53,951 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:15:53,951 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:15:53,955 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 11:15:55,579 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 11:15:55,583 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 11:15:55,583 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 11:15:55,583 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:15:55,587 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 11:15:55,587 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 11:15:55,587 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-27 11:15:55,591 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-27 11:16:04,915 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 11:16:04,915 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:16:04,919 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:16:04,923 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 11:16:04,923 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:16:04,927 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:16:04,931 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 11:16:06,919 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 11:16:06,919 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 11:16:06,919 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 11:16:06,919 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 11:16:06,923 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:16:06,923 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-27 11:16:06,923 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 11:16:06,923 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-27 11:16:17,651 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-27 11:16:17,655 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer), 好(String), lsq(String), 2019-07-27 00:00:00.0(Timestamp)
2019-07-27 11:16:17,767 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 11:16:17,775 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 11:16:17,775 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 11:16:17,775 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 11:16:17,775 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 11:16:17,775 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:16:17,779 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 11:16:17,779 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:16:17,779 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 46,
    "messageId" : 17,
    "content" : "好",
    "writer" : "lsq",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 11:16:20,171 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 11:16:20,171 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:16:20,171 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:16:20,175 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 11:16:20,175 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:16:20,179 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:16:20,179 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 11:16:22,427 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 11:16:22,427 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 14(Integer)
2019-07-27 11:16:22,427 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 11:16:22,427 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 14(Integer)
2019-07-27 11:16:22,427 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:16:22,431 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 14,
    "title" : "时尚浪漫手记",
    "content" : "这款手机性能怎么样？",
    "writer" : "kaka",
    "writeDate" : 1564070400000,
    "count" : 0
  }
}
2019-07-27 11:16:22,431 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:16:22,431 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 43,
    "messageId" : 14,
    "content" : "性能不错，相机像素很高。很适合年轻的情侣",
    "writer" : "zzz",
    "writerDate" : 1564012800000
  } ]
}
2019-07-27 11:16:26,903 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 11:16:26,903 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:16:26,907 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:16:26,911 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 11:16:26,911 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:16:26,911 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:16:26,915 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 11:16:28,391 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 11:16:28,395 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 16(Integer)
2019-07-27 11:16:28,395 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 11:16:28,395 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 16(Integer)
2019-07-27 11:16:28,395 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:16:28,395 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 16,
    "title" : "IBM笔记本电脑",
    "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
    "writer" : "lsq",
    "writeDate" : 1563984000000,
    "count" : 0
  }
}
2019-07-27 11:16:28,395 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-27 11:16:28,399 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-27 11:17:05,567 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-27 11:17:05,571 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 16(Integer), 就是其他品牌6000的配置(String), cdscdsc(String), 2019-07-27 00:00:00.0(Timestamp)
2019-07-27 11:17:05,919 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 11:17:05,927 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 11:17:05,927 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 11:17:05,927 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 16(Integer)
2019-07-27 11:17:05,927 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 16(Integer)
2019-07-27 11:17:05,931 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:17:05,931 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:17:05,931 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 16,
    "title" : "IBM笔记本电脑",
    "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
    "writer" : "lsq",
    "writeDate" : 1563984000000,
    "count" : 0
  }
}
2019-07-27 11:17:05,931 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 47,
    "messageId" : 16,
    "content" : "就是其他品牌6000的配置",
    "writer" : "cdscdsc",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 11:17:08,995 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 11:17:08,995 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:17:08,999 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:17:09,003 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 11:17:09,003 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:17:09,003 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:17:09,003 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 11:17:10,891 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 11:17:10,891 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 16(Integer)
2019-07-27 11:17:10,891 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 11:17:10,891 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:17:10,891 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 16(Integer)
2019-07-27 11:17:10,891 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 16,
    "title" : "IBM笔记本电脑",
    "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
    "writer" : "lsq",
    "writeDate" : 1563984000000,
    "count" : 0
  }
}
2019-07-27 11:17:10,895 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:17:10,895 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 47,
    "messageId" : 16,
    "content" : "就是其他品牌6000的配置",
    "writer" : "cdscdsc",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 11:17:13,175 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 11:17:13,175 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:17:13,179 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:17:13,183 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 11:17:13,183 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:17:13,183 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:17:13,187 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 11:17:14,315 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 11:17:14,319 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 15(Integer)
2019-07-27 11:17:14,319 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 11:17:14,319 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:17:14,319 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 15(Integer)
2019-07-27 11:17:14,319 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 15,
    "title" : "爱国者数码相机",
    "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
    "writer" : "liulei",
    "writeDate" : 1563897600000,
    "count" : 0
  }
}
2019-07-27 11:17:14,323 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:17:14,323 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 45,
    "messageId" : 15,
    "content" : "据我所知 ，最近还没有什么优惠活动哦。\r\n我这边用过，体验不错。",
    "writer" : "luojun",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 11:17:18,288 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 11:17:18,288 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 11:17:18,288 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:17:18,288 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:17:18,292 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 11:17:18,292 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 11:17:18,292 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 11:17:18,292 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 11:17:18,292 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 11:17:18,296 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 11:17:18,300 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:17:18,300 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:17:18,308 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 11:17:24,164 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-27 11:17:24,164 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 11:17:24,168 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:17:24,168 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-27 11:17:24,172 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:17:24,172 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:17:24,172 DEBUG (ProductController.java:41)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "productId" : 1,
      "serialNumber" : "z01",
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "g123axx",
      "price" : 80005,
      "picture" : "IBM.jpg",
      "description" : "IBM5x系列"
    }, {
      "productId" : 24,
      "serialNumber" : "z01",
      "name" : "鞋子",
      "brand" : "回力",
      "model" : "g123",
      "price" : 189,
      "picture" : "hulu3.jpg",
      "description" : "葫芦兄弟"
    }, {
      "productId" : 3,
      "serialNumber" : "a08",
      "name" : "数码相机",
      "brand" : "爱国者",
      "model" : "08",
      "price" : 8000,
      "picture" : "d_r11_10_r1_c16.jpg",
      "description" : "爱国者a08"
    }, {
      "productId" : 26,
      "serialNumber" : "mini",
      "name" : "平板",
      "brand" : "苹果",
      "model" : "mini2018",
      "price" : 2700,
      "picture" : "ipad.jpg",
      "description" : "时尚、便捷、外观优美"
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 11:17:47,000 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 11:17:47,004 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 11:17:47,004 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:17:47,004 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:17:47,004 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 11:17:47,008 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 11:17:47,008 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 11:17:47,008 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 11:17:47,008 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 11:17:47,012 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 11:17:47,012 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 11:17:47,012 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:17:47,012 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:25:27,227 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-27 11:25:27,231 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-27 11:25:27,235 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 11:25:27,239 DEBUG (NewsController.java:71)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 5,
    "title" : "三星女性翻盖E428行货仅1180",
    "content" : "以其独特的气质，深受女性消费者的喜爱。目前携节后余威，该机特价仅售：1180元，有兴趣的女性朋友可以多考虑一下。",
    "writeDate" : 1565049600000
  }
}
2019-07-27 11:25:28,913 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 11:25:28,913 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:25:28,917 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 11:25:28,917 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 11:25:28,917 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 11:25:28,917 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 11:25:28,917 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 11:25:28,917 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 11:25:28,917 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 11:25:28,921 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 11:25:28,921 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 11:25:28,921 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 11:25:28,921 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 14:57:03,884 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 17744 (H:\company\target\classes started by 用户 in H:\company)
2019-07-27 14:57:03,887 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-27 14:57:03,888 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-27 14:57:06,438 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.07 seconds (JVM running for 4.651)
2019-07-27 14:57:40,663 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 14:57:40,663 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 14:57:40,663 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 14:57:40,666 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 14:57:40,690 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 14:57:40,690 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 14:57:40,690 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 14:57:40,690 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 14:57:40,717 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 14:57:40,717 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 14:57:40,717 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 14:57:40,720 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 14:57:40,751 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 14:57:44,466 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 14:57:44,468 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 14:57:44,470 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 14:57:44,471 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 14:57:44,473 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 14:57:44,473 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 14:57:44,473 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 14:57:44,473 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 14:57:44,478 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 14:57:44,479 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 14:57:44,481 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 14:57:44,481 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 14:57:44,484 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 14:58:53,595 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-27 14:58:53,595 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 14:58:53,597 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 14:58:53,598 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-27 14:58:53,598 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 14:58:53,599 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 14:58:53,600 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-27 14:58:53,600 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 14:58:53,601 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 14:59:22,573 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news LIMIT ?,? 
2019-07-27 14:59:22,574 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 14:59:22,576 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 14:59:22,577 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM news 
2019-07-27 14:59:22,577 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 14:59:22,578 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 14:59:22,581 DEBUG (NewsController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "newsId" : 1,
      "title" : "庆十一商品促销",
      "content" : "\t为了庆祝十一国庆节，现公司所有电子商品进行促销活动，活动期间所有商品打五折。",
      "writeDate" : 1562457600000
    }, {
      "newsId" : 2,
      "title" : "爱国者数码相机今日七折优惠",
      "content" : "为了答谢广大用户，爱国者数码相机今日七折优惠。",
      "writeDate" : 1557014400000
    }, {
      "newsId" : 3,
      "title" : "黄金周最热销手机汇总导购",
      "content" : "在这个被看作是我国最大的消费高峰之一的七天长假中，那些准备买新手机的朋友们是不是已经买到了称心如意的手机呢？今天手机中国编辑就把从北京几大手机卖场了解到的这七天长假中几款最热卖的机型做个总结，相信这些机型也是大多数朋友认可和喜爱的，看看你的选择是不是和很多朋友一样，也为还没选好目标的朋友做个推荐",
      "writeDate" : 1565222400000
    }, {
      "newsId" : 4,
      "title" : "时尚浪漫情侣手机配对推荐",
      "content" : "对于商家来说，十一以后的几天依然是畅销的好时候，各种优惠活动仍然在各大卖场如火如荼的进行。既然是优惠购物好时机，小编今天就为情侣们推荐了三对最登对情侣手机，甜蜜的你们一定能选购到适合他她的最登对手机。",
      "writeDate" : 1557100800000
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 15:00:02,868 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-27 15:00:02,869 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 15:00:02,873 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 15:00:02,873 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-27 15:00:02,873 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 15:00:02,874 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 15:00:02,875 DEBUG (ProductController.java:41)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "productId" : 1,
      "serialNumber" : "z01",
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "g123axx",
      "price" : 80005,
      "picture" : "IBM.jpg",
      "description" : "IBM5x系列"
    }, {
      "productId" : 24,
      "serialNumber" : "z01",
      "name" : "鞋子",
      "brand" : "回力",
      "model" : "g123",
      "price" : 189,
      "picture" : "hulu3.jpg",
      "description" : "葫芦兄弟"
    }, {
      "productId" : 3,
      "serialNumber" : "a08",
      "name" : "数码相机",
      "brand" : "爱国者",
      "model" : "08",
      "price" : 8000,
      "picture" : "d_r11_10_r1_c16.jpg",
      "description" : "爱国者a08"
    }, {
      "productId" : 26,
      "serialNumber" : "mini",
      "name" : "平板",
      "brand" : "苹果",
      "model" : "mini2018",
      "price" : 2700,
      "picture" : "ipad.jpg",
      "description" : "时尚、便捷、外观优美"
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 15:00:05,187 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 15:00:05,188 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 15:00:05,320 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 15:00:05,322 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 15:00:05,322 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 15:00:05,323 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 15:00:05,325 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 15:00:07,590 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news LIMIT ?,? 
2019-07-27 15:00:07,592 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 15:00:07,594 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 15:00:07,595 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM news 
2019-07-27 15:00:07,595 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 15:00:07,596 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 15:00:07,597 DEBUG (NewsController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "newsId" : 1,
      "title" : "庆十一商品促销",
      "content" : "\t为了庆祝十一国庆节，现公司所有电子商品进行促销活动，活动期间所有商品打五折。",
      "writeDate" : 1562457600000
    }, {
      "newsId" : 2,
      "title" : "爱国者数码相机今日七折优惠",
      "content" : "为了答谢广大用户，爱国者数码相机今日七折优惠。",
      "writeDate" : 1557014400000
    }, {
      "newsId" : 3,
      "title" : "黄金周最热销手机汇总导购",
      "content" : "在这个被看作是我国最大的消费高峰之一的七天长假中，那些准备买新手机的朋友们是不是已经买到了称心如意的手机呢？今天手机中国编辑就把从北京几大手机卖场了解到的这七天长假中几款最热卖的机型做个总结，相信这些机型也是大多数朋友认可和喜爱的，看看你的选择是不是和很多朋友一样，也为还没选好目标的朋友做个推荐",
      "writeDate" : 1565222400000
    }, {
      "newsId" : 4,
      "title" : "时尚浪漫情侣手机配对推荐",
      "content" : "对于商家来说，十一以后的几天依然是畅销的好时候，各种优惠活动仍然在各大卖场如火如荼的进行。既然是优惠购物好时机，小编今天就为情侣们推荐了三对最登对情侣手机，甜蜜的你们一定能选购到适合他她的最登对手机。",
      "writeDate" : 1557100800000
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 15:00:11,194 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 15:00:11,196 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 15:00:11,201 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 15:00:11,202 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 15:00:11,203 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 15:00:11,204 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 15:00:11,204 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 15:00:36,513 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-27 15:00:36,514 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 15:00:36,518 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 15:00:36,518 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-27 15:00:36,518 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 15:00:36,519 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 15:00:36,520 DEBUG (ProductController.java:41)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "productId" : 1,
      "serialNumber" : "z01",
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "g123axx",
      "price" : 80005,
      "picture" : "IBM.jpg",
      "description" : "IBM5x系列"
    }, {
      "productId" : 24,
      "serialNumber" : "z01",
      "name" : "鞋子",
      "brand" : "回力",
      "model" : "g123",
      "price" : 189,
      "picture" : "hulu3.jpg",
      "description" : "葫芦兄弟"
    }, {
      "productId" : 3,
      "serialNumber" : "a08",
      "name" : "数码相机",
      "brand" : "爱国者",
      "model" : "08",
      "price" : 8000,
      "picture" : "d_r11_10_r1_c16.jpg",
      "description" : "爱国者a08"
    }, {
      "productId" : 26,
      "serialNumber" : "mini",
      "name" : "平板",
      "brand" : "苹果",
      "model" : "mini2018",
      "price" : 2700,
      "picture" : "ipad.jpg",
      "description" : "时尚、便捷、外观优美"
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 15:00:54,609 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 15:00:54,611 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 15:00:54,613 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 15:00:54,613 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 15:00:54,614 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 15:00:54,615 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 15:00:54,616 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "bbbb",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 15:03:58,073 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-27 15:03:58,074 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 15:03:58,075 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 15:04:26,478 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 15:04:26,479 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 15:04:26,483 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 15:04:26,484 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 15:04:26,485 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 15:04:26,487 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 15:04:26,489 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 15:04:50,397 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-27 15:04:50,398 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 15:04:50,400 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 15:04:50,401 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-27 15:04:50,402 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 15:04:50,403 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 15:04:50,404 DEBUG (ProductController.java:41)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "productId" : 1,
      "serialNumber" : "z01",
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "g123axx",
      "price" : 80005,
      "picture" : "IBM.jpg",
      "description" : "IBM5x系列"
    }, {
      "productId" : 24,
      "serialNumber" : "z01",
      "name" : "鞋子",
      "brand" : "回力",
      "model" : "g123",
      "price" : 189,
      "picture" : "hulu3.jpg",
      "description" : "葫芦兄弟"
    }, {
      "productId" : 3,
      "serialNumber" : "a08",
      "name" : "数码相机",
      "brand" : "爱国者",
      "model" : "08",
      "price" : 8000,
      "picture" : "d_r11_10_r1_c16.jpg",
      "description" : "爱国者a08"
    }, {
      "productId" : 26,
      "serialNumber" : "mini",
      "name" : "平板",
      "brand" : "苹果",
      "model" : "mini2018",
      "price" : 2700,
      "picture" : "ipad.jpg",
      "description" : "时尚、便捷、外观优美"
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 15:05:08,283 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news LIMIT ?,? 
2019-07-27 15:05:08,284 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 15:05:08,286 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 15:05:08,287 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM news 
2019-07-27 15:05:08,289 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 15:05:08,291 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 15:05:08,292 DEBUG (NewsController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "newsId" : 1,
      "title" : "庆十一商品促销",
      "content" : "\t为了庆祝十一国庆节，现公司所有电子商品进行促销活动，活动期间所有商品打五折。",
      "writeDate" : 1562457600000
    }, {
      "newsId" : 2,
      "title" : "爱国者数码相机今日七折优惠",
      "content" : "为了答谢广大用户，爱国者数码相机今日七折优惠。",
      "writeDate" : 1557014400000
    }, {
      "newsId" : 3,
      "title" : "黄金周最热销手机汇总导购",
      "content" : "在这个被看作是我国最大的消费高峰之一的七天长假中，那些准备买新手机的朋友们是不是已经买到了称心如意的手机呢？今天手机中国编辑就把从北京几大手机卖场了解到的这七天长假中几款最热卖的机型做个总结，相信这些机型也是大多数朋友认可和喜爱的，看看你的选择是不是和很多朋友一样，也为还没选好目标的朋友做个推荐",
      "writeDate" : 1565222400000
    }, {
      "newsId" : 4,
      "title" : "时尚浪漫情侣手机配对推荐",
      "content" : "对于商家来说，十一以后的几天依然是畅销的好时候，各种优惠活动仍然在各大卖场如火如荼的进行。既然是优惠购物好时机，小编今天就为情侣们推荐了三对最登对情侣手机，甜蜜的你们一定能选购到适合他她的最登对手机。",
      "writeDate" : 1557100800000
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 16:35:31,660 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-8L1UIJU with PID 10956 (H:\company\target\classes started by 用户 in H:\company)
2019-07-27 16:35:31,664 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-27 16:35:31,665 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-27 16:35:34,023 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 2.773 seconds (JVM running for 8.144)
2019-07-27 16:36:23,038 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:36:23,038 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 16:36:23,038 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:36:23,041 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 16:36:23,066 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 16:36:23,066 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 16:36:23,065 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:36:23,065 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:36:23,098 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:36:23,100 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 16:36:23,103 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 16:36:23,103 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:36:23,154 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 16:36:25,911 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:36:25,912 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:36:25,914 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:36:25,915 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:36:25,915 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:36:25,917 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:36:25,921 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 16:36:33,999 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO message VALUE(NULL,?,?,? ,?,?) 
2019-07-27 16:36:34,000 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 11(String), 11(String), 1(String), null, 0(Integer)
2019-07-27 16:36:34,166 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 16:36:35,262 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:36:35,263 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:36:35,267 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:36:35,268 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:36:35,269 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:36:35,270 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:36:35,271 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:36:42,450 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:36:42,451 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 16:36:42,452 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-27 16:36:42,453 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:36:42,453 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:36:42,454 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:36:42,455 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 18,
      "title" : "11",
      "content" : "11",
      "writer" : "1",
      "writeDate" : null,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:37:20,650 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 16:37:20,653 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:37:20,655 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 16:37:20,655 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:37:20,656 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:37:20,656 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 16:37:20,656 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:37:20,657 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 16:37:20,657 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 16:37:20,658 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:37:20,658 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 16:37:20,659 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:37:20,660 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 16:37:23,574 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 16:37:23,575 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:37:23,577 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:37:23,577 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 16:37:23,578 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 16:37:23,578 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:37:23,580 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 16:37:23,581 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:37:23,582 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 16:37:23,582 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 16:37:23,582 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:37:23,583 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 16:37:23,585 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:37:26,009 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:37:26,011 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:37:26,017 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:37:26,019 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:37:26,019 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:37:26,021 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:37:26,024 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:37:27,946 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:37:27,948 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 16:37:27,951 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-27 16:37:27,951 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:37:27,952 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:37:27,953 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:37:27,954 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 18,
      "title" : "11",
      "content" : "11",
      "writer" : "1",
      "writeDate" : null,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:37:30,048 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 16:37:30,048 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 16:37:30,049 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:37:30,049 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:37:30,052 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 16:37:30,052 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:37:30,052 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 16:37:30,053 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 16:37:30,053 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:37:30,053 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 16:37:30,054 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 16:37:30,055 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:37:30,056 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:37:31,601 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:37:31,602 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:37:31,604 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:37:31,605 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:37:31,606 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:37:31,608 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:37:31,610 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:37:39,905 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO message VALUE(NULL,?,?,? ,?,?) 
2019-07-27 16:37:39,907 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: asdas(String), qq(String), qq(String), 2019-07-27 00:00:00.0(Timestamp), 0(Integer)
2019-07-27 16:37:40,078 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 16:37:41,378 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:37:41,380 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:37:41,383 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:37:41,384 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:37:41,385 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:37:41,386 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:37:41,387 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 19,
      "title" : "asdas",
      "content" : "qq",
      "writer" : "qq",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 8
  }
}
2019-07-27 16:37:42,434 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:37:42,435 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 16:37:42,440 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:37:42,441 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:37:42,441 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:37:42,442 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:37:42,442 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    }, {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 18,
      "title" : "11",
      "content" : "11",
      "writer" : "1",
      "writeDate" : null,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 8
  }
}
2019-07-27 16:37:44,921 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:37:44,922 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:37:44,924 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:37:44,924 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:37:44,925 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:37:44,926 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:37:44,927 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 19,
      "title" : "asdas",
      "content" : "qq",
      "writer" : "qq",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 8
  }
}
2019-07-27 16:38:04,546 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:38:04,547 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:38:04,549 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:38:04,550 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:38:04,551 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:38:04,552 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:38:04,554 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 19,
      "title" : "asdas",
      "content" : "qq",
      "writer" : "qq",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 8
  }
}
2019-07-27 16:38:07,129 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:38:07,129 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:38:07,130 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:38:07,130 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:38:07,131 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:38:07,132 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:38:07,133 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 16:38:07,134 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 46,
    "messageId" : 17,
    "content" : "好",
    "writer" : "lsq",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 16:39:02,063 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:39:02,063 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:39:02,064 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:39:02,064 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:39:02,066 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:39:02,066 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:39:02,067 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 46,
    "messageId" : 17,
    "content" : "好",
    "writer" : "lsq",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 16:39:02,067 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 16:39:05,069 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:39:05,070 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:39:05,071 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:39:05,071 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:39:05,072 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:39:05,072 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 16:39:05,074 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:39:05,075 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 46,
    "messageId" : 17,
    "content" : "好",
    "writer" : "lsq",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 16:39:08,816 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-27 16:39:08,817 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer), 111(String), 1(String), 2019-07-27 00:00:00.0(Timestamp)
2019-07-27 16:39:08,835 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 16:39:08,840 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:39:08,840 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:39:08,841 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:39:08,841 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:39:08,842 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-27 16:39:08,842 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:39:08,842 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 46,
    "messageId" : 17,
    "content" : "好",
    "writer" : "lsq",
    "writerDate" : 1564099200000
  }, {
    "revertId" : 48,
    "messageId" : 17,
    "content" : "111",
    "writer" : "1",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 16:39:08,842 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 16:39:21,568 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:39:21,569 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:39:21,572 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:39:21,573 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:39:21,574 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:39:21,576 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:39:21,576 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 19,
      "title" : "asdas",
      "content" : "qq",
      "writer" : "qq",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 8
  }
}
2019-07-27 16:39:43,966 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:39:43,966 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:39:43,969 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:39:43,973 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:39:43,974 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:39:43,975 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:39:43,977 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 19,
      "title" : "asdas",
      "content" : "qq",
      "writer" : "qq",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 8
  }
}
2019-07-27 16:39:45,383 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:39:45,384 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:39:45,388 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:39:45,390 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:39:45,391 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:39:45,394 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:39:45,395 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 19,
      "title" : "asdas",
      "content" : "qq",
      "writer" : "qq",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 8
  }
}
2019-07-27 16:39:47,277 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:39:47,278 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:39:47,278 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:39:47,278 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:39:47,279 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:39:47,280 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-27 16:39:47,280 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 16:39:47,282 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 46,
    "messageId" : 17,
    "content" : "好",
    "writer" : "lsq",
    "writerDate" : 1564099200000
  }, {
    "revertId" : 48,
    "messageId" : 17,
    "content" : "111",
    "writer" : "1",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 16:39:52,733 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-27 16:39:52,733 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer), 11(String), 11(String), 2019-07-27 00:00:00.0(Timestamp)
2019-07-27 16:39:52,756 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 16:39:52,761 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:39:52,761 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:39:52,761 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:39:52,761 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:39:52,762 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:39:52,762 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-27 16:39:52,763 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 16:39:52,763 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 46,
    "messageId" : 17,
    "content" : "好",
    "writer" : "lsq",
    "writerDate" : 1564099200000
  }, {
    "revertId" : 48,
    "messageId" : 17,
    "content" : "111",
    "writer" : "1",
    "writerDate" : 1564099200000
  }, {
    "revertId" : 49,
    "messageId" : 17,
    "content" : "11",
    "writer" : "11",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 16:39:55,978 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:39:55,980 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:39:55,982 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:39:55,983 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:39:55,984 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:39:55,986 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:39:55,987 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 19,
      "title" : "asdas",
      "content" : "qq",
      "writer" : "qq",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 8
  }
}
2019-07-27 16:40:13,391 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:40:13,392 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:40:13,394 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:40:13,395 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:40:13,396 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:40:13,400 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:40:13,401 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 19,
      "title" : "asdas",
      "content" : "qq",
      "writer" : "qq",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 8
  }
}
2019-07-27 16:40:14,954 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:40:14,955 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:40:14,955 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:40:14,955 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:40:14,956 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:40:14,957 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-27 16:40:14,957 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 16:40:14,957 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 46,
    "messageId" : 17,
    "content" : "好",
    "writer" : "lsq",
    "writerDate" : 1564099200000
  }, {
    "revertId" : 48,
    "messageId" : 17,
    "content" : "111",
    "writer" : "1",
    "writerDate" : 1564099200000
  }, {
    "revertId" : 49,
    "messageId" : 17,
    "content" : "11",
    "writer" : "11",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 16:40:18,388 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-27 16:40:18,389 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer), 11(String), 11(String), 2019-07-28 00:00:00.0(Timestamp)
2019-07-27 16:40:18,495 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 16:40:18,501 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:40:18,501 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:40:18,501 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:40:18,501 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:40:18,502 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:40:18,502 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 16:40:18,503 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:40:18,504 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 46,
    "messageId" : 17,
    "content" : "好",
    "writer" : "lsq",
    "writerDate" : 1564099200000
  }, {
    "revertId" : 48,
    "messageId" : 17,
    "content" : "111",
    "writer" : "1",
    "writerDate" : 1564099200000
  }, {
    "revertId" : 49,
    "messageId" : 17,
    "content" : "11",
    "writer" : "11",
    "writerDate" : 1564099200000
  }, {
    "revertId" : 50,
    "messageId" : 17,
    "content" : "11",
    "writer" : "11",
    "writerDate" : 1564185600000
  } ]
}
2019-07-27 16:40:21,261 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:40:21,262 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:40:21,266 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:40:21,267 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:40:21,268 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:40:21,269 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:40:21,271 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 19,
      "title" : "asdas",
      "content" : "qq",
      "writer" : "qq",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 8
  }
}
2019-07-27 16:40:47,134 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:40:47,135 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:40:47,136 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:40:47,137 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:40:47,138 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:40:47,139 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:40:47,144 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 19,
      "title" : "asdas",
      "content" : "qq",
      "writer" : "qq",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 8
  }
}
2019-07-27 16:40:53,748 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 16:40:53,748 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 16:40:53,749 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:40:53,749 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:40:53,750 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 16:40:53,751 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 16:40:53,751 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:40:53,751 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 16:40:53,751 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:40:53,751 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 16:40:53,752 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 16:40:53,753 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:40:53,753 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:41:00,125 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-27 16:41:00,125 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 16:41:00,127 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:41:00,127 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-27 16:41:00,127 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 16:41:00,128 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:41:00,128 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-27 16:41:00,129 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 16:41:00,129 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:41:03,607 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:41:03,607 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:41:03,609 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:41:03,609 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:41:03,609 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:41:03,610 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:41:03,611 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 19,
      "title" : "asdas",
      "content" : "qq",
      "writer" : "qq",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 8
  }
}
2019-07-27 16:42:11,763 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO message VALUE(NULL,?,?,? ,?,?) 
2019-07-27 16:42:11,764 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 11(String), 11(String), 1(String), 2019-07-27 00:00:00.0(Timestamp), 0(Integer)
2019-07-27 16:42:11,875 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 16:42:12,969 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:42:12,969 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:42:12,970 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:42:12,970 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:42:12,970 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:42:12,971 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:42:12,971 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 19,
      "title" : "asdas",
      "content" : "qq",
      "writer" : "qq",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 20,
      "title" : "11",
      "content" : "11",
      "writer" : "1",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 16:42:16,564 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-27 16:42:16,564 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 20(Integer)
2019-07-27 16:42:16,585 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 16:42:16,591 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:42:16,591 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:42:16,593 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:42:16,594 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:42:16,595 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:42:16,595 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:42:16,596 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 19,
      "title" : "asdas",
      "content" : "qq",
      "writer" : "qq",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 8
  }
}
2019-07-27 16:42:21,066 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-27 16:42:21,067 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-27 16:42:21,090 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 16:42:21,096 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:42:21,096 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:42:21,097 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:42:21,098 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:42:21,098 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:42:21,099 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:42:21,099 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:42:22,330 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:42:22,331 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 16:42:22,331 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-27 16:42:22,332 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:42:22,332 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:42:22,333 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:42:22,333 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    }, {
      "messageId" : 18,
      "title" : "11",
      "content" : "11",
      "writer" : "1",
      "writeDate" : null,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:42:25,041 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-27 16:42:25,042 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 18(Integer)
2019-07-27 16:42:25,157 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 16:42:25,162 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:42:25,163 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:42:25,163 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:42:25,164 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:42:25,164 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:42:25,165 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:42:25,165 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 16:42:25,969 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:42:25,970 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 16:42:25,971 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-27 16:42:25,972 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:42:25,972 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:42:25,972 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:42:25,973 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 16:42:27,377 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:42:27,377 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:42:27,379 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:42:27,379 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:42:27,379 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:42:27,380 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:42:27,380 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 16:42:33,234 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO message VALUE(NULL,?,?,? ,?,?) 
2019-07-27 16:42:33,235 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 11(String), 11(String), 1(String), 2019-07-27 00:00:00.0(Timestamp), 0(Integer)
2019-07-27 16:42:33,347 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 16:42:35,069 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:42:35,070 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:42:35,072 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:42:35,073 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:42:35,074 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:42:35,076 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:42:35,077 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 21,
      "title" : "11",
      "content" : "11",
      "writer" : "1",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:42:37,826 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-27 16:42:37,827 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 21(Integer)
2019-07-27 16:42:37,841 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 16:42:37,846 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:42:37,846 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:42:37,847 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:42:37,848 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:42:37,848 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:42:37,848 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:42:37,849 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 16:42:41,637 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:42:41,638 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:42:41,640 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:42:41,642 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:42:41,642 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:42:41,643 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:42:41,643 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 16:42:42,682 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:42:42,682 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:42:42,683 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:42:42,683 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:42:42,686 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:42:42,686 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:42:42,687 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 16:42:42,687 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 46,
    "messageId" : 17,
    "content" : "好",
    "writer" : "lsq",
    "writerDate" : 1564099200000
  }, {
    "revertId" : 48,
    "messageId" : 17,
    "content" : "111",
    "writer" : "1",
    "writerDate" : 1564099200000
  }, {
    "revertId" : 49,
    "messageId" : 17,
    "content" : "11",
    "writer" : "11",
    "writerDate" : 1564099200000
  }, {
    "revertId" : 50,
    "messageId" : 17,
    "content" : "11",
    "writer" : "11",
    "writerDate" : 1564185600000
  } ]
}
2019-07-27 16:42:46,866 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-27 16:42:46,867 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 50(Integer)
2019-07-27 16:42:46,967 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 16:42:46,972 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:42:46,972 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:42:46,973 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:42:46,973 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:42:46,974 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:42:46,974 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-27 16:42:46,974 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 16:42:46,974 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 46,
    "messageId" : 17,
    "content" : "好",
    "writer" : "lsq",
    "writerDate" : 1564099200000
  }, {
    "revertId" : 48,
    "messageId" : 17,
    "content" : "111",
    "writer" : "1",
    "writerDate" : 1564099200000
  }, {
    "revertId" : 49,
    "messageId" : 17,
    "content" : "11",
    "writer" : "11",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 16:42:48,185 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-27 16:42:48,186 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 49(Integer)
2019-07-27 16:42:48,211 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 16:42:48,217 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:42:48,218 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:42:48,218 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:42:48,218 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:42:48,219 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-27 16:42:48,219 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:42:48,219 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 46,
    "messageId" : 17,
    "content" : "好",
    "writer" : "lsq",
    "writerDate" : 1564099200000
  }, {
    "revertId" : 48,
    "messageId" : 17,
    "content" : "111",
    "writer" : "1",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 16:42:48,219 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 16:42:49,394 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-27 16:42:49,394 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 48(Integer)
2019-07-27 16:42:49,418 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 16:42:49,423 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:42:49,423 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:42:49,424 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:42:49,424 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:42:49,424 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:42:49,424 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:42:49,425 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 16:42:49,425 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 46,
    "messageId" : 17,
    "content" : "好",
    "writer" : "lsq",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 16:43:50,581 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:43:50,582 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:43:50,583 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:43:50,584 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:43:50,585 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:43:50,585 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:43:50,586 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 16:43:53,681 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:43:53,681 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 16:43:53,682 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-27 16:43:53,683 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:43:53,683 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:43:53,684 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:43:53,685 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 16:43:55,293 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:43:55,293 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:43:55,294 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-27 16:43:55,294 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-27 16:43:55,294 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:43:55,294 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:43:55,295 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }
}
2019-07-27 16:43:55,295 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 44,
    "messageId" : 2,
    "content" : "很好，服务确实不错。很喜欢",
    "writer" : "xiaohei",
    "writerDate" : 1563926400000
  } ]
}
2019-07-27 16:44:10,882 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:44:10,883 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:44:10,885 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:44:10,887 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:44:10,887 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:44:10,888 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:44:10,888 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 16:44:12,888 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:44:12,888 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:44:12,888 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:44:12,888 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:44:12,889 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:44:12,889 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:44:12,890 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 16:44:12,890 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 46,
    "messageId" : 17,
    "content" : "好",
    "writer" : "lsq",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 16:44:19,794 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:44:19,795 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:44:19,797 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:44:19,798 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:44:19,799 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:44:19,801 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:44:19,802 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 16:44:21,969 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:44:21,969 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 16:44:21,970 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-27 16:44:21,971 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:44:21,971 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:44:21,971 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:44:21,972 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 16:44:23,640 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:44:23,640 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:44:23,641 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-27 16:44:23,641 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-27 16:44:23,642 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:44:23,642 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:44:23,643 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }
}
2019-07-27 16:44:23,643 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 44,
    "messageId" : 2,
    "content" : "很好，服务确实不错。很喜欢",
    "writer" : "xiaohei",
    "writerDate" : 1563926400000
  } ]
}
2019-07-27 16:44:28,442 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-27 16:44:28,442 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer), aa(String), aa(String), 2019-07-27 00:00:00.0(Timestamp)
2019-07-27 16:44:28,560 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 16:44:28,566 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:44:28,566 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:44:28,566 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-27 16:44:28,566 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-27 16:44:28,567 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:44:28,567 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-27 16:44:28,567 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }
}
2019-07-27 16:44:28,567 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 44,
    "messageId" : 2,
    "content" : "很好，服务确实不错。很喜欢",
    "writer" : "xiaohei",
    "writerDate" : 1563926400000
  }, {
    "revertId" : 51,
    "messageId" : 2,
    "content" : "aa",
    "writer" : "aa",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 16:44:50,441 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:44:50,442 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:44:50,444 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:44:50,445 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:44:50,447 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:44:50,448 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:44:50,448 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 16:44:51,870 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:44:51,870 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:44:51,870 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:44:51,870 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:44:51,871 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:44:51,871 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:44:51,872 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 16:44:51,872 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 46,
    "messageId" : 17,
    "content" : "好",
    "writer" : "lsq",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 16:44:54,450 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-27 16:44:54,450 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer), 11(String), 11(String), 2019-07-28 00:00:00.0(Timestamp)
2019-07-27 16:44:54,521 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 16:44:54,526 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:44:54,526 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:44:54,527 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:44:54,527 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:44:54,528 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:44:54,528 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-27 16:44:54,528 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 16:44:54,528 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 46,
    "messageId" : 17,
    "content" : "好",
    "writer" : "lsq",
    "writerDate" : 1564099200000
  }, {
    "revertId" : 52,
    "messageId" : 17,
    "content" : "11",
    "writer" : "11",
    "writerDate" : 1564185600000
  } ]
}
2019-07-27 16:44:56,921 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-27 16:44:56,922 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 52(Integer)
2019-07-27 16:44:56,938 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 16:44:56,943 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:44:56,943 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:44:56,943 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:44:56,943 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:44:56,944 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:44:56,944 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:44:56,944 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 46,
    "messageId" : 17,
    "content" : "好",
    "writer" : "lsq",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 16:44:56,944 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 16:45:00,644 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:45:00,645 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:45:00,646 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:45:00,647 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:45:00,648 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:45:00,649 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:00,649 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "bbbb",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:45:02,001 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:45:02,001 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 16:45:02,002 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-27 16:45:02,002 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:45:02,002 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:45:02,003 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:02,003 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "userId" : 6,
      "userName" : "hhh",
      "password" : "cnm",
      "status" : 1
    }, {
      "userId" : 7,
      "userName" : "luojun",
      "password" : "123",
      "status" : 1
    }, {
      "userId" : 8,
      "userName" : "liulei",
      "password" : "123",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:45:03,880 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:45:03,881 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:45:03,882 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:45:03,882 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:45:03,882 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:45:03,883 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:03,884 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "bbbb",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:45:05,143 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-27 16:45:05,143 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-27 16:45:05,144 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:05,145 DEBUG (UsersController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }
}
2019-07-27 16:45:06,830 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:45:06,830 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:45:06,833 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:45:06,834 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:45:06,834 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:45:06,834 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:06,835 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "bbbb",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:45:08,201 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:45:08,201 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 16:45:08,202 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-27 16:45:08,203 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:45:08,203 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:45:08,204 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:08,204 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "userId" : 6,
      "userName" : "hhh",
      "password" : "cnm",
      "status" : 1
    }, {
      "userId" : 7,
      "userName" : "luojun",
      "password" : "123",
      "status" : 1
    }, {
      "userId" : 8,
      "userName" : "liulei",
      "password" : "123",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:45:10,955 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:45:10,955 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:45:10,956 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:45:10,957 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:45:10,957 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:45:10,958 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:10,958 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "bbbb",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:45:15,282 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:45:15,283 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 16:45:15,283 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-27 16:45:15,284 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:45:15,284 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:45:15,284 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:15,284 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "userId" : 6,
      "userName" : "hhh",
      "password" : "cnm",
      "status" : 1
    }, {
      "userId" : 7,
      "userName" : "luojun",
      "password" : "123",
      "status" : 1
    }, {
      "userId" : 8,
      "userName" : "liulei",
      "password" : "123",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:45:16,337 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:45:16,338 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:45:16,338 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:45:16,339 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:45:16,339 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:45:16,339 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:16,339 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "bbbb",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:45:17,769 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:45:17,769 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 16:45:17,770 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-27 16:45:17,771 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:45:17,772 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:45:17,772 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:17,773 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "userId" : 6,
      "userName" : "hhh",
      "password" : "cnm",
      "status" : 1
    }, {
      "userId" : 7,
      "userName" : "luojun",
      "password" : "123",
      "status" : 1
    }, {
      "userId" : 8,
      "userName" : "liulei",
      "password" : "123",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:45:20,423 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-27 16:45:20,424 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-27 16:45:20,426 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:20,426 DEBUG (UsersController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 7,
    "userName" : "luojun",
    "password" : "123",
    "status" : 1
  }
}
2019-07-27 16:45:24,957 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:45:24,958 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:45:24,960 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:45:24,961 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:45:24,962 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:45:24,963 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:24,963 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "bbbb",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:45:30,219 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-27 16:45:30,221 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: aaa(String)
2019-07-27 16:45:30,222 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:30,222 DEBUG (UsersController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 5,
    "userName" : "aaa",
    "password" : "bbbb",
    "status" : 1
  }
}
2019-07-27 16:45:37,654 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: UPDATE users SET userName=?,password=? ,status=? WHERE userId = ? 
2019-07-27 16:45:37,654 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: aaa(String), 123(String), 0(Integer), 5(Integer)
2019-07-27 16:45:37,669 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 16:45:38,856 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:45:38,857 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:45:38,858 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:45:38,858 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:45:38,859 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:45:38,861 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:38,861 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "123",
      "status" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:45:42,161 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-27 16:45:42,161 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: aaa(String)
2019-07-27 16:45:42,162 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:42,162 DEBUG (UsersController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 5,
    "userName" : "aaa",
    "password" : "123",
    "status" : 0
  }
}
2019-07-27 16:45:45,295 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:45:45,295 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:45:45,297 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:45:45,299 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:45:45,300 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:45:45,300 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:45,301 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "123",
      "status" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:45:46,968 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:45:46,968 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:45:46,969 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:45:46,970 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:45:46,970 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:45:46,971 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:46,972 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 16:45:50,225 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:45:50,226 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 16:45:50,226 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-27 16:45:50,227 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:45:50,227 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:45:50,227 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:50,228 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 16:45:50,936 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:45:50,936 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:45:50,937 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:45:50,937 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:45:50,937 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:45:50,938 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:50,938 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 16:45:52,006 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:45:52,006 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:45:52,006 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:45:52,006 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:45:52,007 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:52,007 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:52,008 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 46,
    "messageId" : 17,
    "content" : "好",
    "writer" : "lsq",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 16:45:52,008 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 16:45:54,986 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:45:54,987 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:45:54,988 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:45:54,989 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:45:54,990 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:45:54,990 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:54,991 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "123",
      "status" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:45:57,578 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:45:57,579 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 16:45:57,580 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-27 16:45:57,580 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:45:57,580 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:45:57,581 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:45:57,581 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "userId" : 6,
      "userName" : "hhh",
      "password" : "cnm",
      "status" : 1
    }, {
      "userId" : 7,
      "userName" : "luojun",
      "password" : "123",
      "status" : 1
    }, {
      "userId" : 8,
      "userName" : "liulei",
      "password" : "123",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:46:13,378 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:46:13,378 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:46:13,379 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:46:13,379 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:46:13,379 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:46:13,379 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:46:13,380 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "123",
      "status" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:46:18,209 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:46:18,210 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 16:46:18,210 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-27 16:46:18,211 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:46:18,211 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:46:18,212 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:46:18,212 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "userId" : 6,
      "userName" : "hhh",
      "password" : "cnm",
      "status" : 1
    }, {
      "userId" : 7,
      "userName" : "luojun",
      "password" : "123",
      "status" : 1
    }, {
      "userId" : 8,
      "userName" : "liulei",
      "password" : "123",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:46:19,056 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:46:19,057 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:46:19,058 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:46:19,059 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:46:19,059 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:46:19,060 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:46:19,060 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "123",
      "status" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:46:20,849 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:46:20,849 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 16:46:20,850 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-27 16:46:20,850 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:46:20,850 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:46:20,851 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:46:20,851 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "userId" : 6,
      "userName" : "hhh",
      "password" : "cnm",
      "status" : 1
    }, {
      "userId" : 7,
      "userName" : "luojun",
      "password" : "123",
      "status" : 1
    }, {
      "userId" : 8,
      "userName" : "liulei",
      "password" : "123",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:46:50,114 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:46:50,114 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:46:50,115 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:46:50,115 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:46:50,116 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:46:50,116 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:46:50,117 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "123",
      "status" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:46:50,961 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:46:50,961 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 16:46:50,962 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-27 16:46:50,962 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:46:50,962 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:46:50,963 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:46:50,963 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "userId" : 6,
      "userName" : "hhh",
      "password" : "cnm",
      "status" : 1
    }, {
      "userId" : 7,
      "userName" : "luojun",
      "password" : "123",
      "status" : 1
    }, {
      "userId" : 8,
      "userName" : "liulei",
      "password" : "123",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:46:51,712 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:46:51,713 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:46:51,714 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:46:51,715 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:46:51,715 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:46:51,715 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:46:51,716 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "123",
      "status" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:46:52,442 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:46:52,442 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 16:46:52,443 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-27 16:46:52,443 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:46:52,443 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:46:52,443 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:46:52,444 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "userId" : 6,
      "userName" : "hhh",
      "password" : "cnm",
      "status" : 1
    }, {
      "userId" : 7,
      "userName" : "luojun",
      "password" : "123",
      "status" : 1
    }, {
      "userId" : 8,
      "userName" : "liulei",
      "password" : "123",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:46:53,385 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:46:53,385 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:46:53,386 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:46:53,386 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:46:53,386 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:46:53,387 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:46:53,387 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "userId" : 1,
      "userName" : "admin",
      "password" : "admin",
      "status" : 1
    }, {
      "userId" : 2,
      "userName" : "zzg",
      "password" : "zzg",
      "status" : 0
    }, {
      "userId" : 3,
      "userName" : "bobo",
      "password" : "bobo",
      "status" : 0
    }, {
      "userId" : 5,
      "userName" : "aaa",
      "password" : "123",
      "status" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:46:54,321 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users LIMIT ?,? 
2019-07-27 16:46:54,321 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 16:46:54,322 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-27 16:46:54,323 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM users 
2019-07-27 16:46:54,323 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:46:54,323 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:46:54,324 DEBUG (UsersController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "userId" : 6,
      "userName" : "hhh",
      "password" : "cnm",
      "status" : 1
    }, {
      "userId" : 7,
      "userName" : "luojun",
      "password" : "123",
      "status" : 1
    }, {
      "userId" : 8,
      "userName" : "liulei",
      "password" : "123",
      "status" : 1
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-27 16:47:03,536 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-27 16:47:03,536 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-27 16:47:03,537 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:47:03,538 DEBUG (UsersController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 7,
    "userName" : "luojun",
    "password" : "123",
    "status" : 1
  }
}
2019-07-27 16:47:16,065 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-27 16:47:16,066 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: aaa(String)
2019-07-27 16:47:16,066 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:47:16,066 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-27 16:47:16,067 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: aaa(String)
2019-07-27 16:47:16,067 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:47:16,068 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-27 16:47:16,068 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: aaa(String)
2019-07-27 16:47:16,068 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:47:23,472 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-27 16:47:23,473 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luo(String)
2019-07-27 16:47:23,473 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-27 16:47:27,849 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-27 16:47:27,849 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-27 16:47:27,849 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:47:27,850 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-27 16:47:27,850 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-27 16:47:27,850 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:47:27,851 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-27 16:47:27,851 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-27 16:47:27,851 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:47:33,542 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:47:33,543 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:47:33,544 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:47:33,545 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:47:33,546 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:47:33,547 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:47:33,548 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 16:47:35,935 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-27 16:47:35,936 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:47:35,937 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:47:35,938 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-27 16:47:35,939 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:47:35,940 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:47:35,940 DEBUG (ProductController.java:41)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "productId" : 1,
      "serialNumber" : "z01",
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "g123axx",
      "price" : 80005,
      "picture" : "IBM.jpg",
      "description" : "IBM5x系列"
    }, {
      "productId" : 24,
      "serialNumber" : "z01",
      "name" : "鞋子",
      "brand" : "回力",
      "model" : "g123",
      "price" : 189,
      "picture" : "hulu3.jpg",
      "description" : "葫芦兄弟"
    }, {
      "productId" : 3,
      "serialNumber" : "a08",
      "name" : "数码相机",
      "brand" : "爱国者",
      "model" : "08",
      "price" : 8000,
      "picture" : "d_r11_10_r1_c16.jpg",
      "description" : "爱国者a08"
    }, {
      "productId" : 26,
      "serialNumber" : "mini",
      "name" : "平板",
      "brand" : "苹果",
      "model" : "mini2018",
      "price" : 2700,
      "picture" : "ipad.jpg",
      "description" : "时尚、便捷、外观优美"
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 16:47:40,714 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news LIMIT ?,? 
2019-07-27 16:47:40,715 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:47:40,717 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:47:40,718 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM news 
2019-07-27 16:47:40,718 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:47:40,718 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:47:40,719 DEBUG (NewsController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "newsId" : 1,
      "title" : "庆十一商品促销",
      "content" : "\t为了庆祝十一国庆节，现公司所有电子商品进行促销活动，活动期间所有商品打五折。",
      "writeDate" : 1562457600000
    }, {
      "newsId" : 2,
      "title" : "爱国者数码相机今日七折优惠",
      "content" : "为了答谢广大用户，爱国者数码相机今日七折优惠。",
      "writeDate" : 1557014400000
    }, {
      "newsId" : 3,
      "title" : "黄金周最热销手机汇总导购",
      "content" : "在这个被看作是我国最大的消费高峰之一的七天长假中，那些准备买新手机的朋友们是不是已经买到了称心如意的手机呢？今天手机中国编辑就把从北京几大手机卖场了解到的这七天长假中几款最热卖的机型做个总结，相信这些机型也是大多数朋友认可和喜爱的，看看你的选择是不是和很多朋友一样，也为还没选好目标的朋友做个推荐",
      "writeDate" : 1565222400000
    }, {
      "newsId" : 4,
      "title" : "时尚浪漫情侣手机配对推荐",
      "content" : "对于商家来说，十一以后的几天依然是畅销的好时候，各种优惠活动仍然在各大卖场如火如荼的进行。既然是优惠购物好时机，小编今天就为情侣们推荐了三对最登对情侣手机，甜蜜的你们一定能选购到适合他她的最登对手机。",
      "writeDate" : 1557100800000
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 16:47:42,945 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news LIMIT ?,? 
2019-07-27 16:47:42,946 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 16:47:42,946 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:47:42,947 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM news 
2019-07-27 16:47:42,947 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:47:42,947 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:47:42,948 DEBUG (NewsController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "newsId" : 5,
      "title" : "三星女性翻盖E428行货仅1180",
      "content" : "以其独特的气质，深受女性消费者的喜爱。目前携节后余威，该机特价仅售：1180元，有兴趣的女性朋友可以多考虑一下。",
      "writeDate" : 1565049600000
    }, {
      "newsId" : 6,
      "title" : "国庆期间降价最猛八款数码相机",
      "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
      "writeDate" : 1536105600000
    }, {
      "newsId" : 7,
      "title" : "国庆各品牌最好卖的相机",
      "content" : "七天的国庆长假弹指间便过去了，相信大家都和小编一样有一种意犹未尽的感觉。不知道大家有在国庆之后购买数码相机的打算没有，如果有的话，这篇文章就是为您而准备的。",
      "writeDate" : 1539302400000
    }, {
      "newsId" : 9,
      "title" : "MP4关注度排行TOP10",
      "content" : "黄金周过后，很多行业都要盘点一下自己的销售业绩，虽然MP4现在还不属于大众消费品，但是也不能例外。十一期间购买MP4作为出游装备或者过节礼品的情况让这个市场也升温了不少，这也导致MP4关注排行的TOP 10名次有了不小变化。",
      "writeDate" : 1307491200000
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 16:47:44,009 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news LIMIT ?,? 
2019-07-27 16:47:44,009 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 8(Integer), 4(Integer)
2019-07-27 16:47:44,010 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:47:44,011 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM news 
2019-07-27 16:47:44,011 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:47:44,012 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:47:44,012 DEBUG (NewsController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 3,
    "pageData" : [ {
      "newsId" : 10,
      "title" : "理光R5不到二千",
      "content" : "沈阳行情 凭借R系列的出众表现，理光在家用市场一直有着较高的知名度，随着R7的上市，老型R系列机型也面临退市的边缘，近日笔者了解到，较早上市的R5的售价已经突破二千大关，该机拥有七倍变焦镜头、CCD防抖以及28mm的广角等功能，卖点非常突出，近期打算购买数码相机的家庭不妨重点考虑一下这款产品。 ",
      "writeDate" : 1186358400000
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 16:47:46,012 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:47:46,013 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:47:46,015 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:47:46,015 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:47:46,016 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:47:46,017 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:47:46,017 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 16:47:46,642 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:47:46,643 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-27 16:47:46,643 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-27 16:47:46,644 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:47:46,644 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:47:46,644 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:47:46,644 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563321600000,
      "count" : 1
    }, {
      "messageId" : 2,
      "title" : "(NULL品红服务宗旨是什么)",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562889600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 16:47:47,337 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:47:47,337 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:47:47,338 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:47:47,339 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:47:47,339 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:47:47,340 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:47:47,341 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 16:47:51,367 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 16:47:51,368 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 16:47:51,368 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:47:51,369 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:47:51,370 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 16:47:51,371 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 16:47:51,372 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:47:51,372 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:47:51,373 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 16:47:51,372 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 16:47:51,373 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 16:47:51,376 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:47:51,376 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:47:52,525 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message order by writeDate desc LIMIT ?,? 
2019-07-27 16:47:52,526 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:47:52,528 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:47:52,529 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-27 16:47:52,529 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:47:52,531 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:47:52,533 DEBUG (MessageController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "时尚浪漫手记",
      "content" : "这东西好嘛？",
      "writer" : "liuxuqiang",
      "writeDate" : 1564156800000,
      "count" : 0
    }, {
      "messageId" : 14,
      "title" : "时尚浪漫手记",
      "content" : "这款手机性能怎么样？",
      "writer" : "kaka",
      "writeDate" : 1564070400000,
      "count" : 0
    }, {
      "messageId" : 16,
      "title" : "IBM笔记本电脑",
      "content" : "IBM笔记本电脑的电脑5000元大概什么配置啊？",
      "writer" : "lsq",
      "writeDate" : 1563984000000,
      "count" : 0
    }, {
      "messageId" : 15,
      "title" : "爱国者数码相机",
      "content" : "最近有什么优惠活动啊？用过的亲能不能说下体验怎么样啊？",
      "writer" : "liulei",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 6
  }
}
2019-07-27 16:47:57,209 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:47:57,209 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:47:57,210 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:47:57,210 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:47:57,210 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:47:57,211 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 16:47:57,211 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:47:57,212 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 46,
    "messageId" : 17,
    "content" : "好",
    "writer" : "lsq",
    "writerDate" : 1564099200000
  } ]
}
2019-07-27 16:48:08,195 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-27 16:48:08,196 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer), 我觉得不行(String), luojun(String), 2019-07-28 00:00:00.0(Timestamp)
2019-07-27 16:48:08,218 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-27 16:48:08,222 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-27 16:48:08,222 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-27 16:48:08,223 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:48:08,223 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-27 16:48:08,223 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:48:08,223 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-27 16:48:08,224 DEBUG (MessageController.java:55)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "时尚浪漫手记",
    "content" : "这东西好嘛？",
    "writer" : "liuxuqiang",
    "writeDate" : 1564156800000,
    "count" : 0
  }
}
2019-07-27 16:48:08,224 DEBUG (RevertController.java:25)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 46,
    "messageId" : 17,
    "content" : "好",
    "writer" : "lsq",
    "writerDate" : 1564099200000
  }, {
    "revertId" : 53,
    "messageId" : 17,
    "content" : "我觉得不行",
    "writer" : "luojun",
    "writerDate" : 1564185600000
  } ]
}
2019-07-27 16:48:12,568 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 16:48:12,568 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:48:12,567 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 16:48:12,570 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:48:12,570 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:48:12,571 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 16:48:12,571 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 16:48:12,572 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 16:48:12,572 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:48:12,572 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:48:12,573 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 16:48:12,573 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 16:48:12,575 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:48:16,305 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-27 16:48:16,306 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-27 16:48:16,307 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:48:20,118 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 16:48:20,119 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:48:20,124 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 16:48:20,125 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:48:20,125 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 16:48:20,125 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 16:48:20,126 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 16:48:20,126 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:48:20,127 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:48:20,127 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 16:48:20,129 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:48:20,130 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 16:48:20,133 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:48:32,462 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-27 16:48:32,462 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: aaa(String)
2019-07-27 16:48:32,463 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:49:20,129 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-27 16:49:20,130 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: luojun(String)
2019-07-27 16:49:20,131 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:49:21,061 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 16:49:21,062 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:49:21,063 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 16:49:21,064 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 16:49:21,066 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 16:49:21,067 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:49:21,067 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:49:21,067 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 16:49:21,068 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 16:49:21,069 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:49:21,069 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:49:21,070 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 16:49:21,072 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:49:28,266 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-27 16:49:28,267 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: aaa(String)
2019-07-27 16:49:28,268 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:49:29,602 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 16:49:29,605 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 16:49:29,604 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:49:29,609 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:49:29,611 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:49:29,611 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 16:49:29,611 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 16:49:29,612 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 16:49:29,612 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 16:49:29,613 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:49:29,615 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:49:29,616 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 16:49:29,618 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:49:32,582 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-27 16:49:32,582 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: aaa(String)
2019-07-27 16:49:32,583 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:49:33,580 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 16:49:33,580 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:49:33,581 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 16:49:33,582 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:49:33,585 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:49:33,585 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 16:49:33,585 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 16:49:33,585 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 16:49:33,586 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 16:49:33,589 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:49:33,598 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:49:33,598 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 16:49:33,600 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:49:39,513 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 16:49:39,514 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:49:39,514 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 16:49:39,514 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:49:39,517 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 16:49:39,516 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 16:49:39,519 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 16:49:39,526 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:49:39,527 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 16:49:39,529 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:49:39,529 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:49:39,529 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 16:49:39,533 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:49:44,116 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news LIMIT ?,? 
2019-07-27 16:49:44,118 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:49:44,121 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:49:44,122 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM news 
2019-07-27 16:49:44,122 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:49:44,123 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:49:44,124 DEBUG (NewsController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "newsId" : 1,
      "title" : "庆十一商品促销",
      "content" : "\t为了庆祝十一国庆节，现公司所有电子商品进行促销活动，活动期间所有商品打五折。",
      "writeDate" : 1562457600000
    }, {
      "newsId" : 2,
      "title" : "爱国者数码相机今日七折优惠",
      "content" : "为了答谢广大用户，爱国者数码相机今日七折优惠。",
      "writeDate" : 1557014400000
    }, {
      "newsId" : 3,
      "title" : "黄金周最热销手机汇总导购",
      "content" : "在这个被看作是我国最大的消费高峰之一的七天长假中，那些准备买新手机的朋友们是不是已经买到了称心如意的手机呢？今天手机中国编辑就把从北京几大手机卖场了解到的这七天长假中几款最热卖的机型做个总结，相信这些机型也是大多数朋友认可和喜爱的，看看你的选择是不是和很多朋友一样，也为还没选好目标的朋友做个推荐",
      "writeDate" : 1565222400000
    }, {
      "newsId" : 4,
      "title" : "时尚浪漫情侣手机配对推荐",
      "content" : "对于商家来说，十一以后的几天依然是畅销的好时候，各种优惠活动仍然在各大卖场如火如荼的进行。既然是优惠购物好时机，小编今天就为情侣们推荐了三对最登对情侣手机，甜蜜的你们一定能选购到适合他她的最登对手机。",
      "writeDate" : 1557100800000
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
2019-07-27 16:49:46,531 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product 
2019-07-27 16:49:46,532 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-27 16:49:46,532 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:49:46,532 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:49:46,533 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:49:46,533 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-27 16:49:46,534 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer)
2019-07-27 16:49:46,534 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product order by productId desc limit ?,4 
2019-07-27 16:49:46,534 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-27 16:49:46,535 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer)
2019-07-27 16:49:46,536 DEBUG (ProductController.java:26)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "productId" : 1,
    "serialNumber" : "z01",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "g123axx",
    "price" : 80005,
    "picture" : "IBM.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 24,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 189,
    "picture" : "hulu3.jpg",
    "description" : "葫芦兄弟"
  }, {
    "productId" : 3,
    "serialNumber" : "a08",
    "name" : "数码相机",
    "brand" : "爱国者",
    "model" : "08",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c16.jpg",
    "description" : "爱国者a08"
  }, {
    "productId" : 26,
    "serialNumber" : "mini",
    "name" : "平板",
    "brand" : "苹果",
    "model" : "mini2018",
    "price" : 2700,
    "picture" : "ipad.jpg",
    "description" : "时尚、便捷、外观优美"
  }, {
    "productId" : 5,
    "serialNumber" : "e80",
    "name" : "笔记本",
    "brand" : "IBM",
    "model" : "80",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c2.jpg",
    "description" : "IBM5x系列"
  }, {
    "productId" : 6,
    "serialNumber" : "sx100",
    "name" : "摄像机",
    "brand" : "松下",
    "model" : "100",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c81.jpg",
    "description" : "松下sx100"
  }, {
    "productId" : 7,
    "serialNumber" : "k200",
    "name" : "数码相机",
    "brand" : "柯达",
    "model" : "200",
    "price" : 8000,
    "picture" : "d_r11_10_r1_c116.jpg",
    "description" : "柯达200"
  }, {
    "productId" : 8,
    "serialNumber" : "sa1980",
    "name" : "索爱手机",
    "brand" : "索爱",
    "model" : "1980",
    "price" : 5000,
    "picture" : "d_r11_10_r1_c221.jpg",
    "description" : "索爱最新产品"
  }, {
    "productId" : 25,
    "serialNumber" : "z01",
    "name" : "鞋子",
    "brand" : "回力",
    "model" : "g123",
    "price" : 200,
    "picture" : "hulu5.jpg",
    "description" : "葫芦兄弟"
  } ]
}
2019-07-27 16:49:46,536 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:49:46,537 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:49:47,657 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-27 16:49:47,658 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-27 16:49:47,659 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-27 16:49:47,660 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-27 16:49:47,661 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-27 16:49:47,663 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-27 16:49:47,664 DEBUG (ProductController.java:41)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "pageData" : [ {
      "productId" : 1,
      "serialNumber" : "z01",
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "g123axx",
      "price" : 80005,
      "picture" : "IBM.jpg",
      "description" : "IBM5x系列"
    }, {
      "productId" : 24,
      "serialNumber" : "z01",
      "name" : "鞋子",
      "brand" : "回力",
      "model" : "g123",
      "price" : 189,
      "picture" : "hulu3.jpg",
      "description" : "葫芦兄弟"
    }, {
      "productId" : 3,
      "serialNumber" : "a08",
      "name" : "数码相机",
      "brand" : "爱国者",
      "model" : "08",
      "price" : 8000,
      "picture" : "d_r11_10_r1_c16.jpg",
      "description" : "爱国者a08"
    }, {
      "productId" : 26,
      "serialNumber" : "mini",
      "name" : "平板",
      "brand" : "苹果",
      "model" : "mini2018",
      "price" : 2700,
      "picture" : "ipad.jpg",
      "description" : "时尚、便捷、外观优美"
    } ],
    "pageCount" : 3,
    "dataCount" : 9
  }
}
