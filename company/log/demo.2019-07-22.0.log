2019-07-22 08:26:34,810 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 1008 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 08:26:34,881 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 08:26:34,882 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 08:26:38,744 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.908 seconds (JVM running for 7.444)
2019-07-22 08:27:38,935 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 08:27:38,964 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:27:38,991 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 08:27:39,046 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  }, {
    "userId" : 6,
    "userName" : "罗军2号",
    "password" : "122",
    "status" : 1
  } ]
}
2019-07-22 08:27:43,361 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM users WHERE userId = ? 
2019-07-22 08:27:43,362 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 08:27:43,369 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 08:27:45,795 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 08:27:45,796 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:27:45,800 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 08:27:45,801 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 08:30:39,697 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 08:30:39,697 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:30:39,700 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 08:30:39,701 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 08:30:41,674 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 08:30:41,675 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:30:41,681 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 08:30:41,682 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 08:30:46,551 ERROR (BaseController.java:268)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-22 08:30:49,196 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by newsId 
2019-07-22 08:30:49,196 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:30:49,203 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 08:30:49,207 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  } ]
}
2019-07-22 08:30:51,343 ERROR (BaseController.java:268)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-22 08:30:53,820 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by newsId 
2019-07-22 08:30:53,821 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:30:53,823 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 08:30:53,823 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  } ]
}
2019-07-22 08:30:58,511 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 08:30:58,512 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:30:58,537 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 08:30:58,539 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 6,
    "title" : "测试",
    "content" : "测试",
    "writer" : "作者",
    "writeDate" : 1563379200000,
    "count" : 100
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 9,
    "title" : "11",
    "content" : "djksabjkd",
    "writer" : "111",
    "writeDate" : 1563206400000,
    "count" : 1
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 08:31:00,168 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 08:31:00,168 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 08:31:00,192 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 08:31:00,193 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writeDate" : null
  } ]
}
2019-07-22 08:31:02,528 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 08:31:02,529 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:31:02,533 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 08:31:02,534 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 6,
    "title" : "测试",
    "content" : "测试",
    "writer" : "作者",
    "writeDate" : 1563379200000,
    "count" : 100
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 9,
    "title" : "11",
    "content" : "djksabjkd",
    "writer" : "111",
    "writeDate" : 1563206400000,
    "count" : 1
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 08:31:04,620 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 08:31:04,621 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 08:31:04,623 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 08:31:04,624 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 08:31:07,955 ERROR (BaseController.java:268)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-22 08:31:34,018 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 08:31:34,018 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:31:34,021 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 08:31:34,022 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 6,
    "title" : "测试",
    "content" : "测试",
    "writer" : "作者",
    "writeDate" : 1563379200000,
    "count" : 100
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 9,
    "title" : "11",
    "content" : "djksabjkd",
    "writer" : "111",
    "writeDate" : 1563206400000,
    "count" : 1
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 08:31:35,731 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 08:31:35,731 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 08:31:35,733 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 08:31:35,734 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writeDate" : null
  } ]
}
2019-07-22 08:37:25,251 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 08:37:25,252 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:37:25,257 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 08:37:25,258 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 08:37:27,444 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 08:37:27,445 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:37:27,447 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 08:37:27,448 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 08:37:28,752 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 08:37:28,753 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:37:28,755 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 08:37:28,757 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 08:37:29,568 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 08:37:29,568 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:37:29,571 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 08:37:29,573 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 08:37:30,242 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 08:37:30,242 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:37:30,244 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 08:37:30,245 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 08:37:31,593 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 08:37:31,594 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:37:31,596 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 08:37:31,596 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 08:40:17,155 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 08:40:17,156 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 08:40:17,160 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 08:40:17,160 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-22 08:40:17,161 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 08:40:17,162 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 08:40:17,163 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 08:40:17,164 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 08:40:17,166 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 08:40:20,871 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 08:40:20,872 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 08:40:20,873 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 08:40:20,874 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-22 08:40:20,874 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 08:40:20,875 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 08:40:20,876 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 08:40:20,876 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 08:40:20,877 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 08:43:12,995 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 9012 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 08:43:13,003 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 08:43:13,004 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 08:43:15,807 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.316 seconds (JVM running for 4.611)
2019-07-22 08:43:25,769 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by newsId 
2019-07-22 08:43:25,818 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:43:25,843 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 08:43:25,870 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  } ]
}
2019-07-22 08:43:36,700 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by newsId 
2019-07-22 08:43:36,704 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:43:36,709 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 08:43:36,710 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  } ]
}
2019-07-22 08:44:54,919 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by newsId 
2019-07-22 08:44:54,923 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:44:54,929 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 08:44:54,930 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  } ]
}
2019-07-22 08:54:51,662 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by newsId 
2019-07-22 08:54:51,663 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:54:51,671 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 08:54:51,673 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  } ]
}
2019-07-22 08:55:13,996 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by newsId 
2019-07-22 08:55:13,997 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:55:14,002 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 08:55:14,003 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  } ]
}
2019-07-22 08:56:08,969 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO news VALUES(NULL,?,? ,?) 
2019-07-22 08:56:08,979 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 今天下大雨(String), 今天下大雨 大雨(String), 2019-07-22 00:00:00.0(Timestamp)
2019-07-22 08:56:08,984 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 08:56:10,764 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by newsId 
2019-07-22 08:56:10,765 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:56:10,769 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 08:56:10,770 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  } ]
}
2019-07-22 10:38:06,191 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 15340 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 10:38:06,195 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 10:38:06,196 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 10:39:08,410 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 11236 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 10:39:08,413 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 10:39:08,415 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 10:39:10,868 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 2.991 seconds (JVM running for 4.343)
2019-07-22 10:39:20,359 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-22 10:39:20,362 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-22 10:39:20,392 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:39:20,392 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:39:20,441 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 10:39:20,441 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 10:39:31,767 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-22 10:39:31,769 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:39:31,772 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-22 10:39:31,776 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:39:31,780 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 10:39:31,783 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 10:54:10,899 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-22 10:54:10,902 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:54:10,909 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-22 10:54:10,910 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:54:10,916 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 10:54:10,915 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 10:54:50,331 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-22 10:54:50,332 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:54:50,346 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-22 10:54:50,347 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:54:50,355 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 10:54:50,361 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 10:54:51,534 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-22 10:54:51,535 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:54:51,536 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-22 10:54:51,537 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:54:51,538 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 10:54:51,545 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 10:55:30,788 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-22 10:55:30,789 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-22 10:55:30,791 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:55:30,789 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:55:30,796 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 10:55:30,799 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 10:55:49,460 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-22 10:55:49,463 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:55:49,465 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-22 10:55:49,466 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:55:49,466 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 10:55:49,475 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 10:55:50,395 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-22 10:55:50,396 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:55:50,402 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 10:55:50,396 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-22 10:55:50,418 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:55:50,422 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 10:56:11,637 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-22 10:56:11,638 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:56:11,642 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-22 10:56:11,645 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 10:56:11,687 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:56:11,688 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 10:58:20,019 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 17464 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 10:58:20,023 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 10:58:20,023 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 10:58:24,280 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.995 seconds (JVM running for 7.445)
2019-07-22 10:58:25,105 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-22 10:58:25,106 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-22 10:58:25,156 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:58:25,156 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:58:25,220 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 10:58:25,227 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 10:58:26,344 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-22 10:58:26,346 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:58:26,348 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-22 10:58:26,349 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:58:26,359 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 10:58:26,364 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 10:59:54,009 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-22 10:59:54,010 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:59:54,012 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-22 10:59:54,014 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:59:54,018 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 10:59:54,022 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 11:00:27,829 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-22 11:00:27,837 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 11:00:27,838 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-22 11:00:27,839 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 11:00:27,842 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 11:00:27,847 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 11:00:40,929 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 11:00:40,930 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 11:00:40,933 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 11:00:40,934 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-22 11:00:40,935 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 11:00:40,937 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 11:00:40,938 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 11:00:40,938 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 11:00:40,940 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 11:26:05,278 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-22 11:26:05,278 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-22 11:26:05,279 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 11:26:05,280 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 11:26:05,288 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 11:26:05,289 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 11:33:05,508 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 11:33:05,508 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 11:33:05,511 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 11:33:05,512 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-22 11:33:05,513 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 11:33:05,514 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 11:33:05,515 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 11:33:05,516 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 11:33:05,518 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 11:35:50,292 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-22 11:35:50,294 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 11:35:50,301 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 11:35:50,300 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-22 11:35:50,303 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 11:35:50,306 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 11:35:51,180 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-22 11:35:51,180 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-22 11:35:51,180 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 11:35:51,180 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 11:35:51,183 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 11:35:51,184 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 11:36:16,346 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 11:36:16,347 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 11:36:16,351 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 11:36:16,351 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-22 11:36:16,352 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 11:36:16,353 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 11:36:16,354 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 11:36:16,354 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 11:36:16,356 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 11:36:42,739 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 11:36:42,740 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 11:36:42,746 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 11:36:42,750 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 6,
    "title" : "测试",
    "content" : "测试",
    "writer" : "作者",
    "writeDate" : 1563379200000,
    "count" : 100
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 9,
    "title" : "11",
    "content" : "djksabjkd",
    "writer" : "111",
    "writeDate" : 1563206400000,
    "count" : 1
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 11:47:27,406 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 11:47:27,407 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 11:47:27,410 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 11:47:27,414 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 11:47:37,317 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by newsId 
2019-07-22 11:47:37,318 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 11:47:37,324 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 11:47:37,325 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  } ]
}
2019-07-22 11:47:38,598 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-22 11:47:38,599 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 11:47:38,603 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 11:47:38,604 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }
}
2019-07-22 11:47:44,291 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by newsId 
2019-07-22 11:47:44,291 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 11:47:44,294 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 11:47:44,295 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  } ]
}
2019-07-22 12:00:01,529 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 12:00:01,531 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 12:00:01,535 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 12:00:01,537 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 6,
    "title" : "测试",
    "content" : "测试",
    "writer" : "作者",
    "writeDate" : 1563379200000,
    "count" : 100
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 9,
    "title" : "11",
    "content" : "djksabjkd",
    "writer" : "111",
    "writeDate" : 1563206400000,
    "count" : 1
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 12:05:23,842 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 12:05:23,843 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 12:05:23,846 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 12:05:23,847 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 6,
    "title" : "测试",
    "content" : "测试",
    "writer" : "作者",
    "writeDate" : 1563379200000,
    "count" : 100
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 9,
    "title" : "11",
    "content" : "djksabjkd",
    "writer" : "111",
    "writeDate" : 1563206400000,
    "count" : 1
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 12:05:28,192 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 12:05:28,193 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 12:05:28,196 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 12:05:28,197 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 6,
    "title" : "测试",
    "content" : "测试",
    "writer" : "作者",
    "writeDate" : 1563379200000,
    "count" : 100
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 9,
    "title" : "11",
    "content" : "djksabjkd",
    "writer" : "111",
    "writeDate" : 1563206400000,
    "count" : 1
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 12:05:35,923 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 14644 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 12:05:35,936 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 12:05:35,937 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 12:05:39,165 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.122 seconds (JVM running for 6.552)
2019-07-22 12:05:48,271 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 12:05:48,297 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 12:05:48,325 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 12:05:48,406 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 6,
    "title" : "测试",
    "content" : "测试",
    "writer" : "作者",
    "writeDate" : 1563379200000,
    "count" : 100
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 9,
    "title" : "11",
    "content" : "djksabjkd",
    "writer" : "111",
    "writeDate" : 1563206400000,
    "count" : 1
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 12:47:50,809 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 15472 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 12:47:50,820 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 12:47:50,821 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 12:47:54,290 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.333 seconds (JVM running for 7.404)
2019-07-22 13:58:13,285 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 7840 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 13:58:13,289 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 13:58:13,290 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 13:58:16,286 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.687 seconds (JVM running for 5.069)
2019-07-22 13:58:25,312 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-22 13:58:25,312 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-22 13:58:25,337 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 13:58:25,337 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 13:58:25,383 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 13:58:25,383 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 13:58:34,785 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 13:58:34,786 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 13:58:34,790 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 13:58:45,372 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 13:58:45,373 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 我(String)
2019-07-22 13:58:45,377 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 13:58:45,378 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-22 13:58:45,378 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 我(String)
2019-07-22 13:58:45,380 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 13:58:45,381 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 13:58:45,381 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 我(String)
2019-07-22 13:58:45,384 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 13:58:48,812 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 13:58:48,813 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 我(String)
2019-07-22 13:58:48,815 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 13:58:48,816 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-22 13:58:48,816 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 我(String)
2019-07-22 13:58:48,819 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 13:58:48,820 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 13:58:48,820 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 我(String)
2019-07-22 13:58:48,823 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 13:59:13,756 ERROR (BaseController.java:295)- 系统异常:org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'message' on field 'count': rejected value [qqq]; codes [typeMismatch.message.count,typeMismatch.count,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [message.count,count]; arguments []; default message [count]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'int' for property 'count'; nested exception is java.lang.NumberFormatException: For input string: "qqq"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'message' on field 'count': rejected value [qqq]; codes [typeMismatch.message.count,typeMismatch.count,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [message.count,count]; arguments []; default message [count]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'int' for property 'count'; nested exception is java.lang.NumberFormatException: For input string: "qqq"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:164)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-22 13:59:15,034 ERROR (BaseController.java:295)- 系统异常:org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'message' on field 'count': rejected value [qqq]; codes [typeMismatch.message.count,typeMismatch.count,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [message.count,count]; arguments []; default message [count]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'int' for property 'count'; nested exception is java.lang.NumberFormatException: For input string: "qqq"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'message' on field 'count': rejected value [qqq]; codes [typeMismatch.message.count,typeMismatch.count,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [message.count,count]; arguments []; default message [count]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'int' for property 'count'; nested exception is java.lang.NumberFormatException: For input string: "qqq"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:164)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-22 13:59:15,208 ERROR (BaseController.java:295)- 系统异常:org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'message' on field 'count': rejected value [qqq]; codes [typeMismatch.message.count,typeMismatch.count,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [message.count,count]; arguments []; default message [count]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'int' for property 'count'; nested exception is java.lang.NumberFormatException: For input string: "qqq"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'message' on field 'count': rejected value [qqq]; codes [typeMismatch.message.count,typeMismatch.count,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [message.count,count]; arguments []; default message [count]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'int' for property 'count'; nested exception is java.lang.NumberFormatException: For input string: "qqq"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:164)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-22 13:59:15,352 ERROR (BaseController.java:295)- 系统异常:org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'message' on field 'count': rejected value [qqq]; codes [typeMismatch.message.count,typeMismatch.count,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [message.count,count]; arguments []; default message [count]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'int' for property 'count'; nested exception is java.lang.NumberFormatException: For input string: "qqq"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'message' on field 'count': rejected value [qqq]; codes [typeMismatch.message.count,typeMismatch.count,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [message.count,count]; arguments []; default message [count]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'int' for property 'count'; nested exception is java.lang.NumberFormatException: For input string: "qqq"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:164)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-22 13:59:15,504 ERROR (BaseController.java:295)- 系统异常:org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'message' on field 'count': rejected value [qqq]; codes [typeMismatch.message.count,typeMismatch.count,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [message.count,count]; arguments []; default message [count]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'int' for property 'count'; nested exception is java.lang.NumberFormatException: For input string: "qqq"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'message' on field 'count': rejected value [qqq]; codes [typeMismatch.message.count,typeMismatch.count,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [message.count,count]; arguments []; default message [count]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'int' for property 'count'; nested exception is java.lang.NumberFormatException: For input string: "qqq"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:164)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-22 13:59:15,617 ERROR (BaseController.java:295)- 系统异常:org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'message' on field 'count': rejected value [qqq]; codes [typeMismatch.message.count,typeMismatch.count,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [message.count,count]; arguments []; default message [count]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'int' for property 'count'; nested exception is java.lang.NumberFormatException: For input string: "qqq"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'message' on field 'count': rejected value [qqq]; codes [typeMismatch.message.count,typeMismatch.count,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [message.count,count]; arguments []; default message [count]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'int' for property 'count'; nested exception is java.lang.NumberFormatException: For input string: "qqq"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:164)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-22 14:03:03,878 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO message VALUE(NULL,?,?,? ,?,?) 
2019-07-22 14:03:03,929 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 111(String), 111(String), 111(String), 2019-07-17 00:00:00.0(Timestamp), 11(Integer)
2019-07-22 14:03:03,938 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 14:03:04,037 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:03:04,037 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:03:04,043 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-22 14:03:04,044 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 6,
    "title" : "测试",
    "content" : "测试",
    "writer" : "作者",
    "writeDate" : 1563379200000,
    "count" : 100
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 9,
    "title" : "11",
    "content" : "djksabjkd",
    "writer" : "111",
    "writeDate" : 1563206400000,
    "count" : 1
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 16,
    "title" : "111",
    "content" : "111",
    "writer" : "111",
    "writeDate" : 1563292800000,
    "count" : 11
  } ]
}
2019-07-22 14:04:31,576 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:04:31,576 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:04:31,584 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-22 14:04:31,586 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 6,
    "title" : "测试",
    "content" : "测试",
    "writer" : "作者",
    "writeDate" : 1563379200000,
    "count" : 100
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 9,
    "title" : "11",
    "content" : "djksabjkd",
    "writer" : "111",
    "writeDate" : 1563206400000,
    "count" : 1
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 16,
    "title" : "111",
    "content" : "111",
    "writer" : "111",
    "writeDate" : 1563292800000,
    "count" : 11
  } ]
}
2019-07-22 14:05:27,009 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:05:27,011 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:05:27,016 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 9
2019-07-22 14:05:27,017 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 6,
    "title" : "测试",
    "content" : "测试",
    "writer" : "作者",
    "writeDate" : 1563379200000,
    "count" : 100
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 9,
    "title" : "11",
    "content" : "djksabjkd",
    "writer" : "111",
    "writeDate" : 1563206400000,
    "count" : 1
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 16,
    "title" : "111",
    "content" : "111",
    "writer" : "111",
    "writeDate" : 1563292800000,
    "count" : 11
  } ]
}
2019-07-22 14:05:28,134 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:28,135 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:28,146 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 14:05:28,149 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:05:28,149 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:05:28,152 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 14:05:28,154 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 9,
    "title" : "11",
    "content" : "djksabjkd",
    "writer" : "111",
    "writeDate" : 1563206400000,
    "count" : 1
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 16,
    "title" : "111",
    "content" : "111",
    "writer" : "111",
    "writeDate" : 1563292800000,
    "count" : 11
  } ]
}
2019-07-22 14:05:29,484 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:29,485 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:29,487 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:05:30,494 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:30,495 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:30,497 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:05:31,234 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:31,235 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:31,236 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:05:31,658 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:31,659 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:31,661 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:05:31,825 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:31,826 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:31,828 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:05:31,976 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:31,977 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:31,980 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:05:32,120 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:32,121 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:32,124 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:05:32,259 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:32,260 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:32,263 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:05:32,408 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:32,408 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:32,410 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:05:32,552 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:32,553 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:32,557 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:05:32,713 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:32,714 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:32,716 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:05:32,848 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:32,848 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:32,850 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:05:32,992 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:32,993 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:32,995 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:05:33,160 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:33,161 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:33,163 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:05:33,305 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:33,306 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:33,308 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:05:33,432 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:33,432 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:33,435 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:05:33,584 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:33,584 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:33,587 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:05:33,769 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:33,770 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:33,772 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:05:33,920 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:33,921 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:33,923 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:05:35,212 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:35,213 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:35,215 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:05:35,842 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:05:35,843 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 14:05:35,845 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 14:06:10,393 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:06:10,394 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:06:10,397 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 14:06:10,400 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 9,
    "title" : "11",
    "content" : "djksabjkd",
    "writer" : "111",
    "writeDate" : 1563206400000,
    "count" : 1
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 16,
    "title" : "111",
    "content" : "111",
    "writer" : "111",
    "writeDate" : 1563292800000,
    "count" : 11
  } ]
}
2019-07-22 14:07:22,690 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:07:22,691 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:07:22,695 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 14:07:22,696 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 9,
    "title" : "11",
    "content" : "djksabjkd",
    "writer" : "111",
    "writeDate" : 1563206400000,
    "count" : 1
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  }, {
    "messageId" : 16,
    "title" : "111",
    "content" : "111",
    "writer" : "111",
    "writeDate" : 1563292800000,
    "count" : 11
  } ]
}
2019-07-22 14:07:24,100 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:07:24,101 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 16(Integer)
2019-07-22 14:07:24,112 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 14:07:24,116 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:07:24,116 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:07:24,119 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-22 14:07:24,121 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 9,
    "title" : "11",
    "content" : "djksabjkd",
    "writer" : "111",
    "writeDate" : 1563206400000,
    "count" : 1
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 14:07:27,548 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM message WHERE messageId = ? 
2019-07-22 14:07:27,549 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 9(Integer)
2019-07-22 14:07:27,558 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 14:07:27,562 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:07:27,562 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:07:27,565 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 14:07:27,566 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 14:07:33,384 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 14:07:33,385 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 14:07:33,395 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 14:07:33,396 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writeDate" : null
  } ]
}
2019-07-22 14:08:49,603 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:08:49,604 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:08:49,608 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 14:08:49,608 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 14:08:53,304 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:08:53,305 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:08:53,308 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 14:08:53,309 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 14:09:20,125 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:09:20,125 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:09:20,128 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 14:09:20,130 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 14:09:21,118 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 14:09:21,119 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 14:09:21,122 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 14:09:21,123 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writeDate" : null
  } ]
}
2019-07-22 14:12:56,658 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 18300 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 14:12:56,662 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 14:12:56,663 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 14:12:59,785 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.595 seconds (JVM running for 6.218)
2019-07-22 14:13:09,859 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:13:09,886 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:13:09,913 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 14:13:09,999 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 14:13:11,817 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 14:13:11,818 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 14:13:11,820 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 14:28:02,571 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writeDate" : null
  } ]
}
2019-07-22 14:29:57,754 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 19388 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 14:29:57,757 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 14:29:57,758 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 14:30:00,395 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.175 seconds (JVM running for 4.466)
2019-07-22 14:30:13,936 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 14:30:13,959 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 我(String)
2019-07-22 14:30:13,981 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 14:30:13,983 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-22 14:30:13,984 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 我(String)
2019-07-22 14:30:13,986 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 14:30:13,998 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 14:30:13,999 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 我(String)
2019-07-22 14:30:14,002 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 14:30:17,723 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:30:17,723 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:30:17,731 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 14:30:17,761 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 14:30:18,836 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 14:30:18,837 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 14:30:18,840 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 14:30:18,843 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 14:31:23,307 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 3668 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 14:31:23,311 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 14:31:23,312 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 14:31:25,652 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 2.829 seconds (JVM running for 4.121)
2019-07-22 14:31:33,123 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:31:33,145 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:31:33,171 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 14:31:33,253 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 14:31:34,803 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 14:31:34,804 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 14:31:34,805 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 14:31:34,809 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 14:31:37,099 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:31:37,100 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:31:37,105 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 14:31:37,106 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 14:31:38,360 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 14:31:38,361 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 14:31:38,366 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 14:31:38,367 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 14:31:46,899 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:31:46,901 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:31:46,907 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 14:31:46,909 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 14:31:52,835 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:31:52,836 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:31:52,840 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 14:31:52,841 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 14:33:07,451 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 3668 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 14:33:07,451 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 14:33:07,452 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 14:33:08,174 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.758 seconds (JVM running for 106.642)
2019-07-22 14:33:13,224 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO users VALUES(NULL,? ,? ,?) 
2019-07-22 14:33:13,226 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String), 123(String), 1(Integer)
2019-07-22 14:33:13,228 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 14:33:16,949 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 14:33:16,950 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:33:16,956 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 14:33:16,959 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 14:34:18,214 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:34:18,215 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:34:18,219 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 14:34:18,223 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 14:34:19,893 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 14:34:19,894 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 14:34:19,898 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 14:34:19,901 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 14:36:01,494 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 3668 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 14:36:01,494 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 14:36:01,495 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 14:36:02,268 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.807 seconds (JVM running for 280.736)
2019-07-22 14:37:12,630 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 3668 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 14:37:12,631 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 14:37:12,631 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 14:37:13,311 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.722 seconds (JVM running for 351.778)
2019-07-22 14:41:28,063 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 3668 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 14:41:28,063 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 14:41:28,063 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 14:41:28,716 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.686 seconds (JVM running for 607.184)
2019-07-22 14:41:46,552 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 3668 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 14:41:46,553 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 14:41:46,553 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 14:41:47,119 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.599 seconds (JVM running for 625.588)
2019-07-22 14:45:44,392 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 3668 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 14:45:44,393 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 14:45:44,393 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 14:45:45,063 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.705 seconds (JVM running for 863.531)
2019-07-22 14:48:57,468 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 3668 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 14:48:57,469 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 14:48:57,469 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 14:48:58,121 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.69 seconds (JVM running for 1056.59)
2019-07-22 14:50:41,562 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 3668 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 14:50:41,562 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 14:50:41,562 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 14:50:42,215 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.697 seconds (JVM running for 1160.683)
2019-07-22 14:56:54,629 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 9228 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 14:56:54,632 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 14:56:54,633 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 14:56:56,945 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 2.82 seconds (JVM running for 4.126)
2019-07-22 14:57:05,786 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:57:05,816 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:57:05,854 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 14:57:05,923 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 14:57:17,486 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:57:17,487 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:57:17,490 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 14:57:17,491 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 14:58:05,553 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:58:05,554 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:58:05,561 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 14:58:05,562 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 14:58:07,210 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 14:58:07,210 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 14:58:07,211 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 14:58:07,211 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 14:58:07,212 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 14:58:07,212 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 14:58:07,213 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 14:58:07,214 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 14:59:58,648 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 14:59:58,649 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 14:59:58,653 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 14:59:58,654 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 14:59:59,430 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 14:59:59,430 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 14:59:59,431 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 14:59:59,431 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 14:59:59,433 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 14:59:59,433 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 14:59:59,433 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 14:59:59,433 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:01:14,693 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:01:14,694 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:01:14,697 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:01:14,698 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:01:15,751 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:01:15,751 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:01:15,751 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:01:15,751 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:01:15,753 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:01:15,753 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:01:15,754 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:01:15,754 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:01:54,326 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:01:54,327 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:01:54,330 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:01:54,331 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:01:55,373 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:01:55,373 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:01:55,374 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:01:55,374 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:01:55,376 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:01:55,376 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:01:55,377 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:01:55,377 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:02:45,929 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:02:45,929 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:02:45,933 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:02:45,934 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:02:46,833 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:02:46,833 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:02:46,833 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:02:46,834 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:02:46,836 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:02:46,836 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:02:46,838 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:02:46,838 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:04:34,279 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:04:34,280 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:04:34,283 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:04:34,284 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:04:36,377 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:04:36,377 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:04:36,377 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:04:36,377 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:04:36,379 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:04:36,379 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:04:36,380 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:04:36,380 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:05:12,018 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:05:12,019 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:05:12,021 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:05:12,022 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:05:13,141 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:05:13,141 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:05:13,141 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 15:05:13,141 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 15:05:13,144 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:05:13,144 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:05:13,144 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }
}
2019-07-22 15:05:13,144 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 2,
    "messageId" : 2,
    "content" : "哈哈哈",
    "writer" : "罗军",
    "writerDate" : 1563753600000
  } ]
}
2019-07-22 15:06:56,429 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:06:56,430 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:06:56,432 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:06:56,433 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:06:57,659 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:06:57,659 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:06:57,660 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 15:06:57,660 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 15:06:57,661 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:06:57,661 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:06:57,662 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }
}
2019-07-22 15:06:57,662 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 2,
    "messageId" : 2,
    "content" : "哈哈哈",
    "writer" : "罗军",
    "writerDate" : 1563753600000
  } ]
}
2019-07-22 15:08:11,832 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:08:11,832 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:08:11,835 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:08:11,836 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:08:12,852 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:08:12,852 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:08:12,852 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:08:12,852 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:08:12,854 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:08:12,854 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:08:12,855 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:08:12,855 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:14:33,441 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:14:33,442 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:14:33,445 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:14:33,447 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:14:34,690 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:14:34,690 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:14:34,691 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:14:34,691 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:14:34,693 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:14:34,693 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:14:34,694 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:14:34,694 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:15:53,147 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:15:53,147 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:15:53,150 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:15:53,150 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:15:54,257 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:15:54,257 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:15:54,258 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:15:54,258 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:15:54,259 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:15:54,259 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:15:54,260 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:15:54,260 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:25:00,624 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:25:00,625 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:25:00,628 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:25:00,629 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:25:01,628 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:25:01,628 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:25:01,629 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:25:01,629 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:25:01,630 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:25:01,630 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:25:01,631 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:25:01,631 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:29:34,034 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:29:34,035 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:29:34,038 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:29:34,039 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:29:34,973 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:29:34,973 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:29:34,974 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 15:29:34,974 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 15:29:34,976 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:29:34,976 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:29:34,977 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 2,
    "messageId" : 2,
    "content" : "哈哈哈",
    "writer" : "罗军",
    "writerDate" : 1563753600000
  } ]
}
2019-07-22 15:29:34,977 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }
}
2019-07-22 15:29:37,168 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:29:37,169 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:29:37,172 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:29:37,173 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:29:37,917 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:29:37,917 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:29:37,921 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:29:37,922 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:29:38,856 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:29:38,856 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:29:38,856 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:29:38,856 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:29:38,859 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:29:38,859 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:29:38,860 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:29:38,860 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:30:13,018 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:30:13,019 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:30:13,022 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:30:13,024 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:30:14,223 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:30:14,223 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:30:14,223 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:30:14,223 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:30:14,226 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:30:14,226 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:30:14,226 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:30:14,226 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:32:49,136 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:32:49,137 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:32:49,140 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:32:49,141 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:32:50,162 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:32:50,163 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:32:50,165 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:32:50,165 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:32:50,166 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:32:50,166 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:32:50,167 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:32:50,168 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:35:57,316 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:35:57,316 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:35:57,319 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:35:57,320 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:35:58,600 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:35:58,600 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:35:58,601 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:35:58,601 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:35:58,603 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:35:58,603 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:35:58,604 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:35:58,604 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:37:21,650 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:37:21,651 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:37:21,654 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:37:21,656 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:37:27,818 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:37:27,818 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:37:27,819 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:37:27,819 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:37:27,821 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:37:27,821 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:37:27,822 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:37:27,822 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:37:52,089 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:37:52,090 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:37:52,092 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:37:52,093 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:37:55,408 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:37:55,409 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 15:37:55,410 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:37:55,410 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 15:37:55,411 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:37:55,411 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 2,
    "messageId" : 2,
    "content" : "哈哈哈",
    "writer" : "罗军",
    "writerDate" : 1563753600000
  } ]
}
2019-07-22 15:37:55,412 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:37:55,414 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }
}
2019-07-22 15:37:59,621 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:37:59,621 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:37:59,625 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:37:59,625 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:38:10,281 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:38:10,282 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 15:38:10,282 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:38:10,283 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 15:38:10,283 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:38:10,284 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 2,
    "messageId" : 2,
    "content" : "哈哈哈",
    "writer" : "罗军",
    "writerDate" : 1563753600000
  } ]
}
2019-07-22 15:38:10,285 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:38:10,286 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }
}
2019-07-22 15:38:13,038 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:38:13,039 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:38:13,040 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:38:13,040 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:38:15,022 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:38:15,022 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:38:15,022 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 3(Integer)
2019-07-22 15:38:15,022 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 3(Integer)
2019-07-22 15:38:15,024 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 15:38:15,024 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:38:15,025 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }
}
2019-07-22 15:38:15,034 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 15:40:25,639 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:40:25,640 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:40:25,643 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:40:25,644 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:40:49,496 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:40:49,490 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:40:49,497 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:40:49,497 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:40:49,501 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:40:49,502 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:40:49,502 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:40:49,502 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:40:52,038 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:40:52,039 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:40:52,043 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:40:52,044 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:40:53,438 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:40:53,438 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:40:53,439 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 3(Integer)
2019-07-22 15:40:53,439 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 3(Integer)
2019-07-22 15:40:53,441 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 15:40:53,441 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:40:53,442 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 15:40:53,442 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }
}
2019-07-22 15:41:33,255 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:41:33,256 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:41:33,258 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:41:33,259 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:41:35,281 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:41:35,281 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:41:35,281 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:41:35,281 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:41:35,283 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:41:35,283 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:41:35,284 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:41:35,284 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:41:40,502 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:41:40,503 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:41:40,506 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:41:40,507 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:41:42,589 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:41:42,589 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:41:42,590 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 15:41:42,590 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 15:41:42,592 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:41:42,592 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:41:42,592 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }
}
2019-07-22 15:41:42,592 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 2,
    "messageId" : 2,
    "content" : "哈哈哈",
    "writer" : "罗军",
    "writerDate" : 1563753600000
  } ]
}
2019-07-22 15:41:44,336 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:41:44,336 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:41:44,339 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:41:44,340 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:41:45,577 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:41:45,578 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 3(Integer)
2019-07-22 15:41:45,579 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:41:45,579 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 15:41:45,579 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 3(Integer)
2019-07-22 15:41:45,580 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 15:41:45,582 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:41:45,582 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }
}
2019-07-22 15:42:39,153 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-22 15:42:39,153 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-22 15:42:39,153 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:42:39,153 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:42:39,160 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 15:42:39,160 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 15:44:02,442 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:44:02,442 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:44:02,444 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:44:02,445 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:44:03,448 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:44:03,448 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:44:03,448 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:44:03,448 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:44:03,450 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:44:03,450 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:44:03,451 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:44:03,451 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:45:39,647 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:45:39,647 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:45:39,659 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:45:39,660 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:45:40,671 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:45:40,671 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:45:40,671 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:45:40,671 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:45:40,674 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:45:40,674 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:45:40,674 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:45:40,674 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:46:29,960 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:46:29,961 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:46:29,964 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:46:29,965 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:46:32,655 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:46:32,655 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:46:32,657 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:46:32,658 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:46:33,929 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:46:33,929 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:46:33,930 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:46:33,930 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:46:33,932 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:46:33,932 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:46:33,932 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:46:33,932 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:48:09,676 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by newsId 
2019-07-22 15:48:09,677 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:48:09,679 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 15:48:09,680 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  } ]
}
2019-07-22 15:48:11,060 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-22 15:48:11,061 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 15:48:11,063 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:48:11,064 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }
}
2019-07-22 15:48:14,416 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:48:14,417 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:48:14,420 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:48:14,421 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:48:15,872 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:48:15,872 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:48:15,872 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:48:15,872 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:48:15,874 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:48:15,874 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:48:15,875 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:48:15,875 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:48:40,663 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:48:40,664 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:48:40,667 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:48:40,668 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:48:41,867 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:48:41,868 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:48:41,868 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:48:41,869 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:48:41,869 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:48:41,870 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:48:41,871 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:48:41,872 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:49:01,938 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:49:01,939 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:49:01,941 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:49:01,943 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:49:02,893 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:49:02,893 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:49:02,894 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:49:02,894 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:49:02,896 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:49:02,896 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:49:02,897 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:49:02,897 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:49:16,751 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:49:16,752 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:49:16,755 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:49:16,756 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:49:20,698 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:49:20,699 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:49:20,701 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:49:20,703 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:49:22,238 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:49:22,238 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:49:22,238 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:49:22,238 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:49:22,240 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:49:22,241 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:49:22,241 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:49:22,241 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:50:24,493 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:50:24,494 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:50:24,496 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:50:24,497 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:50:27,356 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:50:27,356 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:50:27,358 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:50:27,359 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:50:28,582 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:50:28,582 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:50:28,582 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:50:28,582 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:50:28,585 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:50:28,585 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:50:28,585 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:50:28,585 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:53:17,382 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by newsId 
2019-07-22 15:53:17,383 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:53:17,384 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 15:53:17,385 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  } ]
}
2019-07-22 15:53:19,457 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news where newsId = ? order by newsId 
2019-07-22 15:53:19,457 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 6(Integer)
2019-07-22 15:53:19,459 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:53:19,459 DEBUG (NewsController.java:58)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }
}
2019-07-22 15:53:24,512 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:53:24,513 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:53:24,514 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:53:24,515 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:53:26,773 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:53:26,773 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:53:26,774 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:53:26,774 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:53:26,775 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:53:26,775 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:53:26,776 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:53:26,776 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:57:18,442 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 15:57:18,442 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:57:18,445 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:57:18,446 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 15:57:19,499 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 15:57:19,499 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 15:57:19,499 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:57:19,499 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 15:57:19,503 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:57:19,503 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:57:19,504 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 15:57:19,504 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 15:57:56,007 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 15:57:56,007 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 不是啊，老人机才是最便宜的(String), wo(String), null
2019-07-22 15:57:56,470 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/RevertMapper.xml
### The error may involve com.zryx.company.mapper.RevertMapper.addRevert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO revert VALUES(NULL,?,?,?,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy71.addRevert(Unknown Source)
	at com.zryx.company.service.imp.RevertServiceImpl.addRevert(RevertServiceImpl.java:27)
	at com.zryx.company.controller.RevertController.addNews(RevertController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-22 15:57:56,877 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 15:57:56,878 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 不是啊，老人机才是最便宜的(String), wo(String), null
2019-07-22 15:57:56,893 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/RevertMapper.xml
### The error may involve com.zryx.company.mapper.RevertMapper.addRevert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO revert VALUES(NULL,?,?,?,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy71.addRevert(Unknown Source)
	at com.zryx.company.service.imp.RevertServiceImpl.addRevert(RevertServiceImpl.java:27)
	at com.zryx.company.controller.RevertController.addNews(RevertController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-22 16:00:00,375 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 9720 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 16:00:00,376 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 16:00:00,377 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 16:00:04,007 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.88 seconds (JVM running for 6.532)
2019-07-22 16:00:19,830 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 16:00:19,853 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 16:00:19,882 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 16:00:19,957 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 16:00:20,926 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 16:00:20,926 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 16:00:20,927 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:00:20,927 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:00:20,932 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:00:20,932 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:00:20,935 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 16:00:20,936 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 16:01:55,104 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 16:01:55,106 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 你好(String), luojun(String), null
2019-07-22 16:01:59,164 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 12416 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 16:01:59,168 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 16:01:59,169 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 16:02:02,036 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.51 seconds (JVM running for 5.229)
2019-07-22 16:02:11,067 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 16:02:11,093 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 16:02:11,118 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 16:02:11,207 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 16:02:12,171 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 16:02:12,171 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 16:02:12,173 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:02:12,173 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:02:12,175 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:02:12,176 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:02:12,178 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 16:02:12,179 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 16:03:45,552 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 16:03:45,556 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 最便宜的是砖头(String), luojn(String), 2019-07-10 00:00:00.0(Timestamp)
2019-07-22 16:03:49,445 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 7728 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 16:03:49,449 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 16:03:49,450 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 16:03:52,226 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.717 seconds (JVM running for 5.28)
2019-07-22 16:03:56,815 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 16:03:56,839 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 16:03:56,868 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 16:03:56,955 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 16:03:57,955 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 16:03:57,955 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 16:03:57,956 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:03:57,956 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:03:57,958 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:03:57,958 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:03:57,959 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 16:03:57,959 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 16:05:00,919 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 16:05:00,924 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 便宜的是砖头(String), 罗军(String), 2019-07-05 00:00:00.0(Timestamp)
2019-07-22 16:05:03,911 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 2220 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 16:05:03,915 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 16:05:03,916 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 16:05:06,732 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.481 seconds (JVM running for 5.089)
2019-07-22 16:05:13,946 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 16:05:13,974 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 16:05:14,004 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 16:05:14,093 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 16:05:15,255 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 16:05:15,255 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 16:05:15,256 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:05:15,256 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:05:15,259 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:05:15,259 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:05:15,260 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 16:05:15,261 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 16:09:04,193 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 16:09:04,218 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), aaa(String), aaa(String), 2019-07-03 00:00:00.0(Timestamp)
2019-07-22 16:09:07,101 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 10220 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 16:09:07,106 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 16:09:07,107 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 16:09:09,946 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.494 seconds (JVM running for 5.039)
2019-07-22 16:09:15,014 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 16:09:15,036 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 16:09:15,063 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 16:09:15,142 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 16:09:16,501 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 16:09:16,501 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 16:09:16,502 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:09:16,502 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:09:16,505 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:09:16,505 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:09:16,507 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 16:09:16,508 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 16:10:10,802 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 16:10:10,808 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 11(String), 11(String), 2019-07-09 00:00:00.0(Timestamp)
2019-07-22 16:10:14,322 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 17468 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 16:10:14,326 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 16:10:14,327 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 16:10:17,145 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.546 seconds (JVM running for 5.088)
2019-07-22 16:10:25,382 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 16:10:25,406 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 16:10:25,437 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 16:10:25,519 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 16:10:26,207 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 16:10:26,207 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 16:10:26,208 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:10:26,208 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:10:26,210 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:10:26,211 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:10:26,213 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 16:10:26,213 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 16:11:50,340 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 16:11:50,345 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 111(String), 111(String), 2019-07-22 00:00:00.0(Timestamp)
2019-07-22 16:11:54,280 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 15684 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 16:11:54,283 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 16:11:54,284 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 16:11:56,921 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.266 seconds (JVM running for 4.678)
2019-07-22 16:12:03,643 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 16:12:03,667 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 16:12:03,692 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 16:12:03,771 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 16:12:04,771 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 16:12:04,771 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 16:12:04,772 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:12:04,772 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:12:04,774 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:12:04,774 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:12:04,776 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 16:12:04,777 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 16:13:05,635 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 16936 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 16:13:05,688 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 16:13:05,689 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 16:13:08,470 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.543 seconds (JVM running for 4.987)
2019-07-22 16:13:17,217 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 16:13:17,253 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 16:13:17,291 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 16:13:17,371 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 16:13:18,501 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 16:13:18,501 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 16:13:18,503 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:13:18,503 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:13:18,506 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:13:18,506 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:13:18,507 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 16:13:18,508 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 16:14:24,415 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 18088 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 16:14:24,418 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 16:14:24,419 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 16:14:27,320 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.72 seconds (JVM running for 5.272)
2019-07-22 16:14:32,686 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 16:14:32,710 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 16:14:32,738 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 16:14:32,816 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 16:14:33,658 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 16:14:33,658 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 16:14:33,659 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:14:33,659 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:14:33,670 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:14:33,670 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:14:33,672 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 16:14:33,673 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 16:15:05,057 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 6824 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 16:15:05,058 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 16:15:05,058 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 16:15:07,228 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 2.629 seconds (JVM running for 3.87)
2019-07-22 16:15:51,863 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 16:15:51,888 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 16:15:51,912 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 16:15:51,979 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 16:15:54,032 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 16:15:54,032 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 16:15:54,033 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:15:54,033 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:15:54,035 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:15:54,035 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:15:54,036 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 16:15:54,037 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 16:16:03,922 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 16:16:03,925 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 你好(String), 罗军(String), 2019-07-04 00:00:00.0(Timestamp)
2019-07-22 16:16:03,985 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/RevertMapper.xml
### The error may involve com.zryx.company.mapper.RevertMapper.addRevert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO revert VALUES(NULL,?,?,?,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy71.addRevert(Unknown Source)
	at com.zryx.company.service.imp.RevertServiceImpl.addRevert(RevertServiceImpl.java:27)
	at com.zryx.company.controller.RevertController.addNews(RevertController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-22 16:23:13,390 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 12116 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 16:23:13,393 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 16:23:13,393 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 16:23:15,654 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 2.81 seconds (JVM running for 4.081)
2019-07-22 16:23:20,808 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 16:23:20,833 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 16:23:20,856 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 16:23:20,927 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 16:23:21,898 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 16:23:21,898 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 16:23:21,898 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:23:21,898 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 16:23:21,900 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:23:21,901 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:23:21,903 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 16:23:21,903 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 16:23:29,538 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 16:23:29,540 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 哈哈哈(String), 罗军(String), 2019-07-02 00:00:00.0(Timestamp)
2019-07-22 16:23:29,605 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/RevertMapper.xml
### The error may involve com.zryx.company.mapper.RevertMapper.addRevert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO revert VALUES(NULL,?,?,?,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy71.addRevert(Unknown Source)
	at com.zryx.company.service.imp.RevertServiceImpl.addRevert(RevertServiceImpl.java:27)
	at com.zryx.company.controller.RevertController.addNews(RevertController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-22 17:05:05,392 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 13968 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 17:05:05,396 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 17:05:05,397 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 17:05:09,192 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.552 seconds (JVM running for 6.169)
2019-07-22 17:05:21,315 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 17:05:21,353 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:05:21,390 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 17:05:21,470 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 17:05:26,035 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 17:05:26,037 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:05:26,042 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 17:05:26,044 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 17:05:27,105 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 17:05:27,107 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 17:05:27,107 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 17:05:27,108 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 17:05:27,112 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 17:05:27,112 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 17:05:27,113 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 17:05:27,114 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 17:10:28,171 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 17:10:28,178 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 111(String), 111(String), 2019-07-19 00:00:00.0(Timestamp)
2019-07-22 17:10:32,741 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 11972 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 17:10:32,745 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 17:10:32,746 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 17:10:35,956 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.915 seconds (JVM running for 5.506)
2019-07-22 17:10:41,202 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 17:10:41,237 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:10:41,276 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 17:10:41,372 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 17:10:42,452 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 17:10:42,452 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 17:10:42,453 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 17:10:42,453 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 17:10:42,456 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 17:10:42,457 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 17:10:42,458 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 17:10:42,459 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 17:11:19,242 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 17:11:19,250 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 11(String), 111(String), 2019-07-11 00:00:00.0(Timestamp)
2019-07-22 17:11:22,833 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 14372 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 17:11:22,837 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 17:11:22,838 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 17:11:26,691 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.543 seconds (JVM running for 6.17)
2019-07-22 17:11:37,584 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 17:11:37,616 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:11:37,641 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 17:11:37,729 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 17:11:39,344 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 17:11:39,346 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 17:11:39,346 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 17:11:39,347 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 17:11:39,348 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 17:11:39,350 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 17:11:39,349 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 17:11:39,351 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 17:12:14,282 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 17:12:14,289 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 111(String), 111(String), 2019-07-02 00:00:00.0(Timestamp)
2019-07-22 17:12:17,581 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 16912 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 17:12:17,584 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 17:12:17,585 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 17:12:20,225 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.189 seconds (JVM running for 4.589)
2019-07-22 17:12:26,378 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 17:12:26,409 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:12:26,448 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 17:12:26,564 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 17:12:27,387 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 17:12:27,387 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 17:12:27,388 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 17:12:27,388 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 17:12:27,391 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 17:12:27,391 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 17:12:27,392 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 17:12:27,393 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 17:12:37,589 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 17:12:37,592 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 你好啊(String), luojun(String), 2019-07-26 00:00:00.0(Timestamp)
2019-07-22 17:12:37,671 ERROR (BaseController.java:281)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/RevertMapper.xml
### The error may involve com.zryx.company.mapper.RevertMapper.addRevert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO revert VALUES(NULL,?,?,?,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy71.addRevert(Unknown Source)
	at com.zryx.company.service.imp.RevertServiceImpl.addRevert(RevertServiceImpl.java:27)
	at com.zryx.company.controller.RevertController.addNews(RevertController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-22 17:13:02,694 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 7188 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 17:13:02,699 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 17:13:02,700 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 17:13:06,374 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.379 seconds (JVM running for 6.225)
2019-07-22 17:13:12,754 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 17:13:12,782 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:13:12,819 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 17:13:12,915 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 17:13:13,895 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 17:13:13,895 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 17:13:13,897 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 17:13:13,897 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 17:13:13,899 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 17:13:13,899 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 17:13:13,900 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 17:13:13,901 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 17:18:08,053 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 17:18:08,080 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 1111(String), 111(String), 2019-07-10 00:00:00.0(Timestamp)
2019-07-22 17:18:11,738 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 15420 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 17:18:11,741 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 17:18:11,742 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 17:18:14,270 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.065 seconds (JVM running for 4.463)
2019-07-22 17:18:16,726 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 17:18:16,758 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:18:16,795 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 17:18:16,878 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 17:18:20,774 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 17:18:20,775 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:18:20,781 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 17:18:20,783 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 17:18:21,813 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 17:18:21,813 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 17:18:21,814 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 17:18:21,814 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 17:18:21,816 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 17:18:21,817 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 17:18:21,818 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 17:18:21,818 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 17:18:27,530 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 17:18:27,533 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer), 1111(String), 11111(String), 2019-07-18 00:00:00.0(Timestamp)
2019-07-22 17:18:27,543 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 17:18:28,799 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 17:18:28,800 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 17:18:28,801 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 17:18:28,802 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 17:18:28,804 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 17:18:28,804 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 17:18:28,806 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 17:18:28,806 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  }, {
    "revertId" : 18,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1563321600000
  } ]
}
2019-07-22 17:22:10,893 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 17:22:10,894 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:22:10,899 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 17:22:10,902 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 17:22:15,763 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 17:22:15,763 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 17:22:15,764 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 17:22:15,764 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 17:22:15,766 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 17:22:15,767 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 17:22:15,767 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 17:22:15,767 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  }, {
    "revertId" : 18,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1563321600000
  } ]
}
2019-07-22 17:22:26,849 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 17:22:26,850 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer), 哈哈哈哈(String), 哈哈哈(String), 2019-07-19 00:00:00.0(Timestamp)
2019-07-22 17:22:26,858 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 17:22:28,262 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 17:22:28,262 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 17:22:28,263 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 17:22:28,263 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 17:22:28,266 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 17:22:28,267 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 17:22:28,267 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 17:22:28,268 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  }, {
    "revertId" : 18,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1563321600000
  }, {
    "revertId" : 19,
    "messageId" : 1,
    "content" : "哈哈哈哈",
    "writer" : "哈哈哈",
    "writerDate" : 1563408000000
  } ]
}
2019-07-22 17:23:18,132 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 17:23:18,133 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:23:18,141 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 17:23:18,142 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 17:23:20,949 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 17:23:20,950 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:23:20,953 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 17:23:20,954 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 17:23:22,272 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 17:23:22,273 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:23:22,277 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 17:23:22,280 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 17:23:24,813 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 17:23:24,815 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:23:24,821 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 17:23:24,824 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 17:23:25,425 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 17:23:25,426 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:23:25,429 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 17:23:25,431 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 17:23:27,082 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 17:23:27,083 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:23:27,086 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 17:23:27,087 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 17:23:29,404 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 17:23:29,405 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:23:29,408 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 17:23:29,409 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 17:25:23,725 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 17:25:23,726 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:25:23,729 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 17:25:23,730 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 17:26:05,636 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 17:26:05,637 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:26:05,639 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 17:26:05,640 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 17:26:12,804 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 17:26:12,804 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:26:12,807 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 17:26:12,808 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 17:26:13,632 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 17:26:13,633 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:26:13,638 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 17:26:13,639 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 17:26:41,732 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 17:26:41,733 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 17:26:41,736 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 17:26:41,737 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:22:08,946 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 4680 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 21:22:08,968 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 21:22:08,969 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 21:22:12,594 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.501 seconds (JVM running for 7.881)
2019-07-22 21:24:23,680 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from news order by writeDate desc limit 0,8 
2019-07-22 21:24:23,682 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-22 21:24:23,710 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:24:23,710 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:24:23,738 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 21:24:23,738 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 8
2019-07-22 21:25:18,081 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 21:25:18,082 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 21:25:18,089 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 21:25:18,090 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-22 21:25:18,090 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 21:25:18,092 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 21:25:18,093 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 21:25:18,094 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 21:25:18,095 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 21:25:50,893 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:25:50,894 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:25:50,897 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:25:50,900 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:33:05,845 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 4680 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 21:33:05,845 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 21:33:05,845 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 21:35:28,120 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 8216 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 21:35:28,124 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 21:35:28,125 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 21:35:30,961 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.598 seconds (JVM running for 4.91)
2019-07-22 21:35:48,163 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:35:48,198 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:35:48,218 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:35:48,278 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:35:50,612 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-22 21:35:50,615 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: name(String)
2019-07-22 21:35:50,618 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 21:35:50,623 DEBUG (UsersController.java:50)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 21:37:39,475 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:37:39,476 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:37:39,480 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:37:39,481 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:37:42,885 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-22 21:37:42,886 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: name(String)
2019-07-22 21:37:42,888 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 21:37:42,889 DEBUG (UsersController.java:50)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 21:37:44,837 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:37:44,838 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:37:44,842 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:37:44,843 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:37:47,562 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-22 21:37:47,563 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: name(String)
2019-07-22 21:37:47,566 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 21:37:47,567 DEBUG (UsersController.java:50)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 21:37:48,856 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:37:48,857 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:37:48,864 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:37:48,865 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:37:52,167 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-22 21:37:52,168 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: name(String)
2019-07-22 21:37:52,170 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 21:37:52,171 DEBUG (UsersController.java:50)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 21:37:53,267 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:37:53,267 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:37:53,273 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:37:53,274 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:37:56,469 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-22 21:37:56,470 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: name(String)
2019-07-22 21:37:56,472 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 21:37:56,474 DEBUG (UsersController.java:50)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 21:38:00,027 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:38:00,028 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:38:00,031 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:38:00,034 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:38:03,032 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-22 21:38:03,033 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: name(String)
2019-07-22 21:38:03,035 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 21:38:03,036 DEBUG (UsersController.java:50)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 21:39:35,960 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 8216 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 21:39:35,960 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 21:39:35,960 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 21:39:36,745 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.824 seconds (JVM running for 250.694)
2019-07-22 21:39:44,115 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 8216 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 21:39:44,116 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 21:39:44,116 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 21:40:54,928 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 8216 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 21:40:54,928 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 21:40:54,929 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 21:40:55,635 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.746 seconds (JVM running for 329.583)
2019-07-22 21:40:59,955 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:40:59,956 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:40:59,962 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:40:59,969 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:42:08,696 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 8580 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 21:42:08,700 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 21:42:08,701 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 21:42:12,053 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.889 seconds (JVM running for 6.811)
2019-07-22 21:42:39,178 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:42:39,206 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:42:39,235 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:42:39,321 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:43:18,989 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 15208 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 21:43:18,993 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 21:43:18,994 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 21:43:22,206 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.915 seconds (JVM running for 5.473)
2019-07-22 21:43:31,299 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:43:31,326 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:43:31,363 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:43:31,457 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:44:05,901 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-22 21:44:05,903 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-22 21:44:05,908 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 21:44:21,281 DEBUG (UsersController.java:50)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }
}
2019-07-22 21:45:12,625 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 1888 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 21:45:12,629 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 21:45:12,630 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 21:45:15,529 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.58 seconds (JVM running for 5.144)
2019-07-22 21:45:22,762 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:45:22,787 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:45:22,817 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:45:22,905 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:45:31,867 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-22 21:45:31,869 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-22 21:45:31,875 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 21:46:04,182 DEBUG (UsersController.java:50)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }
}
2019-07-22 21:46:04,283 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:46:04,284 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:46:04,286 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:46:04,287 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:46:11,561 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 17356 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 21:46:11,571 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 21:46:11,572 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 21:46:14,642 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.949 seconds (JVM running for 5.775)
2019-07-22 21:46:39,685 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:46:39,709 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:46:39,752 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:46:39,847 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:46:53,596 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-22 21:46:53,597 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: zzg(String)
2019-07-22 21:46:53,601 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 21:46:53,602 DEBUG (UsersController.java:50)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }
}
2019-07-22 21:46:57,064 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 18140 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 21:46:57,067 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 21:46:57,068 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 21:46:59,592 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.001 seconds (JVM running for 4.283)
2019-07-22 21:47:05,782 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:47:05,803 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:47:05,823 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:47:05,874 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:47:08,229 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-22 21:47:08,230 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: zzg(String)
2019-07-22 21:47:08,232 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 21:47:08,233 DEBUG (UsersController.java:50)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }
}
2019-07-22 21:48:26,200 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:48:26,201 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:48:26,205 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:48:26,206 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:48:28,459 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-22 21:48:28,460 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-22 21:48:28,464 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 21:48:28,465 DEBUG (UsersController.java:50)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }
}
2019-07-22 21:49:25,479 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:49:25,479 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:49:25,487 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:49:25,488 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:52:21,846 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:52:21,847 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:52:21,850 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:52:21,850 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:52:23,884 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-22 21:52:23,885 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-22 21:52:23,888 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 21:52:23,889 DEBUG (UsersController.java:50)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }
}
2019-07-22 21:52:29,233 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:52:29,234 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:52:29,237 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:52:29,238 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:52:32,168 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-22 21:52:32,169 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: zzg(String)
2019-07-22 21:52:32,173 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 21:52:32,174 DEBUG (UsersController.java:50)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }
}
2019-07-22 21:54:07,579 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:54:07,580 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:54:07,584 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:54:07,585 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:54:10,741 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-22 21:54:10,742 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-22 21:54:10,744 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 21:54:10,745 DEBUG (UsersController.java:50)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }
}
2019-07-22 21:56:19,044 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:56:19,045 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:56:19,049 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:56:19,050 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:56:23,096 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-22 21:56:23,097 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: zzg(String)
2019-07-22 21:56:23,101 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 21:56:23,103 DEBUG (UsersController.java:50)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }
}
2019-07-22 21:56:46,122 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:56:46,123 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:56:46,126 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:56:46,127 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:57:38,542 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 21:57:38,542 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 21:57:38,546 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 21:57:38,547 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 21:57:41,398 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-22 21:57:41,400 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-22 21:57:41,407 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 21:57:41,410 DEBUG (UsersController.java:50)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }
}
2019-07-22 22:04:51,524 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 18140 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 22:04:51,525 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 22:04:51,525 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 22:05:07,131 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 18140 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 22:05:07,132 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 22:05:07,132 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 22:05:11,989 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 18140 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 22:05:11,989 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 22:05:11,989 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 22:05:54,032 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 18140 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 22:05:54,032 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 22:05:54,033 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 22:07:17,122 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 18140 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 22:07:17,122 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 22:07:17,122 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 22:08:02,787 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 18140 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 22:08:02,787 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 22:08:02,788 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 22:09:38,413 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 17312 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 22:09:38,416 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 22:09:38,417 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 22:09:41,108 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.177 seconds (JVM running for 4.426)
2019-07-22 22:09:48,225 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 22:09:48,249 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:09:48,273 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 22:09:48,347 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 22:09:54,944 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-22 22:09:54,945 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: zzg(String)
2019-07-22 22:09:54,946 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:09:54,947 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }
}
2019-07-22 22:09:57,516 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: UPDATE users SET userName=?,password=? ,status=? WHERE userId = ? 
2019-07-22 22:09:57,517 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: zzg(String), zzg(String), 1(Integer), 2(Integer)
2019-07-22 22:09:57,519 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:10:04,009 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 22:10:04,009 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:10:04,012 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 22:10:04,013 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 22:10:40,648 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 22:10:40,649 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:10:40,656 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 22:10:40,659 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 22:10:45,188 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-22 22:10:45,189 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: zzg(String)
2019-07-22 22:10:45,191 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:10:45,192 DEBUG (UsersController.java:56)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }
}
2019-07-22 22:10:46,788 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: UPDATE users SET userName=?,password=? ,status=? WHERE userId = ? 
2019-07-22 22:10:46,789 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: zzg(String), zzg(String), 1(Integer), 2(Integer)
2019-07-22 22:10:46,790 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:10:47,957 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 22:10:47,957 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:10:47,960 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 22:10:47,961 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 22:11:01,579 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 22:11:01,579 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:11:01,586 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 22:11:01,592 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 22:11:03,119 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:11:03,119 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:11:03,120 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:11:03,120 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:11:03,122 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:11:03,122 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 22:11:03,123 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:11:03,124 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  }, {
    "revertId" : 18,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1563321600000
  }, {
    "revertId" : 19,
    "messageId" : 1,
    "content" : "哈哈哈哈",
    "writer" : "哈哈哈",
    "writerDate" : 1563408000000
  } ]
}
2019-07-22 22:14:08,653 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 17312 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 22:14:08,653 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 22:14:08,653 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 22:14:09,332 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.716 seconds (JVM running for 272.65)
2019-07-22 22:25:05,011 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 17312 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 22:25:05,011 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 22:25:05,012 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 22:25:05,893 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.918 seconds (JVM running for 929.212)
2019-07-22 22:25:12,138 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 22:25:12,140 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:25:12,143 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 22:25:12,152 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 22:25:14,373 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:25:14,373 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:25:14,374 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 22:25:14,374 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 22:25:14,379 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:25:14,379 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:25:14,381 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }
}
2019-07-22 22:25:14,383 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 2,
    "messageId" : 2,
    "content" : "哈哈哈",
    "writer" : "罗军",
    "writerDate" : 1563753600000
  } ]
}
2019-07-22 22:27:45,609 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 22:27:45,610 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:27:45,617 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 22:27:45,619 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 22:27:46,790 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:27:46,790 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:27:46,791 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:27:46,791 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:27:46,796 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:27:46,796 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 22:27:46,797 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  }, {
    "revertId" : 18,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1563321600000
  }, {
    "revertId" : 19,
    "messageId" : 1,
    "content" : "哈哈哈哈",
    "writer" : "哈哈哈",
    "writerDate" : 1563408000000
  } ]
}
2019-07-22 22:27:46,797 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:31:02,579 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 22:31:02,580 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:31:02,589 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 22:31:02,592 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 22:31:04,095 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:31:04,095 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:31:04,096 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:31:04,096 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:31:04,099 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:31:04,099 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 22:31:04,100 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:31:04,100 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  }, {
    "revertId" : 18,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1563321600000
  }, {
    "revertId" : 19,
    "messageId" : 1,
    "content" : "哈哈哈哈",
    "writer" : "哈哈哈",
    "writerDate" : 1563408000000
  } ]
}
2019-07-22 22:31:05,602 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM users WHERE userId = ? 
2019-07-22 22:31:05,603 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-22 22:31:05,604 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 22:32:20,273 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 17312 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 22:32:20,274 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 22:32:20,274 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 22:32:20,967 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 0.733 seconds (JVM running for 1364.285)
2019-07-22 22:32:46,973 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM users WHERE userId = ? 
2019-07-22 22:32:46,974 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-22 22:32:46,976 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 22:33:21,267 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 22:33:21,268 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:33:21,271 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 22:33:21,282 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 22:33:22,365 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:33:22,365 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:33:22,365 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:33:22,366 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:33:22,370 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:33:22,370 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 22:33:22,372 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:33:22,373 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  }, {
    "revertId" : 18,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1563321600000
  }, {
    "revertId" : 19,
    "messageId" : 1,
    "content" : "哈哈哈哈",
    "writer" : "哈哈哈",
    "writerDate" : 1563408000000
  } ]
}
2019-07-22 22:33:23,685 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-22 22:33:23,686 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 19(Integer)
2019-07-22 22:33:23,692 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:34:06,878 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 22:34:06,879 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:34:06,882 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 22:34:06,883 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 22:34:08,728 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:34:08,728 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:34:08,729 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:34:08,729 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:34:08,733 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:34:08,733 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 22:34:08,734 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:34:08,734 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  }, {
    "revertId" : 18,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1563321600000
  } ]
}
2019-07-22 22:34:11,352 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-22 22:34:11,353 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 18(Integer)
2019-07-22 22:34:11,363 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:35:04,907 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 1928 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 22:35:04,911 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 22:35:04,912 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 22:35:07,361 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 2.978 seconds (JVM running for 4.354)
2019-07-22 22:35:18,744 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 22:35:18,767 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:35:18,801 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 22:35:18,866 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 22:35:21,141 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:35:21,141 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:35:21,142 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:35:21,142 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:35:21,144 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:35:21,144 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:35:21,145 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:35:21,146 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writerDate" : 1565222400000
  } ]
}
2019-07-22 22:35:23,787 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-22 22:35:23,788 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:35:23,797 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:35:26,210 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-22 22:35:26,210 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:35:26,212 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 22:35:26,369 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-22 22:35:26,370 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:35:26,372 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 0
2019-07-22 22:36:52,751 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 15032 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 22:36:52,755 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 22:36:52,756 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 22:36:55,723 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.792 seconds (JVM running for 5.486)
2019-07-22 22:37:05,221 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 22:37:05,247 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:37:05,279 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 22:37:05,351 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 22:37:07,902 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:37:07,902 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:37:07,903 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 22:37:07,903 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 22:37:07,906 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:37:07,906 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:37:07,907 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }
}
2019-07-22 22:37:07,908 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 2,
    "messageId" : 2,
    "content" : "哈哈哈",
    "writer" : "罗军",
    "writerDate" : 1563753600000
  } ]
}
2019-07-22 22:37:32,235 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-22 22:37:32,236 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 22:37:32,246 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:39:07,303 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-7TTQDPL with PID 16888 (G:\scsx\Student\recv\company\company\target\classes started by luojun in G:\scsx\Student\recv\company\company)
2019-07-22 22:39:07,308 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 22:39:07,309 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 22:39:09,795 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.05 seconds (JVM running for 4.72)
2019-07-22 22:39:26,817 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 22:39:26,842 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:39:26,877 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 22:39:26,938 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 22:39:28,003 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:39:28,003 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:39:28,005 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 22:39:28,005 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 22:39:28,007 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 22:39:28,008 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:39:28,009 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }
}
2019-07-22 22:39:28,014 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 22:39:31,027 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 22:39:31,028 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:39:31,033 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 22:39:31,036 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 22:39:32,574 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:39:32,574 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:39:32,575 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:39:32,575 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:39:32,578 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 22:39:32,578 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:39:32,579 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:39:32,579 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 22:39:37,450 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 22:39:37,451 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:39:37,458 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 22:39:37,460 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 22:39:40,272 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:39:40,272 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:39:40,273 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:39:40,273 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:39:40,276 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:39:40,276 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 22:39:40,276 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 22:39:40,276 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:40:01,618 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 22:40:01,652 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer), 诺基亚，才1000(String), 罗军(String), 2019-07-15 00:00:00.0(Timestamp)
2019-07-22 22:40:01,662 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:40:01,668 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:40:01,669 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:40:01,670 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:40:01,671 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:40:01,671 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:40:01,673 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 20,
    "messageId" : 1,
    "content" : "诺基亚，才1000",
    "writer" : "罗军",
    "writerDate" : 1563062400000
  } ]
}
2019-07-22 22:40:01,674 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:40:01,675 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:40:03,362 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-22 22:40:03,363 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 20(Integer)
2019-07-22 22:40:03,373 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:40:37,894 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 22:40:37,895 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:40:37,898 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 22:40:37,899 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 22:40:39,252 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:40:39,252 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:40:39,253 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:40:39,253 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:40:39,256 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 22:40:39,256 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:40:39,257 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 22:40:39,258 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:40:45,771 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 22:40:45,772 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:40:45,776 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 22:40:45,777 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 22:40:47,310 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:40:47,310 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:40:47,312 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 22:40:47,312 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 22:40:47,316 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 22:40:47,316 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:40:47,318 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 22:40:47,318 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }
}
2019-07-22 22:40:52,875 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 22:40:52,875 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer), 去111(String), 1111(String), null
2019-07-22 22:40:52,885 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:40:52,890 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:40:52,891 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:40:52,891 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 22:40:52,891 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 22:40:52,894 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:40:52,894 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:40:52,895 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }
}
2019-07-22 22:40:52,895 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 21,
    "messageId" : 2,
    "content" : "去111",
    "writer" : "1111",
    "writerDate" : null
  } ]
}
2019-07-22 22:40:55,905 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-22 22:40:55,906 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 21(Integer)
2019-07-22 22:40:55,914 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:41:23,644 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 22:41:23,644 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:41:23,647 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 22:41:23,649 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 22:41:24,898 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:41:24,898 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:41:24,899 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:41:24,899 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:41:24,902 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 22:41:24,902 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:41:24,903 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 22:41:24,903 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:42:25,676 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 22:42:25,677 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer), 价格最低MP4是mp3,才一万块。(String), luojun(String), 2019-07-11 00:00:00.0(Timestamp)
2019-07-22 22:42:25,681 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:42:25,687 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:42:25,688 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:42:25,690 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:42:25,690 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 22,
    "messageId" : 1,
    "content" : "价格最低MP4是mp3,才一万块。",
    "writer" : "luojun",
    "writerDate" : 1562716800000
  } ]
}
2019-07-22 22:42:25,691 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:42:25,691 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:42:25,693 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:42:25,693 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:42:27,973 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-22 22:42:27,974 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 22(Integer)
2019-07-22 22:42:27,982 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:42:27,988 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:42:27,989 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:42:27,989 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:42:27,989 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:42:27,991 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 22:42:27,991 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:42:27,991 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 22:42:27,991 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:43:05,618 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 22:43:05,619 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:43:05,622 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 22:43:05,623 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 22:43:07,083 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:43:07,083 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:43:07,083 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:07,083 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:07,086 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 22:43:07,086 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:43:07,087 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 22:43:07,087 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:43:12,811 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 22:43:12,812 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer), 1111(String), 11111(String), 2019-07-03 00:00:00.0(Timestamp)
2019-07-22 22:43:12,821 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:43:12,826 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:43:12,826 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:12,827 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:43:12,828 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:12,828 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:43:12,828 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 23,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  } ]
}
2019-07-22 22:43:12,830 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:43:12,831 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:43:13,926 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 22:43:13,927 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer), 1111(String), 11111(String), 2019-07-03 00:00:00.0(Timestamp)
2019-07-22 22:43:13,936 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:43:13,940 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:43:13,940 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:13,940 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:43:13,941 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:13,943 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 22:43:13,942 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:43:13,943 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:43:13,943 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 23,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 24,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  } ]
}
2019-07-22 22:43:14,742 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 22:43:14,743 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer), 1111(String), 11111(String), 2019-07-03 00:00:00.0(Timestamp)
2019-07-22 22:43:14,747 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:43:14,754 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:43:14,754 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:43:14,755 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:14,755 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:14,757 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:43:14,757 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 22:43:14,758 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 23,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 24,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 25,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  } ]
}
2019-07-22 22:43:14,758 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:43:15,620 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 22:43:15,622 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer), 1111(String), 11111(String), 2019-07-03 00:00:00.0(Timestamp)
2019-07-22 22:43:15,632 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:43:15,636 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:43:15,637 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:15,638 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:43:15,638 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:15,638 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 22:43:15,639 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 23,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 24,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 25,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 26,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  } ]
}
2019-07-22 22:43:15,640 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:43:15,641 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:43:16,723 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-22 22:43:16,723 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 26(Integer)
2019-07-22 22:43:16,733 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:43:16,740 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:43:16,740 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:16,741 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:43:16,741 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:16,742 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:43:16,743 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:43:16,743 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 22:43:16,745 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 23,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 24,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 25,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  } ]
}
2019-07-22 22:43:17,638 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-22 22:43:17,639 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 25(Integer)
2019-07-22 22:43:17,643 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:43:17,647 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:43:17,648 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:17,649 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:43:17,650 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:17,650 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 22:43:17,651 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 23,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 24,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  } ]
}
2019-07-22 22:43:17,651 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:43:17,653 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:43:18,932 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 22:43:18,932 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer), 1111(String), 11111(String), 2019-07-03 00:00:00.0(Timestamp)
2019-07-22 22:43:18,942 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:43:18,947 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:43:18,947 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:43:18,948 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:18,948 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:18,950 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:43:18,950 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 22:43:18,951 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:43:18,951 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 23,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 24,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 27,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  } ]
}
2019-07-22 22:43:19,079 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 22:43:19,079 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer), 1111(String), 11111(String), 2019-07-03 00:00:00.0(Timestamp)
2019-07-22 22:43:19,084 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:43:19,088 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:43:19,088 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:43:19,088 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:19,088 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:19,090 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:43:19,090 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 22:43:19,091 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:43:19,091 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 23,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 24,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 27,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 28,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  } ]
}
2019-07-22 22:43:20,399 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 22:43:20,400 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer), 1111(String), 11111(String), 2019-07-03 00:00:00.0(Timestamp)
2019-07-22 22:43:20,408 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:43:20,413 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:43:20,414 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:20,415 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:43:20,415 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:20,416 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:43:20,417 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 22:43:20,417 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:43:20,417 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 23,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 24,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 27,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 28,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 29,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  } ]
}
2019-07-22 22:43:21,235 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 22:43:21,236 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer), 1111(String), 11111(String), 2019-07-03 00:00:00.0(Timestamp)
2019-07-22 22:43:21,245 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:43:21,250 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:43:21,251 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:21,251 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:43:21,251 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:21,252 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:43:21,253 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:43:21,253 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 22:43:21,254 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 23,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 24,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 27,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 28,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 29,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 30,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  } ]
}
2019-07-22 22:43:22,602 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-22 22:43:22,603 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 30(Integer)
2019-07-22 22:43:22,611 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:43:22,617 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:43:22,618 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:22,618 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:43:22,619 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:22,621 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:43:22,621 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 22:43:22,622 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:43:22,622 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 23,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 24,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 27,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 28,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 29,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  } ]
}
2019-07-22 22:43:23,386 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-22 22:43:23,387 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 28(Integer)
2019-07-22 22:43:23,391 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:43:23,396 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:43:23,396 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:23,398 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:43:23,399 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:23,399 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:43:23,399 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:43:23,401 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 22:43:23,402 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 23,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 24,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 27,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 29,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  } ]
}
2019-07-22 22:43:24,042 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-22 22:43:24,042 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 27(Integer)
2019-07-22 22:43:24,047 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:43:24,052 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:43:24,052 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:24,052 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:43:24,052 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:24,053 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:43:24,054 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 22:43:24,054 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:43:24,054 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 23,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 24,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 29,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  } ]
}
2019-07-22 22:43:24,961 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-22 22:43:24,961 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 24(Integer)
2019-07-22 22:43:24,971 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:43:24,976 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:43:24,977 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:24,978 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:43:24,979 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:43:24,980 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 22:43:24,980 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 23,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 29,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  } ]
}
2019-07-22 22:43:24,981 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:43:24,981 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:43:27,297 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 22:43:27,298 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:43:27,301 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 22:43:27,302 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 22:43:33,014 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 22:43:33,015 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:43:33,020 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 22:43:33,021 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 22:43:43,126 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 22:43:43,126 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:43:43,129 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 22:43:43,130 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 22:43:45,534 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by newsId 
2019-07-22 22:43:45,534 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:43:45,540 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 22:43:45,541 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  } ]
}
2019-07-22 22:43:47,987 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by newsId 
2019-07-22 22:43:47,988 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:43:47,990 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 22:43:47,991 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  } ]
}
2019-07-22 22:46:30,469 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 22:46:30,469 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 22:46:30,473 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:46:30,473 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-22 22:46:30,473 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 22:46:30,475 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:46:30,475 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 22:46:30,476 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 22:46:30,477 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:46:58,787 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 22:46:58,788 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:46:58,791 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 22:46:58,793 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 22:46:59,975 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:46:59,975 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:46:59,975 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:46:59,975 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:46:59,979 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:46:59,979 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 22:46:59,980 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 23,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 29,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  } ]
}
2019-07-22 22:46:59,980 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:47:02,822 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: DELETE FROM revert WHERE revertId = ? 
2019-07-22 22:47:02,822 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 29(Integer)
2019-07-22 22:47:02,832 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:47:02,836 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:47:02,837 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:47:02,837 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:47:02,837 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:47:02,838 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:47:02,838 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:47:02,839 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:47:02,840 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 23,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  } ]
}
2019-07-22 22:47:07,800 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUES(NULL,?,?,?,?) 
2019-07-22 22:47:07,801 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer), 1111(String), 111(String), 2019-07-17 00:00:00.0(Timestamp)
2019-07-22 22:47:07,804 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:47:07,810 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? 
2019-07-22 22:47:07,811 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:47:07,811 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message where messageId= ? 
2019-07-22 22:47:07,812 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 22:47:07,813 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:47:07,813 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 22:47:07,814 DEBUG (RevertController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 23,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "11111",
    "writerDate" : 1562025600000
  }, {
    "revertId" : 31,
    "messageId" : 1,
    "content" : "1111",
    "writer" : "111",
    "writerDate" : 1563235200000
  } ]
}
2019-07-22 22:47:07,814 DEBUG (MessageController.java:49)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }
}
2019-07-22 22:47:45,998 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 22:47:45,999 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:47:46,002 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 22:47:46,003 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 22:47:47,250 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users 
2019-07-22 22:47:47,250 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:47:47,256 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 22:47:47,257 DEBUG (UsersController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 1
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "我",
    "password" : "1234",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "罗军",
    "password" : "123",
    "status" : 1
  } ]
}
2019-07-22 22:47:50,347 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by newsId 
2019-07-22 22:47:50,348 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:47:50,352 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 22:47:50,353 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  } ]
}
2019-07-22 22:47:54,445 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news order by newsId 
2019-07-22 22:47:54,445 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:47:54,450 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 22:47:54,451 DEBUG (NewsController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 6,
    "title" : "国庆期间降价最猛八款数码相机",
    "content" : "三星S系列一直是抢占低端市场的主打产品，其低廉的价格，丰富的功能占据了一定的市场，这让一些国际大品牌都对S系列无措。现在降价促销其中一款机型S750，降幅高达200元，目前仅1180元的价格还送1GB SD卡。",
    "writeDate" : 1536105600000
  }, {
    "newsId" : 7,
    "title" : "国庆各品牌最好卖的相机",
    "content" : "七天的国庆长w小编一样有一种意犹...",
    "writeDate" : 1539216000000
  }, {
    "newsId" : 8,
    "title" : "单反与镜",
    "content" : "尽管不少朋友都选择在过节期间消费一些奢侈的数码产品——比如我",
    "writeDate" : 1530662400000
  }, {
    "newsId" : 66,
    "title" : "今天下大雨",
    "content" : "今天下大雨 大雨",
    "writeDate" : 1563667200000
  } ]
}
2019-07-22 22:49:32,791 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message 
2019-07-22 22:49:32,791 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 22:49:32,794 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 22:49:32,795 DEBUG (MessageController.java:23)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563321600000,
    "count" : 1
  }, {
    "messageId" : 2,
    "title" : "(NULL品红服务宗旨是什么)",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562889600000,
    "count" : 0
  }, {
    "messageId" : 3,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "xss",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 5,
    "title" : "haha",
    "content" : "haha",
    "writer" : "hahah",
    "writeDate" : 1546992000000,
    "count" : 11
  }, {
    "messageId" : 7,
    "title" : "航空母舰",
    "content" : "出行利器",
    "writer" : "哈哈",
    "writeDate" : 1563206400000,
    "count" : 100
  }, {
    "messageId" : 15,
    "title" : "测试",
    "content" : "测试内容",
    "writer" : "作者",
    "writeDate" : 1563148800000,
    "count" : 100
  } ]
}
2019-07-22 22:53:25,874 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 22:53:25,875 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 22:53:25,876 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:53:25,877 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-22 22:53:25,877 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 22:53:25,879 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:53:25,879 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 22:53:25,879 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 22:53:25,881 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:54:34,523 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 22:54:34,524 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 22:54:34,525 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:54:34,526 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-22 22:54:34,526 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 22:54:34,528 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:54:34,528 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 22:54:34,529 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 22:54:34,531 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:55:34,549 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 22:55:34,550 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 22:55:34,551 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:55:34,551 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-22 22:55:34,552 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 22:55:34,553 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:55:34,553 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 22:55:34,554 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 22:55:34,555 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:01:29,885 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 23:01:29,886 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 23:01:29,888 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:01:29,889 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-22 23:01:29,889 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 23:01:29,890 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:01:29,891 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 23:01:29,891 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 罗军(String)
2019-07-22 23:01:29,893 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:01:40,705 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 23:01:40,706 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-22 23:01:40,706 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:01:40,706 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select status from users where userName = ? 
2019-07-22 23:01:40,706 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-22 23:01:40,707 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:01:40,708 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select password from users where userName = ? 
2019-07-22 23:01:40,708 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-22 23:01:40,709 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
